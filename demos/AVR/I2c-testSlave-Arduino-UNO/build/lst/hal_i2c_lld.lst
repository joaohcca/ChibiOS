   1               		.file	"hal_i2c_lld.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.__vector_24,"ax",@progbits
  11               	.global	__vector_24
  13               	__vector_24:
  14               	.LFB180:
  15               		.file 1 "../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c"
   1:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*
   2:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
   4:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     You may obtain a copy of the License at
   7:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
   8:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  10:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     limitations under the License.
  15:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** */
  16:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  17:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
  18:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @file    I2Cv1/hal_i2c_lld.c
  19:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   AVR/MEGA I2C subsystem low level driver source.
  20:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
  21:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @addtogroup I2C
  22:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @{
  23:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
  24:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #include "hal.h"
  25:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  26:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if HAL_USE_I2C || defined(__DOXYGEN__)
  27:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  28:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  29:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local definitions.                                                */
  30:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  31:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  32:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  33:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver exported variables.                                               */
  34:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  35:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  36:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /** @brief I2C driver identifier. */
  37:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if AVR_I2C_USE_I2C1 || defined(__DOXYGEN__)
  38:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** I2CDriver I2CD1;
  39:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #endif
  40:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  41:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  42:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local variables and types.                                        */
  43:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  44:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  45:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  46:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local functions.                                                  */
  47:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  48:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  49:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  50:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver interrupt handlers.   TWI_MASTER_RX_DATA_ACK                                            *
  51:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  52:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  53:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if AVR_I2C_USE_I2C1 || defined(__DOXYGEN__)
  54:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
  55:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   I2C event interrupt handler.
  56:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
  57:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
  58:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
  59:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(TWI_vect) {
  16               		.loc 1 59 0
  17               		.cfi_startproc
  18 0000 1F92      		push r1
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 1, -2
  22 0002 0F92      		push r0
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 0, -3
  26 0004 0FB6      		in r0,__SREG__
  27 0006 0F92      		push r0
  28 0008 1124      		clr __zero_reg__
  29 000a 2F93      		push r18
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 18, -4
  33 000c 3F93      		push r19
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 6
  36               		.cfi_offset 19, -5
  37 000e 4F93      		push r20
  38               	.LCFI4:
  39               		.cfi_def_cfa_offset 7
  40               		.cfi_offset 20, -6
  41 0010 5F93      		push r21
  42               	.LCFI5:
  43               		.cfi_def_cfa_offset 8
  44               		.cfi_offset 21, -7
  45 0012 6F93      		push r22
  46               	.LCFI6:
  47               		.cfi_def_cfa_offset 9
  48               		.cfi_offset 22, -8
  49 0014 7F93      		push r23
  50               	.LCFI7:
  51               		.cfi_def_cfa_offset 10
  52               		.cfi_offset 23, -9
  53 0016 8F93      		push r24
  54               	.LCFI8:
  55               		.cfi_def_cfa_offset 11
  56               		.cfi_offset 24, -10
  57 0018 9F93      		push r25
  58               	.LCFI9:
  59               		.cfi_def_cfa_offset 12
  60               		.cfi_offset 25, -11
  61 001a AF93      		push r26
  62               	.LCFI10:
  63               		.cfi_def_cfa_offset 13
  64               		.cfi_offset 26, -12
  65 001c BF93      		push r27
  66               	.LCFI11:
  67               		.cfi_def_cfa_offset 14
  68               		.cfi_offset 27, -13
  69 001e EF93      		push r30
  70               	.LCFI12:
  71               		.cfi_def_cfa_offset 15
  72               		.cfi_offset 30, -14
  73 0020 FF93      		push r31
  74               	.LCFI13:
  75               		.cfi_def_cfa_offset 16
  76               		.cfi_offset 31, -15
  77               	/* prologue: Signal */
  78               	/* frame size = 0 */
  79               	/* stack size = 15 */
  80               	.L__stack_usage = 15
  60:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
  81               		.loc 1 60 0
  82 0022 81E0      		ldi r24,lo8(1)
  83 0024 8093 0000 		sts __avr_in_isr,r24
  84               	.LVL0:
  61:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  62:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   I2CDriver *i2cp = &I2CD1;
  63:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  64:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   switch (TWSR & 0xF8) {
  85               		.loc 1 64 0
  86 0028 8091 B900 		lds r24,185
  87 002c E82F      		mov r30,r24
  88 002e E87F      		andi r30,lo8(-8)
  89 0030 8E2F      		mov r24,r30
  90 0032 90E0      		ldi r25,0
  91 0034 893C      		cpi r24,-55
  92 0036 9105      		cpc r25,__zero_reg__
  93 0038 00F0      		brlo .L70
  94               	.L2:
  65:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_START: /*0x08*/
  66:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_REPEAT_START: /*0x10*/
  67:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = (i2cp->addr << 1);
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if ((i2cp->txbuf == NULL) || (i2cp->txbytes == 0) || (i2cp->txidx == i2cp->txbytes)) {
  69:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
  70:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  71:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  72:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  73:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_ADDR_ACK:
  74:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_DATA_ACK:
  75:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->txidx < i2cp->txbytes) {
  76:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR = i2cp->txbuf[i2cp->txidx++];
  77:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  78:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  79:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       if (i2cp->rxbuf && i2cp->rxbytes) {
  81:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  82:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
  83:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       else {
  84:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
  85:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         _i2c_wakeup_isr(i2cp);
  86:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
  87:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  88:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  89:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_ADDR_ACK: /*0x40*/
  90:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
  91:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));/*se não puder receber mais va pro 0x58*/
  92:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  93:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
  94:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));/*se puder 0x50*/
  95:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  96:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  97:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_DATA_ACK: /*0x50*/
  98:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxbuf[i2cp->rxidx++] = TWDR; /*atualiza TWDR*/
  99:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) { 
 100:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE)); /* ir para 0x58*/
 101:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 102:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
 103:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE)); /*se puder receber envia ack
 104:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 105:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 106:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_DATA_NACK: /*0x58*/
 107:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxbuf[i2cp->rxidx] = TWDR; /*atualiza TWDR*/
 108:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN)); /*ações no TWCR*/
 109:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 110:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_ADDR_NACK:
 111:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_DATA_NACK:
 112:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_ADDR_NACK:
 113:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_ACK_FAILURE;
 114:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 115:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 116:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*slave recieve status*/
 117:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_ADDR_ACK: /*ref $60*/
 118:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*review cases where state 0x60 should return nack (not initialize ?)
 119:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   same decision making on the 0x68 and 0x70)*/
 120:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx ==(i2cp->rxbytes -1)){
 121:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 122:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 123:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else{
 124:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEA)| (1 << TWIE));
 125:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 126:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 127:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_POST_ARB_LOST: /*ref $68*/
 128:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx ==(i2cp->rxbytes -1)){
 129:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 130:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 131:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else{
 132:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEA)| (1 << TWIE));
 133:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 134:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_DATA_ACK: /*ref $80*/
 135:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*Read the data from the bus to the buffer rxbuf recieves the byte from TWDR*/
 136:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf[i2cp->rxidx++] = TWDR; /*STM32 buffer structure*/
 137:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*send nack master move to $88*/
 138:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
 139:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 140:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 141:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*buffer can recieve more bytes stay in $80*/
 142:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else {
 143:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxidx++;
 144:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 145:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 146:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 147:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_DATA_NACK: /*ref $88*/
 148:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf[i2cp->rxidx++] = TWDR; /*STM32 buffer structure*/
 149:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 150:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*implement decision making past communication with flags*/
 151:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 152:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 153:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    _i2c_wakeup_isr(i2cp); /*wake up thread*/
 154:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 155:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_STOP:
 156:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*default to retain addr and not send start*/
 157:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE) | (1<<TWEA));
 158:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 159:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*slave transmitt status*/
 160:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_ADDR_ACK: /*ref $A8*/
 161:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*load data from buffer to TWDR*/
 162:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*check if there's more data to transmmit*/
 163:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx]; /*STM32 buffer structure*/
 164:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****        if (i2cp->txidx ==(i2cp->txbytes -1)){
 165:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWIE));
 166:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 167:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 168:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->txidx++;
 169:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 170:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 171:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 172:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_POST_ARB_LOST:/*ref $B0*/
 173:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*load data and check for nack transmission*/
 174:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx];/*STM32 buffer structure*/
 175:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 176:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 177:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 178:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 179:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 180:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 181:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 182:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_DATA_ACK: /*ref $B8*/
 183:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx++]; /*STM32 buffer structure*/
 184:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 185:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 186:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 187:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 188:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 189:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 190:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 191:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_DATA_NACK: /*ref $C0*/
 192:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*implement decision making past communication with flags*/
 193:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 194:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 195:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 196:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_LAST_DATA_ACK: /*ref $C8*/
 197:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*implement decision making past communication with flags*/
 198:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 199:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 200:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    break;
 201:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_ARBITRATION_LOST:
 202:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 203:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 204:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_BUS_ERROR:
 205:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 206:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 207:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   default:
 208:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     /* FIXME: only gets here if there are other MASTERs in the bus. */
 209:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
  95               		.loc 1 209 0
  96 003a 84E9      		ldi r24,lo8(-108)
  97 003c 8093 BC00 		sts 188,r24
  98               	.LVL1:
  99               	.LBB48:
 100               	.LBB49:
 101               		.file 2 "../../../os/hal/osal/rt/osal.h"
   1:../../../os/hal/osal/rt/osal.h **** /*
   2:../../../os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/osal/rt/osal.h **** 
   4:../../../os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:../../../os/hal/osal/rt/osal.h **** 
   8:../../../os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/osal/rt/osal.h **** 
  10:../../../os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/osal/rt/osal.h ****     limitations under the License.
  15:../../../os/hal/osal/rt/osal.h **** */
  16:../../../os/hal/osal/rt/osal.h **** 
  17:../../../os/hal/osal/rt/osal.h **** /**
  18:../../../os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:../../../os/hal/osal/rt/osal.h ****  *
  21:../../../os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:../../../os/hal/osal/rt/osal.h ****  * @{
  23:../../../os/hal/osal/rt/osal.h ****  */
  24:../../../os/hal/osal/rt/osal.h **** 
  25:../../../os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:../../../os/hal/osal/rt/osal.h **** #define OSAL_H
  27:../../../os/hal/osal/rt/osal.h **** 
  28:../../../os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:../../../os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:../../../os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:../../../os/hal/osal/rt/osal.h **** 
  32:../../../os/hal/osal/rt/osal.h **** #include "ch.h"
  33:../../../os/hal/osal/rt/osal.h **** 
  34:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:../../../os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:../../../os/hal/osal/rt/osal.h **** 
  38:../../../os/hal/osal/rt/osal.h **** /**
  39:../../../os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:../../../os/hal/osal/rt/osal.h ****  * @{
  41:../../../os/hal/osal/rt/osal.h ****  */
  42:../../../os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../../os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:../../../os/hal/osal/rt/osal.h **** #endif
  45:../../../os/hal/osal/rt/osal.h **** 
  46:../../../os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../../os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:../../../os/hal/osal/rt/osal.h **** #endif
  49:../../../os/hal/osal/rt/osal.h **** 
  50:../../../os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:../../../os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:../../../os/hal/osal/rt/osal.h **** /** @} */
  53:../../../os/hal/osal/rt/osal.h **** 
  54:../../../os/hal/osal/rt/osal.h **** #if 0
  55:../../../os/hal/osal/rt/osal.h **** /**
  56:../../../os/hal/osal/rt/osal.h ****  * @name    Messages
  57:../../../os/hal/osal/rt/osal.h ****  * @{
  58:../../../os/hal/osal/rt/osal.h ****  */
  59:../../../os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../../os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../../os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../../os/hal/osal/rt/osal.h **** /** @} */
  63:../../../os/hal/osal/rt/osal.h **** #endif
  64:../../../os/hal/osal/rt/osal.h **** 
  65:../../../os/hal/osal/rt/osal.h **** #if 0
  66:../../../os/hal/osal/rt/osal.h **** /**
  67:../../../os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:../../../os/hal/osal/rt/osal.h ****  * @{
  69:../../../os/hal/osal/rt/osal.h ****  */
  70:../../../os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../../os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../../os/hal/osal/rt/osal.h **** /** @} */
  73:../../../os/hal/osal/rt/osal.h **** #endif
  74:../../../os/hal/osal/rt/osal.h **** 
  75:../../../os/hal/osal/rt/osal.h **** /**
  76:../../../os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:../../../os/hal/osal/rt/osal.h ****  * @{
  78:../../../os/hal/osal/rt/osal.h ****  */
  79:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../../os/hal/osal/rt/osal.h **** /** @} */
  83:../../../os/hal/osal/rt/osal.h **** 
  84:../../../os/hal/osal/rt/osal.h **** /**
  85:../../../os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:../../../os/hal/osal/rt/osal.h ****  * @{
  87:../../../os/hal/osal/rt/osal.h ****  */
  88:../../../os/hal/osal/rt/osal.h **** /**
  89:../../../os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../../os/hal/osal/rt/osal.h ****  */
  91:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../../os/hal/osal/rt/osal.h **** 
  93:../../../os/hal/osal/rt/osal.h **** /**
  94:../../../os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../../os/hal/osal/rt/osal.h ****  */
  96:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../../os/hal/osal/rt/osal.h **** 
  98:../../../os/hal/osal/rt/osal.h **** /**
  99:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../../os/hal/osal/rt/osal.h ****  */
 101:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../../os/hal/osal/rt/osal.h **** #else
 104:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../../os/hal/osal/rt/osal.h **** #endif
 106:../../../os/hal/osal/rt/osal.h **** /** @} */
 107:../../../os/hal/osal/rt/osal.h **** 
 108:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:../../../os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:../../../os/hal/osal/rt/osal.h **** 
 112:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:../../../os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:../../../os/hal/osal/rt/osal.h **** 
 116:../../../os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../../os/hal/osal/rt/osal.h **** #endif
 121:../../../os/hal/osal/rt/osal.h **** 
 122:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:../../../os/hal/osal/rt/osal.h **** #endif
 125:../../../os/hal/osal/rt/osal.h **** 
 126:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:../../../os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:../../../os/hal/osal/rt/osal.h **** 
 130:../../../os/hal/osal/rt/osal.h **** #if 0
 131:../../../os/hal/osal/rt/osal.h **** /**
 132:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:../../../os/hal/osal/rt/osal.h ****  */
 134:../../../os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:../../../os/hal/osal/rt/osal.h **** #endif
 136:../../../os/hal/osal/rt/osal.h **** 
 137:../../../os/hal/osal/rt/osal.h **** #if 0
 138:../../../os/hal/osal/rt/osal.h **** /**
 139:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:../../../os/hal/osal/rt/osal.h ****  */
 141:../../../os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:../../../os/hal/osal/rt/osal.h **** #endif
 143:../../../os/hal/osal/rt/osal.h **** 
 144:../../../os/hal/osal/rt/osal.h **** #if 0
 145:../../../os/hal/osal/rt/osal.h **** /**
 146:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:../../../os/hal/osal/rt/osal.h ****  */
 148:../../../os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:../../../os/hal/osal/rt/osal.h **** #endif
 150:../../../os/hal/osal/rt/osal.h **** 
 151:../../../os/hal/osal/rt/osal.h **** #if 0
 152:../../../os/hal/osal/rt/osal.h **** /**
 153:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:../../../os/hal/osal/rt/osal.h ****  */
 155:../../../os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:../../../os/hal/osal/rt/osal.h **** #endif
 157:../../../os/hal/osal/rt/osal.h **** 
 158:../../../os/hal/osal/rt/osal.h **** #if 0
 159:../../../os/hal/osal/rt/osal.h **** /**
 160:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:../../../os/hal/osal/rt/osal.h ****  */
 162:../../../os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:../../../os/hal/osal/rt/osal.h **** #endif
 164:../../../os/hal/osal/rt/osal.h **** 
 165:../../../os/hal/osal/rt/osal.h **** #if 0
 166:../../../os/hal/osal/rt/osal.h **** /**
 167:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:../../../os/hal/osal/rt/osal.h ****  */
 169:../../../os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:../../../os/hal/osal/rt/osal.h **** #endif
 171:../../../os/hal/osal/rt/osal.h **** 
 172:../../../os/hal/osal/rt/osal.h **** #if 0
 173:../../../os/hal/osal/rt/osal.h **** /**
 174:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:../../../os/hal/osal/rt/osal.h ****  */
 176:../../../os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:../../../os/hal/osal/rt/osal.h **** #endif
 178:../../../os/hal/osal/rt/osal.h **** 
 179:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:../../../os/hal/osal/rt/osal.h **** /**
 181:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:../../../os/hal/osal/rt/osal.h ****  */
 188:../../../os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:../../../os/hal/osal/rt/osal.h **** 
 190:../../../os/hal/osal/rt/osal.h **** /**
 191:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:../../../os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:../../../os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:../../../os/hal/osal/rt/osal.h ****  */
 195:../../../os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:../../../os/hal/osal/rt/osal.h **** 
 197:../../../os/hal/osal/rt/osal.h **** /**
 198:../../../os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:../../../os/hal/osal/rt/osal.h ****  */
 205:../../../os/hal/osal/rt/osal.h **** struct event_source {
 206:../../../os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:../../../os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:../../../os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:../../../os/hal/osal/rt/osal.h **** };
 210:../../../os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:../../../os/hal/osal/rt/osal.h **** 
 212:../../../os/hal/osal/rt/osal.h **** /**
 213:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:../../../os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:../../../os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:../../../os/hal/osal/rt/osal.h ****  */
 217:../../../os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:../../../os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:../../../os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:../../../os/hal/osal/rt/osal.h **** #else
 221:../../../os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:../../../os/hal/osal/rt/osal.h **** #endif
 223:../../../os/hal/osal/rt/osal.h **** 
 224:../../../os/hal/osal/rt/osal.h **** #if 0
 225:../../../os/hal/osal/rt/osal.h **** /**
 226:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:../../../os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:../../../os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:../../../os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:../../../os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:../../../os/hal/osal/rt/osal.h ****  */
 232:../../../os/hal/osal/rt/osal.h **** typedef struct {
 233:../../../os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:../../../os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:../../../os/hal/osal/rt/osal.h **** #endif
 236:../../../os/hal/osal/rt/osal.h **** 
 237:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:../../../os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:../../../os/hal/osal/rt/osal.h **** 
 241:../../../os/hal/osal/rt/osal.h **** /**
 242:../../../os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:../../../os/hal/osal/rt/osal.h ****  * @{
 244:../../../os/hal/osal/rt/osal.h ****  */
 245:../../../os/hal/osal/rt/osal.h **** /**
 246:../../../os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:../../../os/hal/osal/rt/osal.h ****  *          message and halts.
 249:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:../../../os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:../../../os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:../../../os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:../../../os/hal/osal/rt/osal.h ****  *
 254:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:../../../os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:../../../os/hal/osal/rt/osal.h ****  *
 257:../../../os/hal/osal/rt/osal.h ****  * @api
 258:../../../os/hal/osal/rt/osal.h ****  */
 259:../../../os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:../../../os/hal/osal/rt/osal.h **** 
 261:../../../os/hal/osal/rt/osal.h **** /**
 262:../../../os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:../../../os/hal/osal/rt/osal.h ****  *          is enabled.
 266:../../../os/hal/osal/rt/osal.h ****  *
 267:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:../../../os/hal/osal/rt/osal.h ****  *
 269:../../../os/hal/osal/rt/osal.h ****  * @api
 270:../../../os/hal/osal/rt/osal.h ****  */
 271:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:../../../os/hal/osal/rt/osal.h **** 
 273:../../../os/hal/osal/rt/osal.h **** /**
 274:../../../os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:../../../os/hal/osal/rt/osal.h ****  */
 277:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:../../../os/hal/osal/rt/osal.h **** 
 279:../../../os/hal/osal/rt/osal.h **** /**
 280:../../../os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:../../../os/hal/osal/rt/osal.h ****  */
 283:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:../../../os/hal/osal/rt/osal.h **** /** @} */
 285:../../../os/hal/osal/rt/osal.h **** 
 286:../../../os/hal/osal/rt/osal.h **** /**
 287:../../../os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:../../../os/hal/osal/rt/osal.h ****  * @{
 289:../../../os/hal/osal/rt/osal.h ****  */
 290:../../../os/hal/osal/rt/osal.h **** /**
 291:../../../os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:../../../os/hal/osal/rt/osal.h ****  */
 293:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:../../../os/hal/osal/rt/osal.h **** 
 295:../../../os/hal/osal/rt/osal.h **** /**
 296:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:../../../os/hal/osal/rt/osal.h ****  */
 299:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:../../../os/hal/osal/rt/osal.h **** 
 301:../../../os/hal/osal/rt/osal.h **** /**
 302:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:../../../os/hal/osal/rt/osal.h ****  */
 305:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:../../../os/hal/osal/rt/osal.h **** 
 307:../../../os/hal/osal/rt/osal.h **** /**
 308:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:../../../os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:../../../os/hal/osal/rt/osal.h ****  *
 311:../../../os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:../../../os/hal/osal/rt/osal.h ****  */
 313:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:../../../os/hal/osal/rt/osal.h **** /** @} */
 315:../../../os/hal/osal/rt/osal.h **** 
 316:../../../os/hal/osal/rt/osal.h **** /**
 317:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:../../../os/hal/osal/rt/osal.h ****  * @{
 319:../../../os/hal/osal/rt/osal.h ****  */
 320:../../../os/hal/osal/rt/osal.h **** /**
 321:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:../../../os/hal/osal/rt/osal.h ****  *
 325:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:../../../os/hal/osal/rt/osal.h ****  *
 328:../../../os/hal/osal/rt/osal.h ****  * @api
 329:../../../os/hal/osal/rt/osal.h ****  */
 330:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:../../../os/hal/osal/rt/osal.h **** 
 332:../../../os/hal/osal/rt/osal.h **** /**
 333:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:../../../os/hal/osal/rt/osal.h ****  *
 337:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:../../../os/hal/osal/rt/osal.h ****  *
 340:../../../os/hal/osal/rt/osal.h ****  * @api
 341:../../../os/hal/osal/rt/osal.h ****  */
 342:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:../../../os/hal/osal/rt/osal.h **** 
 344:../../../os/hal/osal/rt/osal.h **** /**
 345:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:../../../os/hal/osal/rt/osal.h ****  *
 349:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:../../../os/hal/osal/rt/osal.h ****  *
 352:../../../os/hal/osal/rt/osal.h ****  * @api
 353:../../../os/hal/osal/rt/osal.h ****  */
 354:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:../../../os/hal/osal/rt/osal.h **** /** @} */
 356:../../../os/hal/osal/rt/osal.h **** 
 357:../../../os/hal/osal/rt/osal.h **** /**
 358:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:../../../os/hal/osal/rt/osal.h ****  * @{
 360:../../../os/hal/osal/rt/osal.h ****  */
 361:../../../os/hal/osal/rt/osal.h **** /**
 362:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:../../../os/hal/osal/rt/osal.h ****  *
 366:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:../../../os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:../../../os/hal/osal/rt/osal.h ****  *
 370:../../../os/hal/osal/rt/osal.h ****  * @api
 371:../../../os/hal/osal/rt/osal.h ****  */
 372:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:../../../os/hal/osal/rt/osal.h **** 
 374:../../../os/hal/osal/rt/osal.h **** /**
 375:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:../../../os/hal/osal/rt/osal.h ****  *
 380:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:../../../os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:../../../os/hal/osal/rt/osal.h ****  *
 384:../../../os/hal/osal/rt/osal.h ****  * @api
 385:../../../os/hal/osal/rt/osal.h ****  */
 386:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:../../../os/hal/osal/rt/osal.h **** 
 388:../../../os/hal/osal/rt/osal.h **** /**
 389:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:../../../os/hal/osal/rt/osal.h ****  *
 394:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:../../../os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:../../../os/hal/osal/rt/osal.h ****  *
 398:../../../os/hal/osal/rt/osal.h ****  * @api
 399:../../../os/hal/osal/rt/osal.h ****  */
 400:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:../../../os/hal/osal/rt/osal.h **** /** @} */
 402:../../../os/hal/osal/rt/osal.h **** 
 403:../../../os/hal/osal/rt/osal.h **** /**
 404:../../../os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:../../../os/hal/osal/rt/osal.h ****  * @{
 406:../../../os/hal/osal/rt/osal.h ****  */
 407:../../../os/hal/osal/rt/osal.h **** /**
 408:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:../../../os/hal/osal/rt/osal.h ****  *
 413:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:../../../os/hal/osal/rt/osal.h ****  *
 415:../../../os/hal/osal/rt/osal.h ****  * @api
 416:../../../os/hal/osal/rt/osal.h ****  */
 417:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:../../../os/hal/osal/rt/osal.h **** 
 419:../../../os/hal/osal/rt/osal.h **** /**
 420:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:../../../os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:../../../os/hal/osal/rt/osal.h ****  *
 426:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:../../../os/hal/osal/rt/osal.h ****  *
 428:../../../os/hal/osal/rt/osal.h ****  * @api
 429:../../../os/hal/osal/rt/osal.h ****  */
 430:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:../../../os/hal/osal/rt/osal.h **** 
 432:../../../os/hal/osal/rt/osal.h **** /**
 433:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:../../../os/hal/osal/rt/osal.h ****  *          microseconds.
 435:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:../../../os/hal/osal/rt/osal.h ****  *
 439:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:../../../os/hal/osal/rt/osal.h ****  *
 441:../../../os/hal/osal/rt/osal.h ****  * @api
 442:../../../os/hal/osal/rt/osal.h ****  */
 443:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:../../../os/hal/osal/rt/osal.h **** /** @} */
 445:../../../os/hal/osal/rt/osal.h **** 
 446:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:../../../os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:../../../os/hal/osal/rt/osal.h **** 
 450:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:../../../os/hal/osal/rt/osal.h **** extern "C" {
 452:../../../os/hal/osal/rt/osal.h **** #endif
 453:../../../os/hal/osal/rt/osal.h **** 
 454:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:../../../os/hal/osal/rt/osal.h **** }
 456:../../../os/hal/osal/rt/osal.h **** #endif
 457:../../../os/hal/osal/rt/osal.h **** 
 458:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:../../../os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:../../../os/hal/osal/rt/osal.h **** 
 462:../../../os/hal/osal/rt/osal.h **** /**
 463:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:../../../os/hal/osal/rt/osal.h ****  *
 465:../../../os/hal/osal/rt/osal.h ****  * @api
 466:../../../os/hal/osal/rt/osal.h ****  */
 467:../../../os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:../../../os/hal/osal/rt/osal.h **** 
 469:../../../os/hal/osal/rt/osal.h **** }
 470:../../../os/hal/osal/rt/osal.h **** 
 471:../../../os/hal/osal/rt/osal.h **** /**
 472:../../../os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:../../../os/hal/osal/rt/osal.h ****  *
 474:../../../os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:../../../os/hal/osal/rt/osal.h ****  *
 476:../../../os/hal/osal/rt/osal.h ****  * @api
 477:../../../os/hal/osal/rt/osal.h ****  */
 478:../../../os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:../../../os/hal/osal/rt/osal.h **** 
 480:../../../os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:../../../os/hal/osal/rt/osal.h **** }
 482:../../../os/hal/osal/rt/osal.h **** 
 483:../../../os/hal/osal/rt/osal.h **** /**
 484:../../../os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:../../../os/hal/osal/rt/osal.h ****  *
 486:../../../os/hal/osal/rt/osal.h ****  * @special
 487:../../../os/hal/osal/rt/osal.h ****  */
 488:../../../os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:../../../os/hal/osal/rt/osal.h **** 
 490:../../../os/hal/osal/rt/osal.h ****   chSysDisable();
 491:../../../os/hal/osal/rt/osal.h **** }
 492:../../../os/hal/osal/rt/osal.h **** 
 493:../../../os/hal/osal/rt/osal.h **** /**
 494:../../../os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:../../../os/hal/osal/rt/osal.h ****  *
 496:../../../os/hal/osal/rt/osal.h ****  * @special
 497:../../../os/hal/osal/rt/osal.h ****  */
 498:../../../os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:../../../os/hal/osal/rt/osal.h **** 
 500:../../../os/hal/osal/rt/osal.h ****   chSysEnable();
 501:../../../os/hal/osal/rt/osal.h **** }
 502:../../../os/hal/osal/rt/osal.h **** 
 503:../../../os/hal/osal/rt/osal.h **** /**
 504:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:../../../os/hal/osal/rt/osal.h ****  *
 507:../../../os/hal/osal/rt/osal.h ****  * @special
 508:../../../os/hal/osal/rt/osal.h ****  */
 509:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:../../../os/hal/osal/rt/osal.h **** 
 511:../../../os/hal/osal/rt/osal.h ****   chSysLock();
 512:../../../os/hal/osal/rt/osal.h **** }
 513:../../../os/hal/osal/rt/osal.h **** 
 514:../../../os/hal/osal/rt/osal.h **** /**
 515:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:../../../os/hal/osal/rt/osal.h ****  *
 518:../../../os/hal/osal/rt/osal.h ****  * @special
 519:../../../os/hal/osal/rt/osal.h ****  */
 520:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:../../../os/hal/osal/rt/osal.h **** 
 522:../../../os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:../../../os/hal/osal/rt/osal.h **** }
 524:../../../os/hal/osal/rt/osal.h **** 
 525:../../../os/hal/osal/rt/osal.h **** /**
 526:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:../../../os/hal/osal/rt/osal.h ****  *
 529:../../../os/hal/osal/rt/osal.h ****  * @special
 530:../../../os/hal/osal/rt/osal.h ****  */
 531:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:../../../os/hal/osal/rt/osal.h **** 
 533:../../../os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:../../../os/hal/osal/rt/osal.h **** }
 535:../../../os/hal/osal/rt/osal.h **** 
 536:../../../os/hal/osal/rt/osal.h **** /**
 537:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:../../../os/hal/osal/rt/osal.h ****  *
 540:../../../os/hal/osal/rt/osal.h ****  * @special
 541:../../../os/hal/osal/rt/osal.h ****  */
 542:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:../../../os/hal/osal/rt/osal.h **** 
 544:../../../os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:../../../os/hal/osal/rt/osal.h **** }
 546:../../../os/hal/osal/rt/osal.h **** 
 547:../../../os/hal/osal/rt/osal.h **** /**
 548:../../../os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:../../../os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:../../../os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:../../../os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:../../../os/hal/osal/rt/osal.h ****  *          is known.
 553:../../../os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:../../../os/hal/osal/rt/osal.h ****  *
 555:../../../os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:../../../os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:../../../os/hal/osal/rt/osal.h ****  *
 558:../../../os/hal/osal/rt/osal.h ****  * @xclass
 559:../../../os/hal/osal/rt/osal.h ****  */
 560:../../../os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:../../../os/hal/osal/rt/osal.h **** 
 562:../../../os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:../../../os/hal/osal/rt/osal.h **** }
 564:../../../os/hal/osal/rt/osal.h **** 
 565:../../../os/hal/osal/rt/osal.h **** /**
 566:../../../os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:../../../os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:../../../os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:../../../os/hal/osal/rt/osal.h ****  *
 570:../../../os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:../../../os/hal/osal/rt/osal.h ****  *
 572:../../../os/hal/osal/rt/osal.h ****  * @xclass
 573:../../../os/hal/osal/rt/osal.h ****  */
 574:../../../os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:../../../os/hal/osal/rt/osal.h **** 
 576:../../../os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:../../../os/hal/osal/rt/osal.h **** }
 578:../../../os/hal/osal/rt/osal.h **** 
 579:../../../os/hal/osal/rt/osal.h **** /**
 580:../../../os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:../../../os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:../../../os/hal/osal/rt/osal.h ****  *          value.
 583:../../../os/hal/osal/rt/osal.h ****  *
 584:../../../os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:../../../os/hal/osal/rt/osal.h ****  *
 586:../../../os/hal/osal/rt/osal.h ****  * @xclass
 587:../../../os/hal/osal/rt/osal.h ****  */
 588:../../../os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:../../../os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:../../../os/hal/osal/rt/osal.h **** 
 591:../../../os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:../../../os/hal/osal/rt/osal.h **** }
 593:../../../os/hal/osal/rt/osal.h **** #endif
 594:../../../os/hal/osal/rt/osal.h **** 
 595:../../../os/hal/osal/rt/osal.h **** /**
 596:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:../../../os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:../../../os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:../../../os/hal/osal/rt/osal.h ****  */
 600:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:../../../os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:../../../os/hal/osal/rt/osal.h **** 
 603:../../../os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:../../../os/hal/osal/rt/osal.h **** }
 605:../../../os/hal/osal/rt/osal.h **** #endif
 606:../../../os/hal/osal/rt/osal.h **** 
 607:../../../os/hal/osal/rt/osal.h **** /**
 608:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:../../../os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:../../../os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:../../../os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:../../../os/hal/osal/rt/osal.h ****  *
 614:../../../os/hal/osal/rt/osal.h ****  * @sclass
 615:../../../os/hal/osal/rt/osal.h ****  */
 616:../../../os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:../../../os/hal/osal/rt/osal.h **** 
 618:../../../os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:../../../os/hal/osal/rt/osal.h **** }
 620:../../../os/hal/osal/rt/osal.h **** 
 621:../../../os/hal/osal/rt/osal.h **** /**
 622:../../../os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:../../../os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:../../../os/hal/osal/rt/osal.h ****  *          invocation.
 625:../../../os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:../../../os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:../../../os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:../../../os/hal/osal/rt/osal.h ****  *
 630:../../../os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:../../../os/hal/osal/rt/osal.h ****  *
 632:../../../os/hal/osal/rt/osal.h ****  * @xclass
 633:../../../os/hal/osal/rt/osal.h ****  */
 634:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:../../../os/hal/osal/rt/osal.h **** 
 636:../../../os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:../../../os/hal/osal/rt/osal.h **** }
 638:../../../os/hal/osal/rt/osal.h **** 
 639:../../../os/hal/osal/rt/osal.h **** /**
 640:../../../os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:../../../os/hal/osal/rt/osal.h ****  *
 642:../../../os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:../../../os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:../../../os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:../../../os/hal/osal/rt/osal.h ****  *
 646:../../../os/hal/osal/rt/osal.h ****  * @xclass
 647:../../../os/hal/osal/rt/osal.h ****  */
 648:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:../../../os/hal/osal/rt/osal.h **** 
 651:../../../os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:../../../os/hal/osal/rt/osal.h **** }
 653:../../../os/hal/osal/rt/osal.h **** 
 654:../../../os/hal/osal/rt/osal.h **** /**
 655:../../../os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:../../../os/hal/osal/rt/osal.h ****  *
 657:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:../../../os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:../../../os/hal/osal/rt/osal.h ****  *
 661:../../../os/hal/osal/rt/osal.h ****  * @xclass
 662:../../../os/hal/osal/rt/osal.h ****  */
 663:../../../os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:../../../os/hal/osal/rt/osal.h **** 
 665:../../../os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:../../../os/hal/osal/rt/osal.h **** }
 667:../../../os/hal/osal/rt/osal.h **** 
 668:../../../os/hal/osal/rt/osal.h **** /**
 669:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:../../../os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:../../../os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:../../../os/hal/osal/rt/osal.h ****  *
 674:../../../os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:../../../os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:../../../os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:../../../os/hal/osal/rt/osal.h ****  *
 680:../../../os/hal/osal/rt/osal.h ****  * @xclass
 681:../../../os/hal/osal/rt/osal.h ****  */
 682:../../../os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:../../../os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:../../../os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:../../../os/hal/osal/rt/osal.h **** 
 686:../../../os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:../../../os/hal/osal/rt/osal.h **** }
 688:../../../os/hal/osal/rt/osal.h **** 
 689:../../../os/hal/osal/rt/osal.h **** /**
 690:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:../../../os/hal/osal/rt/osal.h ****  *
 692:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:../../../os/hal/osal/rt/osal.h ****  *                      .
 698:../../../os/hal/osal/rt/osal.h ****  *
 699:../../../os/hal/osal/rt/osal.h ****  * @sclass
 700:../../../os/hal/osal/rt/osal.h ****  */
 701:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:../../../os/hal/osal/rt/osal.h **** 
 703:../../../os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:../../../os/hal/osal/rt/osal.h **** }
 705:../../../os/hal/osal/rt/osal.h **** 
 706:../../../os/hal/osal/rt/osal.h **** /**
 707:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:../../../os/hal/osal/rt/osal.h ****  *
 709:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:../../../os/hal/osal/rt/osal.h ****  *                      .
 715:../../../os/hal/osal/rt/osal.h ****  *
 716:../../../os/hal/osal/rt/osal.h ****  * @api
 717:../../../os/hal/osal/rt/osal.h ****  */
 718:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:../../../os/hal/osal/rt/osal.h **** 
 720:../../../os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:../../../os/hal/osal/rt/osal.h **** }
 722:../../../os/hal/osal/rt/osal.h **** 
 723:../../../os/hal/osal/rt/osal.h **** /**
 724:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:../../../os/hal/osal/rt/osal.h ****  *          context.
 727:../../../os/hal/osal/rt/osal.h ****  *
 728:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:../../../os/hal/osal/rt/osal.h ****  *
 731:../../../os/hal/osal/rt/osal.h ****  * @sclass
 732:../../../os/hal/osal/rt/osal.h ****  */
 733:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:../../../os/hal/osal/rt/osal.h **** 
 735:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:../../../os/hal/osal/rt/osal.h **** }
 737:../../../os/hal/osal/rt/osal.h **** 
 738:../../../os/hal/osal/rt/osal.h **** /**
 739:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:../../../os/hal/osal/rt/osal.h ****  *          context.
 742:../../../os/hal/osal/rt/osal.h ****  *
 743:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:../../../os/hal/osal/rt/osal.h ****  *                        state.
 748:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 751:../../../os/hal/osal/rt/osal.h ****  *                      .
 752:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:../../../os/hal/osal/rt/osal.h ****  *
 755:../../../os/hal/osal/rt/osal.h ****  * @sclass
 756:../../../os/hal/osal/rt/osal.h ****  */
 757:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:../../../os/hal/osal/rt/osal.h **** 
 760:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:../../../os/hal/osal/rt/osal.h **** }
 762:../../../os/hal/osal/rt/osal.h **** 
 763:../../../os/hal/osal/rt/osal.h **** /**
 764:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:../../../os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:../../../os/hal/osal/rt/osal.h ****  *          ISR context.
 767:../../../os/hal/osal/rt/osal.h ****  *
 768:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:../../../os/hal/osal/rt/osal.h ****  *
 771:../../../os/hal/osal/rt/osal.h ****  * @iclass
 772:../../../os/hal/osal/rt/osal.h ****  */
 773:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:../../../os/hal/osal/rt/osal.h **** 
 775:../../../os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 102               		.loc 2 775 0
 103 0040 6EEF      		ldi r22,lo8(-2)
 104 0042 7FEF      		ldi r23,lo8(-1)
 105 0044 80E0      		ldi r24,lo8(I2CD1+12)
 106 0046 90E0      		ldi r25,hi8(I2CD1+12)
 107               	.LVL2:
 108 0048 0E94 0000 		call chThdResumeI
 109               	.LVL3:
 110 004c 8091 0000 		lds r24,I2CD1+3
 111               	.LVL4:
 112               	.L24:
 113               	.LBE49:
 114               	.LBE48:
 210:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 211:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 212:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 213:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->errors != I2C_NO_ERROR) {
 115               		.loc 1 213 0
 116 0050 8111      		cpse r24,__zero_reg__
 117 0052 00C0      		rjmp .L38
 118               	.L36:
 214:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
 215:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 216:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 217:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 218:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 119               		.loc 1 218 0
 120 0054 1092 0000 		sts __avr_in_isr,__zero_reg__
 121 0058 0E94 0000 		call chSchIsPreemptionRequired
 122               	.LVL5:
 123 005c 8111      		cpse r24,__zero_reg__
 124               		.loc 1 218 0 is_stmt 0 discriminator 1
 125 005e 0E94 0000 		call chSchDoReschedule
 126               	.LVL6:
 127               	.L1:
 128               	/* epilogue start */
 219:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 129               		.loc 1 219 0 is_stmt 1
 130 0062 FF91      		pop r31
 131 0064 EF91      		pop r30
 132 0066 BF91      		pop r27
 133 0068 AF91      		pop r26
 134 006a 9F91      		pop r25
 135 006c 8F91      		pop r24
 136 006e 7F91      		pop r23
 137 0070 6F91      		pop r22
 138 0072 5F91      		pop r21
 139 0074 4F91      		pop r20
 140 0076 3F91      		pop r19
 141 0078 2F91      		pop r18
 142 007a 0F90      		pop r0
 143 007c 0FBE      		out __SREG__,r0
 144 007e 0F90      		pop r0
 145 0080 1F90      		pop r1
 146 0082 1895      		reti
 147               	.L70:
  64:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_START: /*0x08*/
 148               		.loc 1 64 0
 149 0084 FC01      		movw r30,r24
 150 0086 E050      		subi r30,lo8(-(gs(.L4)))
 151 0088 F040      		sbci r31,hi8(-(gs(.L4)))
 152 008a 0C94 0000 		jmp __tablejump2__
 153               		.section	.progmem.gcc_sw_table.__vector_24,"a",@progbits
 154               		.p2align	1
 155               	.L4:
 156 0000 0000      		.word gs(.L3)
 157 0002 0000      		.word gs(.L2)
 158 0004 0000      		.word gs(.L2)
 159 0006 0000      		.word gs(.L2)
 160 0008 0000      		.word gs(.L2)
 161 000a 0000      		.word gs(.L2)
 162 000c 0000      		.word gs(.L2)
 163 000e 0000      		.word gs(.L2)
 164 0010 0000      		.word gs(.L5)
 165 0012 0000      		.word gs(.L2)
 166 0014 0000      		.word gs(.L2)
 167 0016 0000      		.word gs(.L2)
 168 0018 0000      		.word gs(.L2)
 169 001a 0000      		.word gs(.L2)
 170 001c 0000      		.word gs(.L2)
 171 001e 0000      		.word gs(.L2)
 172 0020 0000      		.word gs(.L5)
 173 0022 0000      		.word gs(.L2)
 174 0024 0000      		.word gs(.L2)
 175 0026 0000      		.word gs(.L2)
 176 0028 0000      		.word gs(.L2)
 177 002a 0000      		.word gs(.L2)
 178 002c 0000      		.word gs(.L2)
 179 002e 0000      		.word gs(.L2)
 180 0030 0000      		.word gs(.L6)
 181 0032 0000      		.word gs(.L2)
 182 0034 0000      		.word gs(.L2)
 183 0036 0000      		.word gs(.L2)
 184 0038 0000      		.word gs(.L2)
 185 003a 0000      		.word gs(.L2)
 186 003c 0000      		.word gs(.L2)
 187 003e 0000      		.word gs(.L2)
 188 0040 0000      		.word gs(.L7)
 189 0042 0000      		.word gs(.L2)
 190 0044 0000      		.word gs(.L2)
 191 0046 0000      		.word gs(.L2)
 192 0048 0000      		.word gs(.L2)
 193 004a 0000      		.word gs(.L2)
 194 004c 0000      		.word gs(.L2)
 195 004e 0000      		.word gs(.L2)
 196 0050 0000      		.word gs(.L6)
 197 0052 0000      		.word gs(.L2)
 198 0054 0000      		.word gs(.L2)
 199 0056 0000      		.word gs(.L2)
 200 0058 0000      		.word gs(.L2)
 201 005a 0000      		.word gs(.L2)
 202 005c 0000      		.word gs(.L2)
 203 005e 0000      		.word gs(.L2)
 204 0060 0000      		.word gs(.L7)
 205 0062 0000      		.word gs(.L2)
 206 0064 0000      		.word gs(.L2)
 207 0066 0000      		.word gs(.L2)
 208 0068 0000      		.word gs(.L2)
 209 006a 0000      		.word gs(.L2)
 210 006c 0000      		.word gs(.L2)
 211 006e 0000      		.word gs(.L2)
 212 0070 0000      		.word gs(.L8)
 213 0072 0000      		.word gs(.L2)
 214 0074 0000      		.word gs(.L2)
 215 0076 0000      		.word gs(.L2)
 216 0078 0000      		.word gs(.L2)
 217 007a 0000      		.word gs(.L2)
 218 007c 0000      		.word gs(.L2)
 219 007e 0000      		.word gs(.L2)
 220 0080 0000      		.word gs(.L66)
 221 0082 0000      		.word gs(.L2)
 222 0084 0000      		.word gs(.L2)
 223 0086 0000      		.word gs(.L2)
 224 0088 0000      		.word gs(.L2)
 225 008a 0000      		.word gs(.L2)
 226 008c 0000      		.word gs(.L2)
 227 008e 0000      		.word gs(.L2)
 228 0090 0000      		.word gs(.L7)
 229 0092 0000      		.word gs(.L2)
 230 0094 0000      		.word gs(.L2)
 231 0096 0000      		.word gs(.L2)
 232 0098 0000      		.word gs(.L2)
 233 009a 0000      		.word gs(.L2)
 234 009c 0000      		.word gs(.L2)
 235 009e 0000      		.word gs(.L2)
 236 00a0 0000      		.word gs(.L10)
 237 00a2 0000      		.word gs(.L2)
 238 00a4 0000      		.word gs(.L2)
 239 00a6 0000      		.word gs(.L2)
 240 00a8 0000      		.word gs(.L2)
 241 00aa 0000      		.word gs(.L2)
 242 00ac 0000      		.word gs(.L2)
 243 00ae 0000      		.word gs(.L2)
 244 00b0 0000      		.word gs(.L11)
 245 00b2 0000      		.word gs(.L2)
 246 00b4 0000      		.word gs(.L2)
 247 00b6 0000      		.word gs(.L2)
 248 00b8 0000      		.word gs(.L2)
 249 00ba 0000      		.word gs(.L2)
 250 00bc 0000      		.word gs(.L2)
 251 00be 0000      		.word gs(.L2)
 252 00c0 0000      		.word gs(.L12)
 253 00c2 0000      		.word gs(.L2)
 254 00c4 0000      		.word gs(.L2)
 255 00c6 0000      		.word gs(.L2)
 256 00c8 0000      		.word gs(.L2)
 257 00ca 0000      		.word gs(.L2)
 258 00cc 0000      		.word gs(.L2)
 259 00ce 0000      		.word gs(.L2)
 260 00d0 0000      		.word gs(.L13)
 261 00d2 0000      		.word gs(.L2)
 262 00d4 0000      		.word gs(.L2)
 263 00d6 0000      		.word gs(.L2)
 264 00d8 0000      		.word gs(.L2)
 265 00da 0000      		.word gs(.L2)
 266 00dc 0000      		.word gs(.L2)
 267 00de 0000      		.word gs(.L2)
 268 00e0 0000      		.word gs(.L2)
 269 00e2 0000      		.word gs(.L2)
 270 00e4 0000      		.word gs(.L2)
 271 00e6 0000      		.word gs(.L2)
 272 00e8 0000      		.word gs(.L2)
 273 00ea 0000      		.word gs(.L2)
 274 00ec 0000      		.word gs(.L2)
 275 00ee 0000      		.word gs(.L2)
 276 00f0 0000      		.word gs(.L2)
 277 00f2 0000      		.word gs(.L2)
 278 00f4 0000      		.word gs(.L2)
 279 00f6 0000      		.word gs(.L2)
 280 00f8 0000      		.word gs(.L2)
 281 00fa 0000      		.word gs(.L2)
 282 00fc 0000      		.word gs(.L2)
 283 00fe 0000      		.word gs(.L2)
 284 0100 0000      		.word gs(.L45)
 285 0102 0000      		.word gs(.L2)
 286 0104 0000      		.word gs(.L2)
 287 0106 0000      		.word gs(.L2)
 288 0108 0000      		.word gs(.L2)
 289 010a 0000      		.word gs(.L2)
 290 010c 0000      		.word gs(.L2)
 291 010e 0000      		.word gs(.L2)
 292 0110 0000      		.word gs(.L15)
 293 0112 0000      		.word gs(.L2)
 294 0114 0000      		.word gs(.L2)
 295 0116 0000      		.word gs(.L2)
 296 0118 0000      		.word gs(.L2)
 297 011a 0000      		.word gs(.L2)
 298 011c 0000      		.word gs(.L2)
 299 011e 0000      		.word gs(.L2)
 300 0120 0000      		.word gs(.L2)
 301 0122 0000      		.word gs(.L2)
 302 0124 0000      		.word gs(.L2)
 303 0126 0000      		.word gs(.L2)
 304 0128 0000      		.word gs(.L2)
 305 012a 0000      		.word gs(.L2)
 306 012c 0000      		.word gs(.L2)
 307 012e 0000      		.word gs(.L2)
 308 0130 0000      		.word gs(.L2)
 309 0132 0000      		.word gs(.L2)
 310 0134 0000      		.word gs(.L2)
 311 0136 0000      		.word gs(.L2)
 312 0138 0000      		.word gs(.L2)
 313 013a 0000      		.word gs(.L2)
 314 013c 0000      		.word gs(.L2)
 315 013e 0000      		.word gs(.L2)
 316 0140 0000      		.word gs(.L16)
 317 0142 0000      		.word gs(.L2)
 318 0144 0000      		.word gs(.L2)
 319 0146 0000      		.word gs(.L2)
 320 0148 0000      		.word gs(.L2)
 321 014a 0000      		.word gs(.L2)
 322 014c 0000      		.word gs(.L2)
 323 014e 0000      		.word gs(.L2)
 324 0150 0000      		.word gs(.L17)
 325 0152 0000      		.word gs(.L2)
 326 0154 0000      		.word gs(.L2)
 327 0156 0000      		.word gs(.L2)
 328 0158 0000      		.word gs(.L2)
 329 015a 0000      		.word gs(.L2)
 330 015c 0000      		.word gs(.L2)
 331 015e 0000      		.word gs(.L2)
 332 0160 0000      		.word gs(.L18)
 333 0162 0000      		.word gs(.L2)
 334 0164 0000      		.word gs(.L2)
 335 0166 0000      		.word gs(.L2)
 336 0168 0000      		.word gs(.L2)
 337 016a 0000      		.word gs(.L2)
 338 016c 0000      		.word gs(.L2)
 339 016e 0000      		.word gs(.L2)
 340 0170 0000      		.word gs(.L19)
 341 0172 0000      		.word gs(.L2)
 342 0174 0000      		.word gs(.L2)
 343 0176 0000      		.word gs(.L2)
 344 0178 0000      		.word gs(.L2)
 345 017a 0000      		.word gs(.L2)
 346 017c 0000      		.word gs(.L2)
 347 017e 0000      		.word gs(.L2)
 348 0180 0000      		.word gs(.L21)
 349 0182 0000      		.word gs(.L2)
 350 0184 0000      		.word gs(.L2)
 351 0186 0000      		.word gs(.L2)
 352 0188 0000      		.word gs(.L2)
 353 018a 0000      		.word gs(.L2)
 354 018c 0000      		.word gs(.L2)
 355 018e 0000      		.word gs(.L2)
 356 0190 0000      		.word gs(.L21)
 357               		.section	.text.__vector_24
 358               	.L18:
 174:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 359               		.loc 1 174 0
 360 008e E091 0000 		lds r30,I2CD1+15
 361 0092 F091 0000 		lds r31,I2CD1+15+1
 362 0096 2091 0000 		lds r18,I2CD1+19
 363 009a 3091 0000 		lds r19,I2CD1+19+1
 364 009e E20F      		add r30,r18
 365 00a0 F31F      		adc r31,r19
 366               	.L68:
 183:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 367               		.loc 1 183 0
 368 00a2 8081      		ld r24,Z
 369 00a4 8093 BB00 		sts 187,r24
 184:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 370               		.loc 1 184 0
 371 00a8 8091 0000 		lds r24,I2CD1+17
 372 00ac 9091 0000 		lds r25,I2CD1+17+1
 373 00b0 0197      		sbiw r24,1
 374 00b2 2817      		cp r18,r24
 375 00b4 3907      		cpc r19,r25
 376 00b6 01F4      		brne .+2
 377 00b8 00C0      		rjmp .L64
 378               	.L21:
 199:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    break;
 379               		.loc 1 199 0
 380 00ba 81EC      		ldi r24,lo8(-63)
 381 00bc 8093 BC00 		sts 188,r24
 382 00c0 8091 0000 		lds r24,I2CD1+3
 200:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_ARBITRATION_LOST:
 383               		.loc 1 200 0
 384 00c4 00C0      		rjmp .L24
 385               	.L11:
 107:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN)); /*ações no TWCR*/
 386               		.loc 1 107 0
 387 00c6 2091 BB00 		lds r18,187
 388 00ca E091 0000 		lds r30,I2CD1+21
 389 00ce F091 0000 		lds r31,I2CD1+21+1
 390 00d2 8091 0000 		lds r24,I2CD1+25
 391 00d6 9091 0000 		lds r25,I2CD1+25+1
 392 00da E80F      		add r30,r24
 393 00dc F91F      		adc r31,r25
 394 00de 2083      		st Z,r18
 108:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 395               		.loc 1 108 0
 396 00e0 84E9      		ldi r24,lo8(-108)
 397 00e2 8093 BC00 		sts 188,r24
 398               	.LVL7:
 399               	.LBB50:
 400               	.LBB51:
 401               		.loc 2 775 0
 402 00e6 60E0      		ldi r22,0
 403 00e8 70E0      		ldi r23,0
 404 00ea 80E0      		ldi r24,lo8(I2CD1+12)
 405 00ec 90E0      		ldi r25,hi8(I2CD1+12)
 406               	.LVL8:
 407 00ee 0E94 0000 		call chThdResumeI
 408               	.LVL9:
 409               	.L7:
 410               	.LBE51:
 411               	.LBE50:
 113:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 412               		.loc 1 113 0
 413 00f2 8091 0000 		lds r24,I2CD1+3
 414 00f6 8460      		ori r24,lo8(4)
 415 00f8 8093 0000 		sts I2CD1+3,r24
 416               	.L38:
 214:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 417               		.loc 1 214 0
 418 00fc 84E9      		ldi r24,lo8(-108)
 419 00fe 8093 BC00 		sts 188,r24
 420               	.LVL10:
 421               	.LBB52:
 422               	.LBB53:
 423               		.loc 2 775 0
 424 0102 6EEF      		ldi r22,lo8(-2)
 425 0104 7FEF      		ldi r23,lo8(-1)
 426 0106 80E0      		ldi r24,lo8(I2CD1+12)
 427 0108 90E0      		ldi r25,hi8(I2CD1+12)
 428               	.LVL11:
 429 010a 0E94 0000 		call chThdResumeI
 430               	.LVL12:
 431 010e 00C0      		rjmp .L36
 432               	.LVL13:
 433               	.L16:
 434               	.LBE53:
 435               	.LBE52:
 157:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 436               		.loc 1 157 0
 437 0110 81EC      		ldi r24,lo8(-63)
 438 0112 8093 BC00 		sts 188,r24
 439               	.L17:
 163:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****        if (i2cp->txidx ==(i2cp->txbytes -1)){
 440               		.loc 1 163 0
 441 0116 E091 0000 		lds r30,I2CD1+15
 442 011a F091 0000 		lds r31,I2CD1+15+1
 443 011e 8091 0000 		lds r24,I2CD1+19
 444 0122 9091 0000 		lds r25,I2CD1+19+1
 445 0126 E80F      		add r30,r24
 446 0128 F91F      		adc r31,r25
 447 012a 2081      		ld r18,Z
 448 012c 2093 BB00 		sts 187,r18
 164:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWIE));
 449               		.loc 1 164 0
 450 0130 2091 0000 		lds r18,I2CD1+17
 451 0134 3091 0000 		lds r19,I2CD1+17+1
 452 0138 2150      		subi r18,1
 453 013a 3109      		sbc r19,__zero_reg__
 454 013c 8217      		cp r24,r18
 455 013e 9307      		cpc r25,r19
 456 0140 01F4      		brne .+2
 457 0142 00C0      		rjmp .L64
 168:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 458               		.loc 1 168 0
 459 0144 0196      		adiw r24,1
 460 0146 9093 0000 		sts I2CD1+19+1,r25
 461 014a 8093 0000 		sts I2CD1+19,r24
 169:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 462               		.loc 1 169 0
 463 014e 81EC      		ldi r24,lo8(-63)
 464 0150 8093 BC00 		sts 188,r24
 465 0154 8091 0000 		lds r24,I2CD1+3
 466 0158 00C0      		rjmp .L24
 467               	.L10:
  98:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) { 
 468               		.loc 1 98 0
 469 015a 4091 0000 		lds r20,I2CD1+21
 470 015e 5091 0000 		lds r21,I2CD1+21+1
 471 0162 8091 0000 		lds r24,I2CD1+25
 472 0166 9091 0000 		lds r25,I2CD1+25+1
 473 016a 9C01      		movw r18,r24
 474 016c 2F5F      		subi r18,-1
 475 016e 3F4F      		sbci r19,-1
 476 0170 3093 0000 		sts I2CD1+25+1,r19
 477 0174 2093 0000 		sts I2CD1+25,r18
 478 0178 2091 BB00 		lds r18,187
 479 017c FA01      		movw r30,r20
 480 017e E80F      		add r30,r24
 481 0180 F91F      		adc r31,r25
 482 0182 2083      		st Z,r18
 483               	.L66:
  99:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE)); /* ir para 0x58*/
 484               		.loc 1 99 0
 485 0184 8091 0000 		lds r24,I2CD1+23
 486 0188 9091 0000 		lds r25,I2CD1+23+1
 487 018c 0197      		sbiw r24,1
 488 018e 2091 0000 		lds r18,I2CD1+25
 489 0192 3091 0000 		lds r19,I2CD1+25+1
 490 0196 2817      		cp r18,r24
 491 0198 3907      		cpc r19,r25
 492 019a 01F4      		brne .+2
 493 019c 00C0      		rjmp .L61
 494               	.L59:
 144:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 495               		.loc 1 144 0
 496 019e 85EC      		ldi r24,lo8(-59)
 497 01a0 8093 BC00 		sts 188,r24
 498 01a4 8091 0000 		lds r24,I2CD1+3
 499 01a8 00C0      		rjmp .L24
 500               	.L12:
 120:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 501               		.loc 1 120 0
 502 01aa 8091 0000 		lds r24,I2CD1+23
 503 01ae 9091 0000 		lds r25,I2CD1+23+1
 504 01b2 0197      		sbiw r24,1
 505 01b4 2091 0000 		lds r18,I2CD1+25
 506 01b8 3091 0000 		lds r19,I2CD1+25+1
 507 01bc 2817      		cp r18,r24
 508 01be 3907      		cpc r19,r25
 509 01c0 01F0      		breq .+2
 510 01c2 00C0      		rjmp .L21
 511               	.L64:
 185:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 512               		.loc 1 185 0
 513 01c4 81E8      		ldi r24,lo8(-127)
 514 01c6 8093 BC00 		sts 188,r24
 515 01ca 8091 0000 		lds r24,I2CD1+3
 516 01ce 00C0      		rjmp .L24
 517               	.L13:
 128:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 518               		.loc 1 128 0
 519 01d0 2091 0000 		lds r18,I2CD1+23
 520 01d4 3091 0000 		lds r19,I2CD1+23+1
 521 01d8 2150      		subi r18,1
 522 01da 3109      		sbc r19,__zero_reg__
 523 01dc 8091 0000 		lds r24,I2CD1+25
 524 01e0 9091 0000 		lds r25,I2CD1+25+1
 525 01e4 8217      		cp r24,r18
 526 01e6 9307      		cpc r25,r19
 527 01e8 01F4      		brne .+2
 528 01ea 00C0      		rjmp .L71
 132:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 529               		.loc 1 132 0
 530 01ec 21EC      		ldi r18,lo8(-63)
 531 01ee 2093 BC00 		sts 188,r18
 532               	.L14:
 136:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*send nack master move to $88*/
 533               		.loc 1 136 0
 534 01f2 4091 0000 		lds r20,I2CD1+21
 535 01f6 5091 0000 		lds r21,I2CD1+21+1
 536 01fa 9C01      		movw r18,r24
 537 01fc 2F5F      		subi r18,-1
 538 01fe 3F4F      		sbci r19,-1
 539 0200 3093 0000 		sts I2CD1+25+1,r19
 540 0204 2093 0000 		sts I2CD1+25,r18
 541 0208 2091 BB00 		lds r18,187
 542 020c FA01      		movw r30,r20
 543 020e E80F      		add r30,r24
 544 0210 F91F      		adc r31,r25
 545 0212 2083      		st Z,r18
 138:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 546               		.loc 1 138 0
 547 0214 8091 0000 		lds r24,I2CD1+25
 548 0218 9091 0000 		lds r25,I2CD1+25+1
 549 021c 2091 0000 		lds r18,I2CD1+23
 550 0220 3091 0000 		lds r19,I2CD1+23+1
 551 0224 2150      		subi r18,1
 552 0226 3109      		sbc r19,__zero_reg__
 553 0228 8217      		cp r24,r18
 554 022a 9307      		cpc r25,r19
 555 022c 01F4      		brne .+2
 556 022e 00C0      		rjmp .L61
 143:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 557               		.loc 1 143 0
 558 0230 0196      		adiw r24,1
 559 0232 9093 0000 		sts I2CD1+25+1,r25
 560 0236 8093 0000 		sts I2CD1+25,r24
 561 023a 00C0      		rjmp .L59
 562               	.L15:
 148:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 563               		.loc 1 148 0
 564 023c 4091 0000 		lds r20,I2CD1+21
 565 0240 5091 0000 		lds r21,I2CD1+21+1
 566 0244 8091 0000 		lds r24,I2CD1+25
 567 0248 9091 0000 		lds r25,I2CD1+25+1
 568 024c 9C01      		movw r18,r24
 569 024e 2F5F      		subi r18,-1
 570 0250 3F4F      		sbci r19,-1
 571 0252 3093 0000 		sts I2CD1+25+1,r19
 572 0256 2093 0000 		sts I2CD1+25,r18
 573 025a 2091 BB00 		lds r18,187
 574 025e FA01      		movw r30,r20
 575 0260 E80F      		add r30,r24
 576 0262 F91F      		adc r31,r25
 577 0264 2083      		st Z,r18
 152:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    _i2c_wakeup_isr(i2cp); /*wake up thread*/
 578               		.loc 1 152 0
 579 0266 81EC      		ldi r24,lo8(-63)
 580               	.L60:
 581 0268 8093 BC00 		sts 188,r24
 582               	.LVL14:
 583               	.LBB54:
 584               	.LBB55:
 585               		.loc 2 775 0
 586 026c 60E0      		ldi r22,0
 587 026e 70E0      		ldi r23,0
 588 0270 80E0      		ldi r24,lo8(I2CD1+12)
 589 0272 90E0      		ldi r25,hi8(I2CD1+12)
 590               	.LVL15:
 591 0274 0E94 0000 		call chThdResumeI
 592               	.LVL16:
 593 0278 8091 0000 		lds r24,I2CD1+3
 594 027c 00C0      		rjmp .L24
 595               	.LVL17:
 596               	.L8:
 597               	.LBE55:
 598               	.LBE54:
 202:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 599               		.loc 1 202 0
 600 027e 8091 0000 		lds r24,I2CD1+3
 601 0282 8260      		ori r24,lo8(2)
 602 0284 8093 0000 		sts I2CD1+3,r24
 203:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_BUS_ERROR:
 603               		.loc 1 203 0
 604 0288 00C0      		rjmp .L38
 605               	.L19:
 183:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 606               		.loc 1 183 0
 607 028a 4091 0000 		lds r20,I2CD1+15
 608 028e 5091 0000 		lds r21,I2CD1+15+1
 609 0292 8091 0000 		lds r24,I2CD1+19
 610 0296 9091 0000 		lds r25,I2CD1+19+1
 611 029a 9C01      		movw r18,r24
 612 029c 2F5F      		subi r18,-1
 613 029e 3F4F      		sbci r19,-1
 614 02a0 3093 0000 		sts I2CD1+19+1,r19
 615 02a4 2093 0000 		sts I2CD1+19,r18
 616 02a8 FA01      		movw r30,r20
 617 02aa E80F      		add r30,r24
 618 02ac F91F      		adc r31,r25
 619 02ae 00C0      		rjmp .L68
 620               	.L3:
 205:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 621               		.loc 1 205 0
 622 02b0 8091 0000 		lds r24,I2CD1+3
 623 02b4 8160      		ori r24,lo8(1)
 624 02b6 8093 0000 		sts I2CD1+3,r24
 206:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   default:
 625               		.loc 1 206 0
 626 02ba 00C0      		rjmp .L38
 627               	.L5:
  67:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if ((i2cp->txbuf == NULL) || (i2cp->txbytes == 0) || (i2cp->txidx == i2cp->txbytes)) {
 628               		.loc 1 67 0
 629 02bc 8091 0000 		lds r24,I2CD1+14
 630 02c0 880F      		lsl r24
 631 02c2 8093 BB00 		sts 187,r24
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 632               		.loc 1 68 0
 633 02c6 8091 0000 		lds r24,I2CD1+15
 634 02ca 9091 0000 		lds r25,I2CD1+15+1
 635 02ce 892B      		or r24,r25
 636 02d0 01F0      		breq .L22
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 637               		.loc 1 68 0 is_stmt 0 discriminator 1
 638 02d2 8091 0000 		lds r24,I2CD1+17
 639 02d6 9091 0000 		lds r25,I2CD1+17+1
 640 02da 0097      		sbiw r24,0
 641 02dc 01F0      		breq .L22
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 642               		.loc 1 68 0 discriminator 2
 643 02de 2091 0000 		lds r18,I2CD1+19
 644 02e2 3091 0000 		lds r19,I2CD1+19+1
 645 02e6 8217      		cp r24,r18
 646 02e8 9307      		cpc r25,r19
 647 02ea 01F4      		brne .L61
 648               	.L22:
  69:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 649               		.loc 1 69 0 is_stmt 1
 650 02ec 8091 BB00 		lds r24,187
 651 02f0 8160      		ori r24,lo8(1)
 652 02f2 8093 BB00 		sts 187,r24
 653               	.L61:
 139:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 654               		.loc 1 139 0
 655 02f6 85E8      		ldi r24,lo8(-123)
 656 02f8 8093 BC00 		sts 188,r24
 657 02fc 8091 0000 		lds r24,I2CD1+3
 658 0300 00C0      		rjmp .L24
 659               	.L6:
  75:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR = i2cp->txbuf[i2cp->txidx++];
 660               		.loc 1 75 0
 661 0302 8091 0000 		lds r24,I2CD1+19
 662 0306 9091 0000 		lds r25,I2CD1+19+1
 663 030a 2091 0000 		lds r18,I2CD1+17
 664 030e 3091 0000 		lds r19,I2CD1+17+1
 665 0312 8217      		cp r24,r18
 666 0314 9307      		cpc r25,r19
 667 0316 00F0      		brlo .L72
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 668               		.loc 1 80 0
 669 0318 8091 0000 		lds r24,I2CD1+21
 670 031c 9091 0000 		lds r25,I2CD1+21+1
 671 0320 892B      		or r24,r25
 672 0322 01F0      		breq .L26
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 673               		.loc 1 80 0 is_stmt 0 discriminator 1
 674 0324 8091 0000 		lds r24,I2CD1+23
 675 0328 9091 0000 		lds r25,I2CD1+23+1
 676 032c 892B      		or r24,r25
 677 032e 01F0      		breq .L26
  81:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
 678               		.loc 1 81 0 is_stmt 1
 679 0330 85EA      		ldi r24,lo8(-91)
 680 0332 8093 BC00 		sts 188,r24
 681 0336 8091 0000 		lds r24,I2CD1+3
 682 033a 00C0      		rjmp .L24
 683               	.L45:
 684 033c 8091 0000 		lds r24,I2CD1+25
 685 0340 9091 0000 		lds r25,I2CD1+25+1
 686 0344 00C0      		rjmp .L14
 687               	.L72:
  76:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 688               		.loc 1 76 0
 689 0346 2091 0000 		lds r18,I2CD1+15
 690 034a 3091 0000 		lds r19,I2CD1+15+1
 691 034e AC01      		movw r20,r24
 692 0350 4F5F      		subi r20,-1
 693 0352 5F4F      		sbci r21,-1
 694 0354 5093 0000 		sts I2CD1+19+1,r21
 695 0358 4093 0000 		sts I2CD1+19,r20
 696 035c F901      		movw r30,r18
 697 035e E80F      		add r30,r24
 698 0360 F91F      		adc r31,r25
 699 0362 8081      		ld r24,Z
 700 0364 8093 BB00 		sts 187,r24
  77:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 701               		.loc 1 77 0
 702 0368 85E8      		ldi r24,lo8(-123)
 703 036a 8093 BC00 		sts 188,r24
 704 036e 8091 0000 		lds r24,I2CD1+3
 705 0372 00C0      		rjmp .L24
 706               	.L71:
 129:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 707               		.loc 1 129 0
 708 0374 21E8      		ldi r18,lo8(-127)
 709 0376 2093 BC00 		sts 188,r18
 710 037a 00C0      		rjmp .L14
 711               	.L26:
  84:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         _i2c_wakeup_isr(i2cp);
 712               		.loc 1 84 0
 713 037c 84E9      		ldi r24,lo8(-108)
 714 037e 00C0      		rjmp .L60
 715               		.cfi_endproc
 716               	.LFE180:
 718               		.section	.text.i2c_lld_init,"ax",@progbits
 719               	.global	i2c_lld_init
 721               	i2c_lld_init:
 722               	.LFB181:
 220:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #endif /* AVR_I2C_USE_I2C1 */
 221:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 222:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
 223:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver exported functions.                                               */
 224:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
 225:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 226:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 227:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Low level I2C driver initialization.
 228:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 229:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 230:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 231:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_init(void) {
 723               		.loc 1 231 0
 724               		.cfi_startproc
 725               	/* prologue: function */
 726               	/* frame size = 0 */
 727               	/* stack size = 0 */
 728               	.L__stack_usage = 0
 232:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 233:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cObjectInit(&I2CD1);
 729               		.loc 1 233 0
 730 0000 80E0      		ldi r24,lo8(I2CD1)
 731 0002 90E0      		ldi r25,hi8(I2CD1)
 732 0004 0E94 0000 		call i2cObjectInit
 733               	.LVL18:
 234:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 734               		.loc 1 234 0
 735 0008 1092 0000 		sts I2CD1+12+1,__zero_reg__
 736 000c 1092 0000 		sts I2CD1+12,__zero_reg__
 737 0010 0895      		ret
 738               		.cfi_endproc
 739               	.LFE181:
 741               		.section	.text.i2c_lld_start,"ax",@progbits
 742               	.global	i2c_lld_start
 744               	i2c_lld_start:
 745               	.LFB182:
 235:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 236:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 237:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 238:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Configures and activates the I2C peripheral.
 239:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 240:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in] i2cp  pointer to the @p I2CDriver object
 241:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 242:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 243:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 244:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_start(I2CDriver *i2cp) {
 746               		.loc 1 244 0
 747               		.cfi_startproc
 748               	.LVL19:
 749               	/* prologue: function */
 750               	/* frame size = 0 */
 751               	/* stack size = 0 */
 752               	.L__stack_usage = 0
 245:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 246:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   uint32_t clock_speed = 100000;
 247:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 248:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* TODO: Test TWI without external pull-ups (use internal). */
 249:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 250:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* Configure prescaler to 1. */
 251:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWSR &= 0xF8;
 753               		.loc 1 251 0
 754 0000 2091 B900 		lds r18,185
 755 0004 287F      		andi r18,lo8(-8)
 756 0006 2093 B900 		sts 185,r18
 252:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->config != NULL)
 757               		.loc 1 252 0
 758 000a DC01      		movw r26,r24
 759 000c 1196      		adiw r26,1
 760 000e ED91      		ld r30,X+
 761 0010 FC91      		ld r31,X
 762 0012 1297      		sbiw r26,1+1
 763 0014 3097      		sbiw r30,0
 764 0016 01F0      		breq .L76
 765               	.LVL20:
 766 0018 2081      		ld r18,Z
 767 001a 3181      		ldd r19,Z+1
 768 001c 4281      		ldd r20,Z+2
 769 001e 5381      		ldd r21,Z+3
 770 0020 60E0      		ldi r22,0
 771 0022 74E2      		ldi r23,lo8(36)
 772 0024 84EF      		ldi r24,lo8(-12)
 773 0026 90E0      		ldi r25,0
 774 0028 0E94 0000 		call __udivmodsi4
 775               	.LVL21:
 776 002c DA01      		movw r26,r20
 777 002e C901      		movw r24,r18
 778               	.LVL22:
 779 0030 4097      		sbiw r24,16
 780 0032 A109      		sbc r26,__zero_reg__
 781 0034 B109      		sbc r27,__zero_reg__
 782 0036 B695      		lsr r27
 783 0038 A795      		ror r26
 784 003a 9795      		ror r25
 785 003c 8795      		ror r24
 786 003e 282F      		mov r18,r24
 787               	.LVL23:
 253:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     clock_speed = i2cp->config->clock_speed;
 254:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 255:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* Configure baudrate. */
 256:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWBR = ((F_CPU / clock_speed) - 16) / 2;
 788               		.loc 1 256 0
 789 0040 2093 B800 		sts 184,r18
 790 0044 0895      		ret
 791               	.LVL24:
 792               	.L76:
 793 0046 28E4      		ldi r18,lo8(72)
 794               	.LVL25:
 795 0048 2093 B800 		sts 184,r18
 796 004c 0895      		ret
 797               		.cfi_endproc
 798               	.LFE182:
 800               		.section	.text.i2c_lld_stop,"ax",@progbits
 801               	.global	i2c_lld_stop
 803               	i2c_lld_stop:
 804               	.LFB183:
 257:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** } 
 258:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 259:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Deactivates the I2C peripheral.
 260:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 261:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in] i2cp  pointer to the @p I2CDriver object
 262:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 263:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 264:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 265:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_stop(I2CDriver *i2cp) {
 805               		.loc 1 265 0
 806               		.cfi_startproc
 807               	.LVL26:
 808               	/* prologue: function */
 809               	/* frame size = 0 */
 810               	/* stack size = 0 */
 811               	.L__stack_usage = 0
 266:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 267:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->state != I2C_STOP) {
 812               		.loc 1 267 0
 813 0000 FC01      		movw r30,r24
 814 0002 8081      		ld r24,Z
 815               	.LVL27:
 816 0004 8130      		cpi r24,lo8(1)
 817 0006 01F0      		breq .L77
 268:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     /* Disable TWI subsystem and stop all operations. */
 269:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR &= ~(1 << TWEN);
 818               		.loc 1 269 0
 819 0008 8091 BC00 		lds r24,188
 820 000c 8B7F      		andi r24,lo8(-5)
 821 000e 8093 BC00 		sts 188,r24
 822               	.L77:
 823 0012 0895      		ret
 824               		.cfi_endproc
 825               	.LFE183:
 827               		.section	.text.i2c_lld_master_receive_timeout,"ax",@progbits
 828               	.global	i2c_lld_master_receive_timeout
 830               	i2c_lld_master_receive_timeout:
 831               	.LFB184:
 270:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 271:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 272:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 273:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 274:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Receives data via the I2C bus as master.
 275:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 276:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   i2cp      pointer to the @p I2CDriver object
 277:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   addr      slave device address
 278:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[out]  rxbuf     pointer to the receive buffer
 279:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   rxbytes   number of bytes to be received
 280:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   timeout   the number of ticks before the operation timeouts,
 281:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        the following special values are allowed:
 282:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        - @a TIME_INFINITE no timeout
 283:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      
 284:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @return              The operation status.
 285:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 286:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 287:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 288:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 289:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 290:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 291:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 292:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_master_receive_timeout(I2CDriver *i2cp, i2caddr_t addr,
 293:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                      uint8_t *rxbuf, size_t rxbytes,
 294:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                      systime_t timeout) {
 832               		.loc 1 294 0
 833               		.cfi_startproc
 834               	.LVL28:
 835               	/* prologue: function */
 836               	/* frame size = 0 */
 837               	/* stack size = 0 */
 838               	.L__stack_usage = 0
 839 0000 FC01      		movw r30,r24
 295:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 296:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 840               		.loc 1 296 0
 841 0002 1382      		std Z+3,__zero_reg__
 297:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->addr = addr;
 842               		.loc 1 297 0
 843 0004 6687      		std Z+14,r22
 298:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbuf = NULL;
 844               		.loc 1 298 0
 845 0006 108A      		std Z+16,__zero_reg__
 846 0008 1786      		std Z+15,__zero_reg__
 299:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = 0;
 847               		.loc 1 299 0
 848 000a 128A      		std Z+18,__zero_reg__
 849 000c 118A      		std Z+17,__zero_reg__
 300:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 850               		.loc 1 300 0
 851 000e 148A      		std Z+20,__zero_reg__
 852 0010 138A      		std Z+19,__zero_reg__
 301:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 853               		.loc 1 301 0
 854 0012 568B      		std Z+22,r21
 855 0014 458B      		std Z+21,r20
 302:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 856               		.loc 1 302 0
 857 0016 308F      		std Z+24,r19
 858 0018 278B      		std Z+23,r18
 303:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 859               		.loc 1 303 0
 860 001a 128E      		std Z+26,__zero_reg__
 861 001c 118E      		std Z+25,__zero_reg__
 304:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 305:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 862               		.loc 1 305 0
 863 001e 85EA      		ldi r24,lo8(-91)
 864               	.LVL29:
 865 0020 8093 BC00 		sts 188,r24
 866               	.LVL30:
 867               	.LBB56:
 868               	.LBB57:
 760:../../../os/hal/osal/rt/osal.h **** }
 869               		.loc 2 760 0
 870 0024 6FEF      		ldi r22,lo8(-1)
 871 0026 7FEF      		ldi r23,lo8(-1)
 872               	.LVL31:
 873 0028 CF01      		movw r24,r30
 874 002a 0C96      		adiw r24,12
 875               	.LVL32:
 876 002c 0C94 0000 		jmp chThdSuspendTimeoutS
 877               	.LVL33:
 878               	.LBE57:
 879               	.LBE56:
 880               		.cfi_endproc
 881               	.LFE184:
 883               		.section	.text.i2c_lld_master_transmit_timeout,"ax",@progbits
 884               	.global	i2c_lld_master_transmit_timeout
 886               	i2c_lld_master_transmit_timeout:
 887               	.LFB185:
 306:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* a thread fica suspensa até conclusão do processo de recebimento de dados*/
 307:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);
 308:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 309:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 310:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 311:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Transmits data via the I2C bus as master.
 312:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 313:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   i2cp      pointer to the @p I2CDriver object
 314:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   addr      slave device address
 315:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   txbuf     pointer to the transmit buffer
 316:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   txbytes   number of bytes to be transmitted
 317:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[out]  rxbuf     pointer to the receive buffer
 318:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   rxbytes   number of bytes to be received
 319:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   timeout   the number of ticks before the operation timeouts,
 320:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        the following special values are allowed:
 321:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        - @a TIME_INFINITE no timeout
 322:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      
 323:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @return              The operation status.
 324:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 325:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 326:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 327:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 328:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 329:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 330:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 331:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 332:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 333:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_master_transmit_timeout(I2CDriver *i2cp, i2caddr_t addr,
 334:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
 335:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
 336:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       systime_t timeout) {
 888               		.loc 1 336 0
 889               		.cfi_startproc
 890               	.LVL34:
 891 0000 EF92      		push r14
 892               	.LCFI14:
 893               		.cfi_def_cfa_offset 3
 894               		.cfi_offset 14, -2
 895 0002 FF92      		push r15
 896               	.LCFI15:
 897               		.cfi_def_cfa_offset 4
 898               		.cfi_offset 15, -3
 899 0004 0F93      		push r16
 900               	.LCFI16:
 901               		.cfi_def_cfa_offset 5
 902               		.cfi_offset 16, -4
 903 0006 1F93      		push r17
 904               	.LCFI17:
 905               		.cfi_def_cfa_offset 6
 906               		.cfi_offset 17, -5
 907               	/* prologue: function */
 908               	/* frame size = 0 */
 909               	/* stack size = 4 */
 910               	.L__stack_usage = 4
 911 0008 FC01      		movw r30,r24
 337:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 338:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 912               		.loc 1 338 0
 913 000a 1382      		std Z+3,__zero_reg__
 339:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->addr = addr;
 914               		.loc 1 339 0
 915 000c 6687      		std Z+14,r22
 340:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbuf = txbuf;
 916               		.loc 1 340 0
 917 000e 508B      		std Z+16,r21
 918 0010 4787      		std Z+15,r20
 341:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = txbytes;
 919               		.loc 1 341 0
 920 0012 328B      		std Z+18,r19
 921 0014 218B      		std Z+17,r18
 342:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 922               		.loc 1 342 0
 923 0016 148A      		std Z+20,__zero_reg__
 924 0018 138A      		std Z+19,__zero_reg__
 343:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 925               		.loc 1 343 0
 926 001a 168B      		std Z+22,r17
 927 001c 058B      		std Z+21,r16
 344:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 928               		.loc 1 344 0
 929 001e F08E      		std Z+24,r15
 930 0020 E78A      		std Z+23,r14
 345:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 931               		.loc 1 345 0
 932 0022 128E      		std Z+26,__zero_reg__
 933 0024 118E      		std Z+25,__zero_reg__
 346:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 347:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 934               		.loc 1 347 0
 935 0026 85EA      		ldi r24,lo8(-91)
 936               	.LVL35:
 937 0028 8093 BC00 		sts 188,r24
 938               	.LVL36:
 939               	.LBB58:
 940               	.LBB59:
 760:../../../os/hal/osal/rt/osal.h **** }
 941               		.loc 2 760 0
 942 002c 6FEF      		ldi r22,lo8(-1)
 943 002e 7FEF      		ldi r23,lo8(-1)
 944               	.LVL37:
 945 0030 CF01      		movw r24,r30
 946 0032 0C96      		adiw r24,12
 947               	.LVL38:
 948               	/* epilogue start */
 949               	.LBE59:
 950               	.LBE58:
 348:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*A thread fica suspensa ate o final do processo de envio da mensagem*/
 349:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);
 350:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 951               		.loc 1 350 0
 952 0034 1F91      		pop r17
 953 0036 0F91      		pop r16
 954               	.LVL39:
 955 0038 FF90      		pop r15
 956 003a EF90      		pop r14
 957               	.LVL40:
 958               	.LBB61:
 959               	.LBB60:
 760:../../../os/hal/osal/rt/osal.h **** }
 960               		.loc 2 760 0
 961 003c 0C94 0000 		jmp chThdSuspendTimeoutS
 962               	.LVL41:
 963               	.LBE60:
 964               	.LBE61:
 965               		.cfi_endproc
 966               	.LFE185:
 968               		.section	.text.i2c_lld_matchAddress,"ax",@progbits
 969               	.global	i2c_lld_matchAddress
 971               	i2c_lld_matchAddress:
 972               	.LFB186:
 351:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 352:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*
 353:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * brief Configure to respond to messages directed to the given i2cadr
 354:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @param[in] i2cp      pointer to the @p I2CDriver object
 355:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *  @param[in] i2cadr    I2C bus address
 356:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @return              Length of message OR the type of event received
 357:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @retval I2C_OK       Success
 358:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @retval I2C_ERROR    Cannot match address in addition of those already (como chegar aqui?)
 359:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *  * @details MatchAddress calls are cumulative.
 360:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *          Specify address zero to match I2C "all call"
 361:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *          Most hardware supports matching only a signle nonzero address.
 362:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *
 363:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @api
 364:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** */
 365:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_matchAddress(I2CDriver *i2cp, i2caddr_t  i2cadr){
 973               		.loc 1 365 0
 974               		.cfi_startproc
 975               	.LVL42:
 976               	/* prologue: function */
 977               	/* frame size = 0 */
 978               	/* stack size = 0 */
 979               	.L__stack_usage = 0
 366:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cadr != 0 ){ 
 980               		.loc 1 366 0
 981 0000 6111      		cpse r22,__zero_reg__
 982 0002 00C0      		rjmp .L87
 367:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     uint8_t adr = i2cadr << 1;                                     /*by pass General Call ADDR, add
 368:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->addr = adr;                                               /*Implement slave addr*/
 369:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return I2C_NO_ERROR; 
 370:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 371:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else
 372:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return i2c_lld_get_slaveErrors(i2cp);  /*find a ERROR*/
 983               		.loc 1 372 0
 984 0004 FC01      		movw r30,r24
 985 0006 848D      		ldd r24,Z+28
 986               	.LVL43:
 987 0008 90E0      		ldi r25,0
 373:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 988               		.loc 1 373 0
 989 000a 0895      		ret
 990               	.LVL44:
 991               	.L87:
 992               	.LBB62:
 368:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return I2C_NO_ERROR; 
 993               		.loc 1 368 0
 994 000c 660F      		lsl r22
 995               	.LVL45:
 996 000e FC01      		movw r30,r24
 997 0010 6687      		std Z+14,r22
 369:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 998               		.loc 1 369 0
 999 0012 80E0      		ldi r24,0
 1000 0014 90E0      		ldi r25,0
 1001               	.LVL46:
 1002 0016 0895      		ret
 1003               	.LBE62:
 1004               		.cfi_endproc
 1005               	.LFE186:
 1007               		.section	.text.i2c_ld_unmatchAddress,"ax",@progbits
 1008               	.global	i2c_ld_unmatchAddress
 1010               	i2c_ld_unmatchAddress:
 1011               	.LFB187:
 374:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*stop respond to certain addr*/
 375:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 376:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_ld_unmatchAddress(I2CDriver *i2cp, i2caddr_t  i2cadr){
 1012               		.loc 1 376 0
 1013               		.cfi_startproc
 1014               	.LVL47:
 1015               	/* prologue: function */
 1016               	/* frame size = 0 */
 1017               	/* stack size = 0 */
 1018               	.L__stack_usage = 0
 377:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   
 378:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->addr == i2cadr && i2cadr != 0)
 1019               		.loc 1 378 0
 1020 0000 FC01      		movw r30,r24
 1021 0002 8685      		ldd r24,Z+14
 1022               	.LVL48:
 1023 0004 8613      		cpse r24,r22
 1024               	.L88:
 1025 0006 0895      		ret
 1026               	.L93:
 1027               		.loc 1 378 0 is_stmt 0 discriminator 1
 1028 0008 8823      		tst r24
 1029 000a 01F0      		breq .L88
 379:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWAR = 0; //unset previously configured slave addr
 1030               		.loc 1 379 0 is_stmt 1
 1031 000c 1092 BA00 		sts 186,__zero_reg__
 1032 0010 0895      		ret
 1033               		.cfi_endproc
 1034               	.LFE187:
 1036               		.section	.text.i2c_lld_unmatchAll,"ax",@progbits
 1037               	.global	i2c_lld_unmatchAll
 1039               	i2c_lld_unmatchAll:
 1040               	.LFB188:
 380:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 381:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 382:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_unmatchAll(I2CDriver *i2cp){
 1041               		.loc 1 382 0
 1042               		.cfi_startproc
 1043               	.LVL49:
 1044               	/* prologue: function */
 1045               	/* frame size = 0 */
 1046               	/* stack size = 0 */
 1047               	.L__stack_usage = 0
 383:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWAR = 0; //force unset previously configured slave addr
 1048               		.loc 1 383 0
 1049 0000 1092 BA00 		sts 186,__zero_reg__
 1050 0004 0895      		ret
 1051               		.cfi_endproc
 1052               	.LFE188:
 1054               		.section	.text.i2c_lld_slaveReceive,"ax",@progbits
 1055               	.global	i2c_lld_slaveReceive
 1057               	i2c_lld_slaveReceive:
 1058               	.LFB189:
 384:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 385:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*@brief   Configure callbacksslaveRx & buffers to receive messages
 386:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @details             Call i2cMatchAddress() after this to start processing
 387:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     Enabling match addresses before installing handler callbacks can
 388:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     result in locking the I2C bus when a master accesses those
 389:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     unconfigured slave addresses
 390:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 391:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 392:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 393:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 394:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*Usar as funcoes do mestre como referência e ver diferenças*/
 395:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t  i2c_lld_slaveReceive(I2CDriver *i2cp,  i2caddr_t addr,
 396:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
 397:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
 398:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       systime_t timeout){
 1059               		.loc 1 398 0
 1060               		.cfi_startproc
 1061               	.LVL50:
 1062 0000 EF92      		push r14
 1063               	.LCFI18:
 1064               		.cfi_def_cfa_offset 3
 1065               		.cfi_offset 14, -2
 1066 0002 FF92      		push r15
 1067               	.LCFI19:
 1068               		.cfi_def_cfa_offset 4
 1069               		.cfi_offset 15, -3
 1070 0004 0F93      		push r16
 1071               	.LCFI20:
 1072               		.cfi_def_cfa_offset 5
 1073               		.cfi_offset 16, -4
 1074 0006 1F93      		push r17
 1075               	.LCFI21:
 1076               		.cfi_def_cfa_offset 6
 1077               		.cfi_offset 17, -5
 1078               	/* prologue: function */
 1079               	/* frame size = 0 */
 1080               	/* stack size = 4 */
 1081               	.L__stack_usage = 4
 1082 0008 FC01      		movw r30,r24
 399:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   
 400:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   
 401:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1083               		.loc 1 401 0
 1084 000a 1382      		std Z+3,__zero_reg__
 402:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->txbuf = NULL;
 1085               		.loc 1 402 0
 1086 000c 108A      		std Z+16,__zero_reg__
 1087 000e 1786      		std Z+15,__zero_reg__
 403:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = 0;
 1088               		.loc 1 403 0
 1089 0010 128A      		std Z+18,__zero_reg__
 1090 0012 118A      		std Z+17,__zero_reg__
 404:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 1091               		.loc 1 404 0
 1092 0014 148A      		std Z+20,__zero_reg__
 1093 0016 138A      		std Z+19,__zero_reg__
 405:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 1094               		.loc 1 405 0
 1095 0018 168B      		std Z+22,r17
 1096 001a 058B      		std Z+21,r16
 406:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 1097               		.loc 1 406 0
 1098 001c F08E      		std Z+24,r15
 1099 001e E78A      		std Z+23,r14
 407:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 1100               		.loc 1 407 0
 1101 0020 128E      		std Z+26,__zero_reg__
 1102 0022 118E      		std Z+25,__zero_reg__
 408:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 409:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1<< TWEA)); 
 1103               		.loc 1 409 0
 1104 0024 85EC      		ldi r24,lo8(-59)
 1105               	.LVL51:
 1106 0026 8093 BC00 		sts 188,r24
 1107               	.LVL52:
 1108               	.LBB63:
 1109               	.LBB64:
 760:../../../os/hal/osal/rt/osal.h **** }
 1110               		.loc 2 760 0
 1111 002a 6FEF      		ldi r22,lo8(-1)
 1112 002c 7FEF      		ldi r23,lo8(-1)
 1113               	.LVL53:
 1114 002e CF01      		movw r24,r30
 1115 0030 0C96      		adiw r24,12
 1116               	.LVL54:
 1117               	/* epilogue start */
 1118               	.LBE64:
 1119               	.LBE63:
 410:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   //osal thread  suspend
 411:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);
 412:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   //acordar thread no final da maquina de estados (osal recapthread)
 413:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 1120               		.loc 1 413 0
 1121 0032 1F91      		pop r17
 1122 0034 0F91      		pop r16
 1123               	.LVL55:
 1124 0036 FF90      		pop r15
 1125 0038 EF90      		pop r14
 1126               	.LVL56:
 1127               	.LBB66:
 1128               	.LBB65:
 760:../../../os/hal/osal/rt/osal.h **** }
 1129               		.loc 2 760 0
 1130 003a 0C94 0000 		jmp chThdSuspendTimeoutS
 1131               	.LVL57:
 1132               	.LBE65:
 1133               	.LBE66:
 1134               		.cfi_endproc
 1135               	.LFE189:
 1137               		.section	.text.i2c_lld_slaveReply,"ax",@progbits
 1138               	.global	i2c_lld_slaveReply
 1140               	i2c_lld_slaveReply:
 1141               	.LFB190:
 414:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 415:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 416:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t  i2c_lld_slaveReply(I2CDriver *i2cp,  i2caddr_t addr,
 417:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
 418:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
 419:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       systime_t timeout){
 1142               		.loc 1 419 0
 1143               		.cfi_startproc
 1144               	.LVL58:
 1145 0000 EF92      		push r14
 1146               	.LCFI22:
 1147               		.cfi_def_cfa_offset 3
 1148               		.cfi_offset 14, -2
 1149 0002 FF92      		push r15
 1150               	.LCFI23:
 1151               		.cfi_def_cfa_offset 4
 1152               		.cfi_offset 15, -3
 1153 0004 0F93      		push r16
 1154               	.LCFI24:
 1155               		.cfi_def_cfa_offset 5
 1156               		.cfi_offset 16, -4
 1157 0006 1F93      		push r17
 1158               	.LCFI25:
 1159               		.cfi_def_cfa_offset 6
 1160               		.cfi_offset 17, -5
 1161               	/* prologue: function */
 1162               	/* frame size = 0 */
 1163               	/* stack size = 4 */
 1164               	.L__stack_usage = 4
 1165 0008 FC01      		movw r30,r24
 420:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  
 421:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 1166               		.loc 1 421 0
 1167 000a 1382      		std Z+3,__zero_reg__
 422:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbuf = txbuf;
 1168               		.loc 1 422 0
 1169 000c 508B      		std Z+16,r21
 1170 000e 4787      		std Z+15,r20
 423:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = txbytes;
 1171               		.loc 1 423 0
 1172 0010 328B      		std Z+18,r19
 1173 0012 218B      		std Z+17,r18
 424:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 1174               		.loc 1 424 0
 1175 0014 148A      		std Z+20,__zero_reg__
 1176 0016 138A      		std Z+19,__zero_reg__
 425:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 1177               		.loc 1 425 0
 1178 0018 168B      		std Z+22,r17
 1179 001a 058B      		std Z+21,r16
 426:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 1180               		.loc 1 426 0
 1181 001c F08E      		std Z+24,r15
 1182 001e E78A      		std Z+23,r14
 427:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 1183               		.loc 1 427 0
 1184 0020 128E      		std Z+26,__zero_reg__
 1185 0022 118E      		std Z+25,__zero_reg__
 428:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ( (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1<< TWEA));
 1186               		.loc 1 428 0
 1187 0024 85EC      		ldi r24,lo8(-59)
 1188               	.LVL59:
 1189 0026 8093 BC00 		sts 188,r24
 1190               	.LVL60:
 1191               	.LBB67:
 1192               	.LBB68:
 760:../../../os/hal/osal/rt/osal.h **** }
 1193               		.loc 2 760 0
 1194 002a 6FEF      		ldi r22,lo8(-1)
 1195 002c 7FEF      		ldi r23,lo8(-1)
 1196               	.LVL61:
 1197 002e CF01      		movw r24,r30
 1198 0030 0C96      		adiw r24,12
 1199               	.LVL62:
 1200               	/* epilogue start */
 1201               	.LBE68:
 1202               	.LBE67:
 429:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);    
 430:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 1203               		.loc 1 430 0
 1204 0032 1F91      		pop r17
 1205 0034 0F91      		pop r16
 1206               	.LVL63:
 1207 0036 FF90      		pop r15
 1208 0038 EF90      		pop r14
 1209               	.LVL64:
 1210               	.LBB70:
 1211               	.LBB69:
 760:../../../os/hal/osal/rt/osal.h **** }
 1212               		.loc 2 760 0
 1213 003a 0C94 0000 		jmp chThdSuspendTimeoutS
 1214               	.LVL65:
 1215               	.LBE69:
 1216               	.LBE70:
 1217               		.cfi_endproc
 1218               	.LFE190:
 1220               		.comm	I2CD1,45,1
 1221               		.text
 1222               	.Letext0:
 1223               		.file 3 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 1224               		.file 4 "/usr/lib/avr/include/stdint.h"
 1225               		.file 5 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1226               		.file 6 "../../../os/rt/include/chsystypes.h"
 1227               		.file 7 "../../../os/rt/include/chschd.h"
 1228               		.file 8 "../../../os/rt/include/chtime.h"
 1229               		.file 9 "../../../os/common/ports/AVR/chcore.h"
 1230               		.file 10 "../../../os/rt/include/chsem.h"
 1231               		.file 11 "../../../os/rt/include/chmtx.h"
 1232               		.file 12 "../../../os/hal/include/hal_i2c.h"
 1233               		.file 13 "../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.h"
 1234               		.file 14 "../../../os/rt/include/chsys.h"
 1235               		.file 15 "../../../os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_i2c_lld.c
     /tmp/ccH01WPo.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccH01WPo.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccH01WPo.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccH01WPo.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccH01WPo.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccH01WPo.s:13     .text.__vector_24:0000000000000000 __vector_24
                            *COM*:000000000000002d I2CD1
     /tmp/ccH01WPo.s:721    .text.i2c_lld_init:0000000000000000 i2c_lld_init
     /tmp/ccH01WPo.s:744    .text.i2c_lld_start:0000000000000000 i2c_lld_start
     /tmp/ccH01WPo.s:803    .text.i2c_lld_stop:0000000000000000 i2c_lld_stop
     /tmp/ccH01WPo.s:830    .text.i2c_lld_master_receive_timeout:0000000000000000 i2c_lld_master_receive_timeout
     /tmp/ccH01WPo.s:886    .text.i2c_lld_master_transmit_timeout:0000000000000000 i2c_lld_master_transmit_timeout
     /tmp/ccH01WPo.s:971    .text.i2c_lld_matchAddress:0000000000000000 i2c_lld_matchAddress
     /tmp/ccH01WPo.s:1010   .text.i2c_ld_unmatchAddress:0000000000000000 i2c_ld_unmatchAddress
     /tmp/ccH01WPo.s:1039   .text.i2c_lld_unmatchAll:0000000000000000 i2c_lld_unmatchAll
     /tmp/ccH01WPo.s:1057   .text.i2c_lld_slaveReceive:0000000000000000 i2c_lld_slaveReceive
     /tmp/ccH01WPo.s:1140   .text.i2c_lld_slaveReply:0000000000000000 i2c_lld_slaveReply

UNDEFINED SYMBOLS
__avr_in_isr
chThdResumeI
chSchIsPreemptionRequired
chSchDoReschedule
__tablejump2__
i2cObjectInit
__udivmodsi4
chThdSuspendTimeoutS
__do_clear_bss
