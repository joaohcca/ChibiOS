   1               		.file	"hal_i2c_lld.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.__vector_24,"ax",@progbits
  11               	.global	__vector_24
  13               	__vector_24:
  14               	.LFB180:
  15               		.file 1 "../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c"
   1:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*
   2:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
   4:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     You may obtain a copy of the License at
   7:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
   8:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  10:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     See the License for the specific language governing permissions and
  14:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     limitations under the License.
  15:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** */
  16:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  17:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
  18:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @file    I2Cv1/hal_i2c_lld.c
  19:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   AVR/MEGA I2C subsystem low level driver source.
  20:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
  21:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @addtogroup I2C
  22:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @{
  23:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
  24:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #include "hal.h"
  25:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  26:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if HAL_USE_I2C || defined(__DOXYGEN__)
  27:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  28:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  29:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local definitions.                                                */
  30:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  31:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  32:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  33:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver exported variables.                                               */
  34:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  35:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  36:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /** @brief I2C driver identifier. */
  37:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if AVR_I2C_USE_I2C1 || defined(__DOXYGEN__)
  38:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** I2CDriver I2CD1;
  39:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #endif
  40:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  41:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  42:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local variables and types.                                        */
  43:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  44:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  45:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  46:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver local functions.                                                  */
  47:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  48:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  49:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  50:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver interrupt handlers.                                               */
  51:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
  52:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  53:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #if AVR_I2C_USE_I2C1 || defined(__DOXYGEN__)
  54:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
  55:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   I2C event interrupt handler.
  56:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
  57:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
  58:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
  59:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** OSAL_IRQ_HANDLER(TWI_vect) {
  16               		.loc 1 59 0
  17               		.cfi_startproc
  18 0000 1F92      		push r1
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 1, -2
  22 0002 0F92      		push r0
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 0, -3
  26 0004 0FB6      		in r0,__SREG__
  27 0006 0F92      		push r0
  28 0008 1124      		clr __zero_reg__
  29 000a 2F93      		push r18
  30               	.LCFI2:
  31               		.cfi_def_cfa_offset 5
  32               		.cfi_offset 18, -4
  33 000c 3F93      		push r19
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 6
  36               		.cfi_offset 19, -5
  37 000e 4F93      		push r20
  38               	.LCFI4:
  39               		.cfi_def_cfa_offset 7
  40               		.cfi_offset 20, -6
  41 0010 5F93      		push r21
  42               	.LCFI5:
  43               		.cfi_def_cfa_offset 8
  44               		.cfi_offset 21, -7
  45 0012 6F93      		push r22
  46               	.LCFI6:
  47               		.cfi_def_cfa_offset 9
  48               		.cfi_offset 22, -8
  49 0014 7F93      		push r23
  50               	.LCFI7:
  51               		.cfi_def_cfa_offset 10
  52               		.cfi_offset 23, -9
  53 0016 8F93      		push r24
  54               	.LCFI8:
  55               		.cfi_def_cfa_offset 11
  56               		.cfi_offset 24, -10
  57 0018 9F93      		push r25
  58               	.LCFI9:
  59               		.cfi_def_cfa_offset 12
  60               		.cfi_offset 25, -11
  61 001a AF93      		push r26
  62               	.LCFI10:
  63               		.cfi_def_cfa_offset 13
  64               		.cfi_offset 26, -12
  65 001c BF93      		push r27
  66               	.LCFI11:
  67               		.cfi_def_cfa_offset 14
  68               		.cfi_offset 27, -13
  69 001e EF93      		push r30
  70               	.LCFI12:
  71               		.cfi_def_cfa_offset 15
  72               		.cfi_offset 30, -14
  73 0020 FF93      		push r31
  74               	.LCFI13:
  75               		.cfi_def_cfa_offset 16
  76               		.cfi_offset 31, -15
  77               	/* prologue: Signal */
  78               	/* frame size = 0 */
  79               	/* stack size = 15 */
  80               	.L__stack_usage = 15
  60:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   OSAL_IRQ_PROLOGUE();
  81               		.loc 1 60 0
  82 0022 81E0      		ldi r24,lo8(1)
  83 0024 8093 0000 		sts __avr_in_isr,r24
  84               	.LVL0:
  61:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  62:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   I2CDriver *i2cp = &I2CD1;
  63:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
  64:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   switch (TWSR & 0xF8) {
  85               		.loc 1 64 0
  86 0028 8091 B900 		lds r24,185
  87 002c E82F      		mov r30,r24
  88 002e E87F      		andi r30,lo8(-8)
  89 0030 8E2F      		mov r24,r30
  90 0032 90E0      		ldi r25,0
  91 0034 893C      		cpi r24,-55
  92 0036 9105      		cpc r25,__zero_reg__
  93 0038 00F0      		brlo .L70
  94               	.L2:
  65:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_START:
  66:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_REPEAT_START:
  67:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = (i2cp->addr << 1);
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if ((i2cp->txbuf == NULL) || (i2cp->txbytes == 0) || (i2cp->txidx == i2cp->txbytes)) {
  69:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
  70:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  71:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  72:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  73:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_ADDR_ACK:
  74:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_DATA_ACK:
  75:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->txidx < i2cp->txbytes) {
  76:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR = i2cp->txbuf[i2cp->txidx++];
  77:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  78:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  79:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       if (i2cp->rxbuf && i2cp->rxbytes) {
  81:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  82:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
  83:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       else {
  84:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
  85:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         _i2c_wakeup_isr(i2cp);
  86:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
  87:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  88:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  89:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_ADDR_ACK:
  90:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
  91:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  92:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  93:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
  94:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
  95:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
  96:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
  97:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_DATA_ACK:
  98:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxbuf[i2cp->rxidx++] = TWDR;
  99:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
 100:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 101:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 102:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else {
 103:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 104:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 105:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 106:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_DATA_NACK:
 107:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxbuf[i2cp->rxidx] = TWDR;
 108:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
 109:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 110:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_ADDR_NACK:
 111:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_TX_DATA_NACK:
 112:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_MASTER_RX_ADDR_NACK:
 113:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_ACK_FAILURE;
 114:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 115:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 116:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*slave recieve status*/
 117:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_ADDR_ACK: /*ref $60*/
 118:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*review cases where state 0x60 should return nack (not initialize ?)
 119:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   same decision making on the 0x68 and 0x70)*/
 120:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx ==(i2cp->rxbytes -1)){
 121:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 122:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 123:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else{
 124:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEA)| (1 << TWIE));
 125:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 126:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 127:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_POST_ARB_LOST: /*ref $68*/
 128:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx ==(i2cp->rxbytes -1)){
 129:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 130:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 131:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     else{
 132:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEA)| (1 << TWIE));
 133:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 134:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_DATA_ACK: /*ref $80*/
 135:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*Read the data from the bus to the buffer rxbuf recieves the byte from TWDR*/
 136:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf[i2cp->rxidx++] = TWDR;
 137:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*send nack master move to $88*/
 138:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
 139:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 140:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 141:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*can recieve more bytes stay in $80*/
 142:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else {
 143:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->rxidx++;
 144:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 145:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 146:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 147:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_RX_DATA_NACK: /*ref $88*/
 148:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf[i2cp->rxidx++] = TWDR;
 149:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*implement decision making past communication with flags*/
 150:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 151:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 152:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 153:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_STOP:
 154:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*default to retain addr and not send start*/
 155:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE) | (1<<TWEA));
 156:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 157:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*slave transmitt status*/
 158:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_ADDR_ACK: /*ref $A8*/
 159:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*load data from buffer to TWDR*/
 160:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*check if there's more data to transmmit*/
 161:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx];
 162:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****        if (i2cp->txidx ==(i2cp->txbytes -1)){
 163:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWIE));
 164:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 165:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 166:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->txidx++;
 167:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 168:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 169:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 170:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_POST_ARB_LOST:/*ref $B0*/
 171:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*load data and check for nack transmission*/
 172:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx];
 173:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 174:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 175:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 176:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 177:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 178:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 179:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 180:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_DATA_ACK: /*ref $B8*/
 181:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWDR = i2cp->txbuf[i2cp->txidx++];
 182:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 183:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 184:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 185:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else{
 186:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 187:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 188:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 189:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_DATA_NACK: /*ref $C0*/
 190:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*implement decision making past communication with flags*/
 191:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 192:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 193:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 194:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_TX_LAST_DATA_ACK: /*ref $C8*/
 195:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*implement decision making past communication with flags*/
 196:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*default to retain addr and not send start*/
 197:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    TWCR = ((1 << TWINT) | (1<< TWIE)| (1<<TWEA));
 198:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    break;
 199:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_ARBITRATION_LOST:
 200:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_ARBITRATION_LOST;
 201:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 202:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_BUS_ERROR:
 203:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->errors |= I2C_BUS_ERROR;
 204:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 205:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   default:
 206:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     /* FIXME: only gets here if there are other MASTERs in the bus. */
 207:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
  95               		.loc 1 207 0
  96 003a 84E9      		ldi r24,lo8(-108)
  97 003c 8093 BC00 		sts 188,r24
  98               	.LVL1:
  99               	.LBB42:
 100               	.LBB43:
 101               		.file 2 "../../../os/hal/osal/rt/osal.h"
   1:../../../os/hal/osal/rt/osal.h **** /*
   2:../../../os/hal/osal/rt/osal.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:../../../os/hal/osal/rt/osal.h **** 
   4:../../../os/hal/osal/rt/osal.h ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:../../../os/hal/osal/rt/osal.h ****     you may not use this file except in compliance with the License.
   6:../../../os/hal/osal/rt/osal.h ****     You may obtain a copy of the License at
   7:../../../os/hal/osal/rt/osal.h **** 
   8:../../../os/hal/osal/rt/osal.h ****         http://www.apache.org/licenses/LICENSE-2.0
   9:../../../os/hal/osal/rt/osal.h **** 
  10:../../../os/hal/osal/rt/osal.h ****     Unless required by applicable law or agreed to in writing, software
  11:../../../os/hal/osal/rt/osal.h ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:../../../os/hal/osal/rt/osal.h ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:../../../os/hal/osal/rt/osal.h ****     See the License for the specific language governing permissions and
  14:../../../os/hal/osal/rt/osal.h ****     limitations under the License.
  15:../../../os/hal/osal/rt/osal.h **** */
  16:../../../os/hal/osal/rt/osal.h **** 
  17:../../../os/hal/osal/rt/osal.h **** /**
  18:../../../os/hal/osal/rt/osal.h ****  * @file    osal.h
  19:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module header.
  20:../../../os/hal/osal/rt/osal.h ****  *
  21:../../../os/hal/osal/rt/osal.h ****  * @addtogroup OSAL
  22:../../../os/hal/osal/rt/osal.h ****  * @{
  23:../../../os/hal/osal/rt/osal.h ****  */
  24:../../../os/hal/osal/rt/osal.h **** 
  25:../../../os/hal/osal/rt/osal.h **** #ifndef OSAL_H
  26:../../../os/hal/osal/rt/osal.h **** #define OSAL_H
  27:../../../os/hal/osal/rt/osal.h **** 
  28:../../../os/hal/osal/rt/osal.h **** #include <stddef.h>
  29:../../../os/hal/osal/rt/osal.h **** #include <stdint.h>
  30:../../../os/hal/osal/rt/osal.h **** #include <stdbool.h>
  31:../../../os/hal/osal/rt/osal.h **** 
  32:../../../os/hal/osal/rt/osal.h **** #include "ch.h"
  33:../../../os/hal/osal/rt/osal.h **** 
  34:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  35:../../../os/hal/osal/rt/osal.h **** /* Module constants.                                                         */
  36:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
  37:../../../os/hal/osal/rt/osal.h **** 
  38:../../../os/hal/osal/rt/osal.h **** /**
  39:../../../os/hal/osal/rt/osal.h ****  * @name    Common constants
  40:../../../os/hal/osal/rt/osal.h ****  * @{
  41:../../../os/hal/osal/rt/osal.h ****  */
  42:../../../os/hal/osal/rt/osal.h **** #if !defined(FALSE) || defined(__DOXYGEN__)
  43:../../../os/hal/osal/rt/osal.h **** #define FALSE                               0
  44:../../../os/hal/osal/rt/osal.h **** #endif
  45:../../../os/hal/osal/rt/osal.h **** 
  46:../../../os/hal/osal/rt/osal.h **** #if !defined(TRUE) || defined(__DOXYGEN__)
  47:../../../os/hal/osal/rt/osal.h **** #define TRUE                                1
  48:../../../os/hal/osal/rt/osal.h **** #endif
  49:../../../os/hal/osal/rt/osal.h **** 
  50:../../../os/hal/osal/rt/osal.h **** #define OSAL_SUCCESS                        false
  51:../../../os/hal/osal/rt/osal.h **** #define OSAL_FAILED                         true
  52:../../../os/hal/osal/rt/osal.h **** /** @} */
  53:../../../os/hal/osal/rt/osal.h **** 
  54:../../../os/hal/osal/rt/osal.h **** #if 0
  55:../../../os/hal/osal/rt/osal.h **** /**
  56:../../../os/hal/osal/rt/osal.h ****  * @name    Messages
  57:../../../os/hal/osal/rt/osal.h ****  * @{
  58:../../../os/hal/osal/rt/osal.h ****  */
  59:../../../os/hal/osal/rt/osal.h **** #define MSG_OK                              (msg_t)0
  60:../../../os/hal/osal/rt/osal.h **** #define MSG_TIMEOUT                         (msg_t)-1
  61:../../../os/hal/osal/rt/osal.h **** #define MSG_RESET                           (msg_t)-2
  62:../../../os/hal/osal/rt/osal.h **** /** @} */
  63:../../../os/hal/osal/rt/osal.h **** #endif
  64:../../../os/hal/osal/rt/osal.h **** 
  65:../../../os/hal/osal/rt/osal.h **** #if 0
  66:../../../os/hal/osal/rt/osal.h **** /**
  67:../../../os/hal/osal/rt/osal.h ****  * @name    Special time constants
  68:../../../os/hal/osal/rt/osal.h ****  * @{
  69:../../../os/hal/osal/rt/osal.h ****  */
  70:../../../os/hal/osal/rt/osal.h **** #define TIME_IMMEDIATE                      ((sysinterval_t)0)
  71:../../../os/hal/osal/rt/osal.h **** #define TIME_INFINITE                       ((sysinterval_t)-1)
  72:../../../os/hal/osal/rt/osal.h **** /** @} */
  73:../../../os/hal/osal/rt/osal.h **** #endif
  74:../../../os/hal/osal/rt/osal.h **** 
  75:../../../os/hal/osal/rt/osal.h **** /**
  76:../../../os/hal/osal/rt/osal.h ****  * @name    Systick modes.
  77:../../../os/hal/osal/rt/osal.h ****  * @{
  78:../../../os/hal/osal/rt/osal.h ****  */
  79:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_NONE                   0
  80:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_PERIODIC               1
  81:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE_FREERUNNING            2
  82:../../../os/hal/osal/rt/osal.h **** /** @} */
  83:../../../os/hal/osal/rt/osal.h **** 
  84:../../../os/hal/osal/rt/osal.h **** /**
  85:../../../os/hal/osal/rt/osal.h ****  * @name    Systick parameters.
  86:../../../os/hal/osal/rt/osal.h ****  * @{
  87:../../../os/hal/osal/rt/osal.h ****  */
  88:../../../os/hal/osal/rt/osal.h **** /**
  89:../../../os/hal/osal/rt/osal.h ****  * @brief   Size in bits of the @p systick_t type.
  90:../../../os/hal/osal/rt/osal.h ****  */
  91:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_RESOLUTION                  CH_CFG_ST_RESOLUTION
  92:../../../os/hal/osal/rt/osal.h **** 
  93:../../../os/hal/osal/rt/osal.h **** /**
  94:../../../os/hal/osal/rt/osal.h ****  * @brief   Required systick frequency or resolution.
  95:../../../os/hal/osal/rt/osal.h ****  */
  96:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_FREQUENCY                   CH_CFG_ST_FREQUENCY
  97:../../../os/hal/osal/rt/osal.h **** 
  98:../../../os/hal/osal/rt/osal.h **** /**
  99:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick mode required by the underlying OS.
 100:../../../os/hal/osal/rt/osal.h ****  */
 101:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_ST_TIMEDELTA == 0) || defined(__DOXYGEN__)
 102:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_PERIODIC
 103:../../../os/hal/osal/rt/osal.h **** #else
 104:../../../os/hal/osal/rt/osal.h **** #define OSAL_ST_MODE                        OSAL_ST_MODE_FREERUNNING
 105:../../../os/hal/osal/rt/osal.h **** #endif
 106:../../../os/hal/osal/rt/osal.h **** /** @} */
 107:../../../os/hal/osal/rt/osal.h **** 
 108:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 109:../../../os/hal/osal/rt/osal.h **** /* Module pre-compile time settings.                                         */
 110:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 111:../../../os/hal/osal/rt/osal.h **** 
 112:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 113:../../../os/hal/osal/rt/osal.h **** /* Derived constants and error checks.                                       */
 114:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 115:../../../os/hal/osal/rt/osal.h **** 
 116:../../../os/hal/osal/rt/osal.h **** #if !(OSAL_ST_MODE == OSAL_ST_MODE_NONE) &&                                 \
 117:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_PERIODIC) &&                             \
 118:../../../os/hal/osal/rt/osal.h ****     !(OSAL_ST_MODE == OSAL_ST_MODE_FREERUNNING)
 119:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_MODE setting in osal.h"
 120:../../../os/hal/osal/rt/osal.h **** #endif
 121:../../../os/hal/osal/rt/osal.h **** 
 122:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_RESOLUTION != 16) && (OSAL_ST_RESOLUTION != 32)
 123:../../../os/hal/osal/rt/osal.h **** #error "invalid OSAL_ST_RESOLUTION, must be 16 or 32"
 124:../../../os/hal/osal/rt/osal.h **** #endif
 125:../../../os/hal/osal/rt/osal.h **** 
 126:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 127:../../../os/hal/osal/rt/osal.h **** /* Module data structures and types.                                         */
 128:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 129:../../../os/hal/osal/rt/osal.h **** 
 130:../../../os/hal/osal/rt/osal.h **** #if 0
 131:../../../os/hal/osal/rt/osal.h **** /**
 132:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a system status word.
 133:../../../os/hal/osal/rt/osal.h ****  */
 134:../../../os/hal/osal/rt/osal.h **** typedef uint32_t syssts_t;
 135:../../../os/hal/osal/rt/osal.h **** #endif
 136:../../../os/hal/osal/rt/osal.h **** 
 137:../../../os/hal/osal/rt/osal.h **** #if 0
 138:../../../os/hal/osal/rt/osal.h **** /**
 139:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a message.
 140:../../../os/hal/osal/rt/osal.h ****  */
 141:../../../os/hal/osal/rt/osal.h **** typedef int32_t msg_t;
 142:../../../os/hal/osal/rt/osal.h **** #endif
 143:../../../os/hal/osal/rt/osal.h **** 
 144:../../../os/hal/osal/rt/osal.h **** #if 0
 145:../../../os/hal/osal/rt/osal.h **** /**
 146:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time counter.
 147:../../../os/hal/osal/rt/osal.h ****  */
 148:../../../os/hal/osal/rt/osal.h **** typedef uint32_t systime_t;
 149:../../../os/hal/osal/rt/osal.h **** #endif
 150:../../../os/hal/osal/rt/osal.h **** 
 151:../../../os/hal/osal/rt/osal.h **** #if 0
 152:../../../os/hal/osal/rt/osal.h **** /**
 153:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of system time interval.
 154:../../../os/hal/osal/rt/osal.h ****  */
 155:../../../os/hal/osal/rt/osal.h **** typedef uint32_t sysinterval_t;
 156:../../../os/hal/osal/rt/osal.h **** #endif
 157:../../../os/hal/osal/rt/osal.h **** 
 158:../../../os/hal/osal/rt/osal.h **** #if 0
 159:../../../os/hal/osal/rt/osal.h **** /**
 160:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of realtime counter.
 161:../../../os/hal/osal/rt/osal.h ****  */
 162:../../../os/hal/osal/rt/osal.h **** typedef uint32_t rtcnt_t;
 163:../../../os/hal/osal/rt/osal.h **** #endif
 164:../../../os/hal/osal/rt/osal.h **** 
 165:../../../os/hal/osal/rt/osal.h **** #if 0
 166:../../../os/hal/osal/rt/osal.h **** /**
 167:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread reference.
 168:../../../os/hal/osal/rt/osal.h ****  */
 169:../../../os/hal/osal/rt/osal.h **** typedef thread_t * thread_reference_t;
 170:../../../os/hal/osal/rt/osal.h **** #endif
 171:../../../os/hal/osal/rt/osal.h **** 
 172:../../../os/hal/osal/rt/osal.h **** #if 0
 173:../../../os/hal/osal/rt/osal.h **** /**
 174:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags mask.
 175:../../../os/hal/osal/rt/osal.h ****  */
 176:../../../os/hal/osal/rt/osal.h **** typedef uint32_t eventflags_t;
 177:../../../os/hal/osal/rt/osal.h **** #endif
 178:../../../os/hal/osal/rt/osal.h **** 
 179:../../../os/hal/osal/rt/osal.h **** #if (CH_CFG_USE_EVENTS == FALSE) || defined(__DOXYGEN__)
 180:../../../os/hal/osal/rt/osal.h **** /**
 181:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event flags object.
 182:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 183:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 184:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 185:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 186:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 187:../../../os/hal/osal/rt/osal.h ****  */
 188:../../../os/hal/osal/rt/osal.h **** typedef struct event_source event_source_t;
 189:../../../os/hal/osal/rt/osal.h **** 
 190:../../../os/hal/osal/rt/osal.h **** /**
 191:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of an event source callback.
 192:../../../os/hal/osal/rt/osal.h ****  * @note    This type is not part of the OSAL API and is provided
 193:../../../os/hal/osal/rt/osal.h ****  *          exclusively as an example and for convenience.
 194:../../../os/hal/osal/rt/osal.h ****  */
 195:../../../os/hal/osal/rt/osal.h **** typedef void (*eventcallback_t)(event_source_t *esp);
 196:../../../os/hal/osal/rt/osal.h **** 
 197:../../../os/hal/osal/rt/osal.h **** /**
 198:../../../os/hal/osal/rt/osal.h ****  * @brief   Events source object.
 199:../../../os/hal/osal/rt/osal.h ****  * @note    The content of this structure is not part of the API and should
 200:../../../os/hal/osal/rt/osal.h ****  *          not be relied upon. Implementers may define this structure in
 201:../../../os/hal/osal/rt/osal.h ****  *          an entirely different way.
 202:../../../os/hal/osal/rt/osal.h ****  * @note    Retrieval and clearing of the flags are not defined in this
 203:../../../os/hal/osal/rt/osal.h ****  *          API and are implementation-dependent.
 204:../../../os/hal/osal/rt/osal.h ****  */
 205:../../../os/hal/osal/rt/osal.h **** struct event_source {
 206:../../../os/hal/osal/rt/osal.h ****   volatile eventflags_t flags;      /**< @brief Stored event flags.         */
 207:../../../os/hal/osal/rt/osal.h ****   eventcallback_t       cb;         /**< @brief Event source callback.      */
 208:../../../os/hal/osal/rt/osal.h ****   void                  *param;     /**< @brief User defined field.         */
 209:../../../os/hal/osal/rt/osal.h **** };
 210:../../../os/hal/osal/rt/osal.h **** #endif /* CH_CFG_USE_EVENTS == FALSE */
 211:../../../os/hal/osal/rt/osal.h **** 
 212:../../../os/hal/osal/rt/osal.h **** /**
 213:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a mutex.
 214:../../../os/hal/osal/rt/osal.h ****  * @note    If the OS does not support mutexes or there is no OS then the
 215:../../../os/hal/osal/rt/osal.h ****  *          mechanism can be simulated.
 216:../../../os/hal/osal/rt/osal.h ****  */
 217:../../../os/hal/osal/rt/osal.h **** #if CH_CFG_USE_MUTEXES || defined(__DOXYGEN__)
 218:../../../os/hal/osal/rt/osal.h **** #elif CH_CFG_USE_SEMAPHORES
 219:../../../os/hal/osal/rt/osal.h **** typedef semaphore_t mutex_t;
 220:../../../os/hal/osal/rt/osal.h **** #else
 221:../../../os/hal/osal/rt/osal.h **** typedef uint32_t mutex_t;
 222:../../../os/hal/osal/rt/osal.h **** #endif
 223:../../../os/hal/osal/rt/osal.h **** 
 224:../../../os/hal/osal/rt/osal.h **** #if 0
 225:../../../os/hal/osal/rt/osal.h **** /**
 226:../../../os/hal/osal/rt/osal.h ****  * @brief   Type of a thread queue.
 227:../../../os/hal/osal/rt/osal.h ****  * @details A thread queue is a queue of sleeping threads, queued threads
 228:../../../os/hal/osal/rt/osal.h ****  *          can be dequeued one at time or all together.
 229:../../../os/hal/osal/rt/osal.h ****  * @note    In this implementation it is implemented as a single reference
 230:../../../os/hal/osal/rt/osal.h ****  *          because there are no real threads.
 231:../../../os/hal/osal/rt/osal.h ****  */
 232:../../../os/hal/osal/rt/osal.h **** typedef struct {
 233:../../../os/hal/osal/rt/osal.h ****   thread_reference_t    tr;
 234:../../../os/hal/osal/rt/osal.h **** } threads_queue_t;
 235:../../../os/hal/osal/rt/osal.h **** #endif
 236:../../../os/hal/osal/rt/osal.h **** 
 237:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 238:../../../os/hal/osal/rt/osal.h **** /* Module macros.                                                            */
 239:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 240:../../../os/hal/osal/rt/osal.h **** 
 241:../../../os/hal/osal/rt/osal.h **** /**
 242:../../../os/hal/osal/rt/osal.h ****  * @name    Debug related macros
 243:../../../os/hal/osal/rt/osal.h ****  * @{
 244:../../../os/hal/osal/rt/osal.h ****  */
 245:../../../os/hal/osal/rt/osal.h **** /**
 246:../../../os/hal/osal/rt/osal.h ****  * @brief   Condition assertion.
 247:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics with a
 248:../../../os/hal/osal/rt/osal.h ****  *          message and halts.
 249:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_ASSERTIONS
 250:../../../os/hal/osal/rt/osal.h ****  *          switch is enabled.
 251:../../../os/hal/osal/rt/osal.h ****  * @note    The remark string is not currently used except for putting a
 252:../../../os/hal/osal/rt/osal.h ****  *          comment in the code about the assertion.
 253:../../../os/hal/osal/rt/osal.h ****  *
 254:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 255:../../../os/hal/osal/rt/osal.h ****  * @param[in] remark    a remark string
 256:../../../os/hal/osal/rt/osal.h ****  *
 257:../../../os/hal/osal/rt/osal.h ****  * @api
 258:../../../os/hal/osal/rt/osal.h ****  */
 259:../../../os/hal/osal/rt/osal.h **** #define osalDbgAssert(c, remark) chDbgAssert(c, remark)
 260:../../../os/hal/osal/rt/osal.h **** 
 261:../../../os/hal/osal/rt/osal.h **** /**
 262:../../../os/hal/osal/rt/osal.h ****  * @brief   Function parameters check.
 263:../../../os/hal/osal/rt/osal.h ****  * @details If the condition check fails then the OSAL panics and halts.
 264:../../../os/hal/osal/rt/osal.h ****  * @note    The condition is tested only if the @p OSAL_ENABLE_CHECKS switch
 265:../../../os/hal/osal/rt/osal.h ****  *          is enabled.
 266:../../../os/hal/osal/rt/osal.h ****  *
 267:../../../os/hal/osal/rt/osal.h ****  * @param[in] c         the condition to be verified to be true
 268:../../../os/hal/osal/rt/osal.h ****  *
 269:../../../os/hal/osal/rt/osal.h ****  * @api
 270:../../../os/hal/osal/rt/osal.h ****  */
 271:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheck(c) chDbgCheck(c)
 272:../../../os/hal/osal/rt/osal.h **** 
 273:../../../os/hal/osal/rt/osal.h **** /**
 274:../../../os/hal/osal/rt/osal.h ****  * @brief   I-Class state check.
 275:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 276:../../../os/hal/osal/rt/osal.h ****  */
 277:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassI() chDbgCheckClassI()
 278:../../../os/hal/osal/rt/osal.h **** 
 279:../../../os/hal/osal/rt/osal.h **** /**
 280:../../../os/hal/osal/rt/osal.h ****  * @brief   S-Class state check.
 281:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 282:../../../os/hal/osal/rt/osal.h ****  */
 283:../../../os/hal/osal/rt/osal.h **** #define osalDbgCheckClassS() chDbgCheckClassS()
 284:../../../os/hal/osal/rt/osal.h **** /** @} */
 285:../../../os/hal/osal/rt/osal.h **** 
 286:../../../os/hal/osal/rt/osal.h **** /**
 287:../../../os/hal/osal/rt/osal.h ****  * @name    IRQ service routines wrappers
 288:../../../os/hal/osal/rt/osal.h ****  * @{
 289:../../../os/hal/osal/rt/osal.h ****  */
 290:../../../os/hal/osal/rt/osal.h **** /**
 291:../../../os/hal/osal/rt/osal.h ****  * @brief   Priority level verification macro.
 292:../../../os/hal/osal/rt/osal.h ****  */
 293:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_IS_VALID_PRIORITY(n) CH_IRQ_IS_VALID_KERNEL_PRIORITY(n)
 294:../../../os/hal/osal/rt/osal.h **** 
 295:../../../os/hal/osal/rt/osal.h **** /**
 296:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ prologue code.
 297:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the start of all IRQ handlers.
 298:../../../os/hal/osal/rt/osal.h ****  */
 299:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_PROLOGUE() CH_IRQ_PROLOGUE()
 300:../../../os/hal/osal/rt/osal.h **** 
 301:../../../os/hal/osal/rt/osal.h **** /**
 302:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ epilogue code.
 303:../../../os/hal/osal/rt/osal.h ****  * @details This macro must be inserted at the end of all IRQ handlers.
 304:../../../os/hal/osal/rt/osal.h ****  */
 305:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_EPILOGUE() CH_IRQ_EPILOGUE()
 306:../../../os/hal/osal/rt/osal.h **** 
 307:../../../os/hal/osal/rt/osal.h **** /**
 308:../../../os/hal/osal/rt/osal.h ****  * @brief   IRQ handler function declaration.
 309:../../../os/hal/osal/rt/osal.h ****  * @details This macro hides the details of an ISR function declaration.
 310:../../../os/hal/osal/rt/osal.h ****  *
 311:../../../os/hal/osal/rt/osal.h ****  * @param[in] id        a vector name as defined in @p vectors.s
 312:../../../os/hal/osal/rt/osal.h ****  */
 313:../../../os/hal/osal/rt/osal.h **** #define OSAL_IRQ_HANDLER(id) CH_IRQ_HANDLER(id)
 314:../../../os/hal/osal/rt/osal.h **** /** @} */
 315:../../../os/hal/osal/rt/osal.h **** 
 316:../../../os/hal/osal/rt/osal.h **** /**
 317:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities
 318:../../../os/hal/osal/rt/osal.h ****  * @{
 319:../../../os/hal/osal/rt/osal.h ****  */
 320:../../../os/hal/osal/rt/osal.h **** /**
 321:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to system ticks.
 322:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to system ticks number.
 323:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 324:../../../os/hal/osal/rt/osal.h ****  *
 325:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      number of seconds
 326:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 327:../../../os/hal/osal/rt/osal.h ****  *
 328:../../../os/hal/osal/rt/osal.h ****  * @api
 329:../../../os/hal/osal/rt/osal.h ****  */
 330:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2I(secs) TIME_S2I(secs)
 331:../../../os/hal/osal/rt/osal.h **** 
 332:../../../os/hal/osal/rt/osal.h **** /**
 333:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to system ticks.
 334:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to system ticks number.
 335:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 336:../../../os/hal/osal/rt/osal.h ****  *
 337:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     number of milliseconds
 338:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 339:../../../os/hal/osal/rt/osal.h ****  *
 340:../../../os/hal/osal/rt/osal.h ****  * @api
 341:../../../os/hal/osal/rt/osal.h ****  */
 342:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2I(msecs) TIME_MS2I(msecs)
 343:../../../os/hal/osal/rt/osal.h **** 
 344:../../../os/hal/osal/rt/osal.h **** /**
 345:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to system ticks.
 346:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to system ticks number.
 347:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next tick boundary.
 348:../../../os/hal/osal/rt/osal.h ****  *
 349:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     number of microseconds
 350:../../../os/hal/osal/rt/osal.h ****  * @return              The number of ticks.
 351:../../../os/hal/osal/rt/osal.h ****  *
 352:../../../os/hal/osal/rt/osal.h ****  * @api
 353:../../../os/hal/osal/rt/osal.h ****  */
 354:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2I(usecs) TIME_US2I(usecs)
 355:../../../os/hal/osal/rt/osal.h **** /** @} */
 356:../../../os/hal/osal/rt/osal.h **** 
 357:../../../os/hal/osal/rt/osal.h **** /**
 358:../../../os/hal/osal/rt/osal.h ****  * @name    Time conversion utilities for the realtime counter
 359:../../../os/hal/osal/rt/osal.h ****  * @{
 360:../../../os/hal/osal/rt/osal.h ****  */
 361:../../../os/hal/osal/rt/osal.h **** /**
 362:../../../os/hal/osal/rt/osal.h ****  * @brief   Seconds to realtime counter.
 363:../../../os/hal/osal/rt/osal.h ****  * @details Converts from seconds to realtime counter cycles.
 364:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1.
 365:../../../os/hal/osal/rt/osal.h ****  *
 366:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 367:../../../os/hal/osal/rt/osal.h ****  * @param[in] sec       number of seconds
 368:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 369:../../../os/hal/osal/rt/osal.h ****  *
 370:../../../os/hal/osal/rt/osal.h ****  * @api
 371:../../../os/hal/osal/rt/osal.h ****  */
 372:../../../os/hal/osal/rt/osal.h **** #define OSAL_S2RTC(freq, sec) S2RTC(freq, sec)
 373:../../../os/hal/osal/rt/osal.h **** 
 374:../../../os/hal/osal/rt/osal.h **** /**
 375:../../../os/hal/osal/rt/osal.h ****  * @brief   Milliseconds to realtime counter.
 376:../../../os/hal/osal/rt/osal.h ****  * @details Converts from milliseconds to realtime counter cycles.
 377:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next millisecond boundary.
 378:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000.
 379:../../../os/hal/osal/rt/osal.h ****  *
 380:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 381:../../../os/hal/osal/rt/osal.h ****  * @param[in] msec      number of milliseconds
 382:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 383:../../../os/hal/osal/rt/osal.h ****  *
 384:../../../os/hal/osal/rt/osal.h ****  * @api
 385:../../../os/hal/osal/rt/osal.h ****  */
 386:../../../os/hal/osal/rt/osal.h **** #define OSAL_MS2RTC(freq, msec) MS2RTC(freq, msec)
 387:../../../os/hal/osal/rt/osal.h **** 
 388:../../../os/hal/osal/rt/osal.h **** /**
 389:../../../os/hal/osal/rt/osal.h ****  * @brief   Microseconds to realtime counter.
 390:../../../os/hal/osal/rt/osal.h ****  * @details Converts from microseconds to realtime counter cycles.
 391:../../../os/hal/osal/rt/osal.h ****  * @note    The result is rounded upward to the next microsecond boundary.
 392:../../../os/hal/osal/rt/osal.h ****  * @note    The macro assumes that @p freq >= @p 1000000.
 393:../../../os/hal/osal/rt/osal.h ****  *
 394:../../../os/hal/osal/rt/osal.h ****  * @param[in] freq      clock frequency, in Hz, of the realtime counter
 395:../../../os/hal/osal/rt/osal.h ****  * @param[in] usec      number of microseconds
 396:../../../os/hal/osal/rt/osal.h ****  * @return              The number of cycles.
 397:../../../os/hal/osal/rt/osal.h ****  *
 398:../../../os/hal/osal/rt/osal.h ****  * @api
 399:../../../os/hal/osal/rt/osal.h ****  */
 400:../../../os/hal/osal/rt/osal.h **** #define OSAL_US2RTC(freq, usec) US2RTC(freq, usec)
 401:../../../os/hal/osal/rt/osal.h **** /** @} */
 402:../../../os/hal/osal/rt/osal.h **** 
 403:../../../os/hal/osal/rt/osal.h **** /**
 404:../../../os/hal/osal/rt/osal.h ****  * @name    Sleep macros using absolute time
 405:../../../os/hal/osal/rt/osal.h ****  * @{
 406:../../../os/hal/osal/rt/osal.h ****  */
 407:../../../os/hal/osal/rt/osal.h **** /**
 408:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of seconds.
 409:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 410:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 411:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 412:../../../os/hal/osal/rt/osal.h ****  *
 413:../../../os/hal/osal/rt/osal.h ****  * @param[in] secs      time in seconds, must be different from zero
 414:../../../os/hal/osal/rt/osal.h ****  *
 415:../../../os/hal/osal/rt/osal.h ****  * @api
 416:../../../os/hal/osal/rt/osal.h ****  */
 417:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepSeconds(secs) osalThreadSleep(OSAL_S2I(secs))
 418:../../../os/hal/osal/rt/osal.h **** 
 419:../../../os/hal/osal/rt/osal.h **** /**
 420:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 421:../../../os/hal/osal/rt/osal.h ****  *          milliseconds.
 422:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 423:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 424:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 425:../../../os/hal/osal/rt/osal.h ****  *
 426:../../../os/hal/osal/rt/osal.h ****  * @param[in] msecs     time in milliseconds, must be different from zero
 427:../../../os/hal/osal/rt/osal.h ****  *
 428:../../../os/hal/osal/rt/osal.h ****  * @api
 429:../../../os/hal/osal/rt/osal.h ****  */
 430:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMilliseconds(msecs) osalThreadSleep(OSAL_MS2I(msecs))
 431:../../../os/hal/osal/rt/osal.h **** 
 432:../../../os/hal/osal/rt/osal.h **** /**
 433:../../../os/hal/osal/rt/osal.h ****  * @brief   Delays the invoking thread for the specified number of
 434:../../../os/hal/osal/rt/osal.h ****  *          microseconds.
 435:../../../os/hal/osal/rt/osal.h ****  * @note    The specified time is rounded up to a value allowed by the real
 436:../../../os/hal/osal/rt/osal.h ****  *          system tick clock.
 437:../../../os/hal/osal/rt/osal.h ****  * @note    The maximum specifiable value is implementation dependent.
 438:../../../os/hal/osal/rt/osal.h ****  *
 439:../../../os/hal/osal/rt/osal.h ****  * @param[in] usecs     time in microseconds, must be different from zero
 440:../../../os/hal/osal/rt/osal.h ****  *
 441:../../../os/hal/osal/rt/osal.h ****  * @api
 442:../../../os/hal/osal/rt/osal.h ****  */
 443:../../../os/hal/osal/rt/osal.h **** #define osalThreadSleepMicroseconds(usecs) osalThreadSleep(OSAL_US2I(usecs))
 444:../../../os/hal/osal/rt/osal.h **** /** @} */
 445:../../../os/hal/osal/rt/osal.h **** 
 446:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 447:../../../os/hal/osal/rt/osal.h **** /* External declarations.                                                    */
 448:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 449:../../../os/hal/osal/rt/osal.h **** 
 450:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 451:../../../os/hal/osal/rt/osal.h **** extern "C" {
 452:../../../os/hal/osal/rt/osal.h **** #endif
 453:../../../os/hal/osal/rt/osal.h **** 
 454:../../../os/hal/osal/rt/osal.h **** #ifdef __cplusplus
 455:../../../os/hal/osal/rt/osal.h **** }
 456:../../../os/hal/osal/rt/osal.h **** #endif
 457:../../../os/hal/osal/rt/osal.h **** 
 458:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 459:../../../os/hal/osal/rt/osal.h **** /* Module inline functions.                                                  */
 460:../../../os/hal/osal/rt/osal.h **** /*===========================================================================*/
 461:../../../os/hal/osal/rt/osal.h **** 
 462:../../../os/hal/osal/rt/osal.h **** /**
 463:../../../os/hal/osal/rt/osal.h ****  * @brief   OSAL module initialization.
 464:../../../os/hal/osal/rt/osal.h ****  *
 465:../../../os/hal/osal/rt/osal.h ****  * @api
 466:../../../os/hal/osal/rt/osal.h ****  */
 467:../../../os/hal/osal/rt/osal.h **** static inline void osalInit(void) {
 468:../../../os/hal/osal/rt/osal.h **** 
 469:../../../os/hal/osal/rt/osal.h **** }
 470:../../../os/hal/osal/rt/osal.h **** 
 471:../../../os/hal/osal/rt/osal.h **** /**
 472:../../../os/hal/osal/rt/osal.h ****  * @brief   System halt with error message.
 473:../../../os/hal/osal/rt/osal.h ****  *
 474:../../../os/hal/osal/rt/osal.h ****  * @param[in] reason    the halt message pointer
 475:../../../os/hal/osal/rt/osal.h ****  *
 476:../../../os/hal/osal/rt/osal.h ****  * @api
 477:../../../os/hal/osal/rt/osal.h ****  */
 478:../../../os/hal/osal/rt/osal.h **** static inline void osalSysHalt(const char *reason) {
 479:../../../os/hal/osal/rt/osal.h **** 
 480:../../../os/hal/osal/rt/osal.h ****   chSysHalt(reason);
 481:../../../os/hal/osal/rt/osal.h **** }
 482:../../../os/hal/osal/rt/osal.h **** 
 483:../../../os/hal/osal/rt/osal.h **** /**
 484:../../../os/hal/osal/rt/osal.h ****  * @brief   Disables interrupts globally.
 485:../../../os/hal/osal/rt/osal.h ****  *
 486:../../../os/hal/osal/rt/osal.h ****  * @special
 487:../../../os/hal/osal/rt/osal.h ****  */
 488:../../../os/hal/osal/rt/osal.h **** static inline void osalSysDisable(void) {
 489:../../../os/hal/osal/rt/osal.h **** 
 490:../../../os/hal/osal/rt/osal.h ****   chSysDisable();
 491:../../../os/hal/osal/rt/osal.h **** }
 492:../../../os/hal/osal/rt/osal.h **** 
 493:../../../os/hal/osal/rt/osal.h **** /**
 494:../../../os/hal/osal/rt/osal.h ****  * @brief   Enables interrupts globally.
 495:../../../os/hal/osal/rt/osal.h ****  *
 496:../../../os/hal/osal/rt/osal.h ****  * @special
 497:../../../os/hal/osal/rt/osal.h ****  */
 498:../../../os/hal/osal/rt/osal.h **** static inline void osalSysEnable(void) {
 499:../../../os/hal/osal/rt/osal.h **** 
 500:../../../os/hal/osal/rt/osal.h ****   chSysEnable();
 501:../../../os/hal/osal/rt/osal.h **** }
 502:../../../os/hal/osal/rt/osal.h **** 
 503:../../../os/hal/osal/rt/osal.h **** /**
 504:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from thread context.
 505:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 506:../../../os/hal/osal/rt/osal.h ****  *
 507:../../../os/hal/osal/rt/osal.h ****  * @special
 508:../../../os/hal/osal/rt/osal.h ****  */
 509:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLock(void) {
 510:../../../os/hal/osal/rt/osal.h **** 
 511:../../../os/hal/osal/rt/osal.h ****   chSysLock();
 512:../../../os/hal/osal/rt/osal.h **** }
 513:../../../os/hal/osal/rt/osal.h **** 
 514:../../../os/hal/osal/rt/osal.h **** /**
 515:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from thread context.
 516:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 517:../../../os/hal/osal/rt/osal.h ****  *
 518:../../../os/hal/osal/rt/osal.h ****  * @special
 519:../../../os/hal/osal/rt/osal.h ****  */
 520:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlock(void) {
 521:../../../os/hal/osal/rt/osal.h **** 
 522:../../../os/hal/osal/rt/osal.h ****   chSysUnlock();
 523:../../../os/hal/osal/rt/osal.h **** }
 524:../../../os/hal/osal/rt/osal.h **** 
 525:../../../os/hal/osal/rt/osal.h **** /**
 526:../../../os/hal/osal/rt/osal.h ****  * @brief   Enters a critical zone from ISR context.
 527:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 528:../../../os/hal/osal/rt/osal.h ****  *
 529:../../../os/hal/osal/rt/osal.h ****  * @special
 530:../../../os/hal/osal/rt/osal.h ****  */
 531:../../../os/hal/osal/rt/osal.h **** static inline void osalSysLockFromISR(void) {
 532:../../../os/hal/osal/rt/osal.h **** 
 533:../../../os/hal/osal/rt/osal.h ****   chSysLockFromISR();
 534:../../../os/hal/osal/rt/osal.h **** }
 535:../../../os/hal/osal/rt/osal.h **** 
 536:../../../os/hal/osal/rt/osal.h **** /**
 537:../../../os/hal/osal/rt/osal.h ****  * @brief   Leaves a critical zone from ISR context.
 538:../../../os/hal/osal/rt/osal.h ****  * @note    This function cannot be used for reentrant critical zones.
 539:../../../os/hal/osal/rt/osal.h ****  *
 540:../../../os/hal/osal/rt/osal.h ****  * @special
 541:../../../os/hal/osal/rt/osal.h ****  */
 542:../../../os/hal/osal/rt/osal.h **** static inline void osalSysUnlockFromISR(void) {
 543:../../../os/hal/osal/rt/osal.h **** 
 544:../../../os/hal/osal/rt/osal.h ****   chSysUnlockFromISR();
 545:../../../os/hal/osal/rt/osal.h **** }
 546:../../../os/hal/osal/rt/osal.h **** 
 547:../../../os/hal/osal/rt/osal.h **** /**
 548:../../../os/hal/osal/rt/osal.h ****  * @brief   Returns the execution status and enters a critical zone.
 549:../../../os/hal/osal/rt/osal.h ****  * @details This functions enters into a critical zone and can be called
 550:../../../os/hal/osal/rt/osal.h ****  *          from any context. Because its flexibility it is less efficient
 551:../../../os/hal/osal/rt/osal.h ****  *          than @p chSysLock() which is preferable when the calling context
 552:../../../os/hal/osal/rt/osal.h ****  *          is known.
 553:../../../os/hal/osal/rt/osal.h ****  * @post    The system is in a critical zone.
 554:../../../os/hal/osal/rt/osal.h ****  *
 555:../../../os/hal/osal/rt/osal.h ****  * @return              The previous system status, the encoding of this
 556:../../../os/hal/osal/rt/osal.h ****  *                      status word is architecture-dependent and opaque.
 557:../../../os/hal/osal/rt/osal.h ****  *
 558:../../../os/hal/osal/rt/osal.h ****  * @xclass
 559:../../../os/hal/osal/rt/osal.h ****  */
 560:../../../os/hal/osal/rt/osal.h **** static inline syssts_t osalSysGetStatusAndLockX(void) {
 561:../../../os/hal/osal/rt/osal.h **** 
 562:../../../os/hal/osal/rt/osal.h ****   return chSysGetStatusAndLockX();
 563:../../../os/hal/osal/rt/osal.h **** }
 564:../../../os/hal/osal/rt/osal.h **** 
 565:../../../os/hal/osal/rt/osal.h **** /**
 566:../../../os/hal/osal/rt/osal.h ****  * @brief   Restores the specified execution status and leaves a critical zone.
 567:../../../os/hal/osal/rt/osal.h ****  * @note    A call to @p chSchRescheduleS() is automatically performed
 568:../../../os/hal/osal/rt/osal.h ****  *          if exiting the critical zone and if not in ISR context.
 569:../../../os/hal/osal/rt/osal.h ****  *
 570:../../../os/hal/osal/rt/osal.h ****  * @param[in] sts       the system status to be restored.
 571:../../../os/hal/osal/rt/osal.h ****  *
 572:../../../os/hal/osal/rt/osal.h ****  * @xclass
 573:../../../os/hal/osal/rt/osal.h ****  */
 574:../../../os/hal/osal/rt/osal.h **** static inline void osalSysRestoreStatusX(syssts_t sts) {
 575:../../../os/hal/osal/rt/osal.h **** 
 576:../../../os/hal/osal/rt/osal.h ****   chSysRestoreStatusX(sts);
 577:../../../os/hal/osal/rt/osal.h **** }
 578:../../../os/hal/osal/rt/osal.h **** 
 579:../../../os/hal/osal/rt/osal.h **** /**
 580:../../../os/hal/osal/rt/osal.h ****  * @brief   Polled delay.
 581:../../../os/hal/osal/rt/osal.h ****  * @note    The real delay is always few cycles in excess of the specified
 582:../../../os/hal/osal/rt/osal.h ****  *          value.
 583:../../../os/hal/osal/rt/osal.h ****  *
 584:../../../os/hal/osal/rt/osal.h ****  * @param[in] cycles    number of cycles
 585:../../../os/hal/osal/rt/osal.h ****  *
 586:../../../os/hal/osal/rt/osal.h ****  * @xclass
 587:../../../os/hal/osal/rt/osal.h ****  */
 588:../../../os/hal/osal/rt/osal.h **** #if (PORT_SUPPORTS_RT == TRUE) || defined(__DOXYGEN__)
 589:../../../os/hal/osal/rt/osal.h **** static inline void osalSysPolledDelayX(rtcnt_t cycles) {
 590:../../../os/hal/osal/rt/osal.h **** 
 591:../../../os/hal/osal/rt/osal.h ****   chSysPolledDelayX(cycles);
 592:../../../os/hal/osal/rt/osal.h **** }
 593:../../../os/hal/osal/rt/osal.h **** #endif
 594:../../../os/hal/osal/rt/osal.h **** 
 595:../../../os/hal/osal/rt/osal.h **** /**
 596:../../../os/hal/osal/rt/osal.h ****  * @brief   Systick callback for the underlying OS.
 597:../../../os/hal/osal/rt/osal.h ****  * @note    This callback is only defined if the OSAL requires such a
 598:../../../os/hal/osal/rt/osal.h ****  *          service from the HAL.
 599:../../../os/hal/osal/rt/osal.h ****  */
 600:../../../os/hal/osal/rt/osal.h **** #if (OSAL_ST_MODE != OSAL_ST_MODE_NONE) || defined(__DOXYGEN__)
 601:../../../os/hal/osal/rt/osal.h **** static inline void osalOsTimerHandlerI(void) {
 602:../../../os/hal/osal/rt/osal.h **** 
 603:../../../os/hal/osal/rt/osal.h ****   chSysTimerHandlerI();
 604:../../../os/hal/osal/rt/osal.h **** }
 605:../../../os/hal/osal/rt/osal.h **** #endif
 606:../../../os/hal/osal/rt/osal.h **** 
 607:../../../os/hal/osal/rt/osal.h **** /**
 608:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if a reschedule is required and performs it.
 609:../../../os/hal/osal/rt/osal.h ****  * @note    I-Class functions invoked from thread context must not reschedule
 610:../../../os/hal/osal/rt/osal.h ****  *          by themselves, an explicit reschedule using this function is
 611:../../../os/hal/osal/rt/osal.h ****  *          required in this scenario.
 612:../../../os/hal/osal/rt/osal.h ****  * @note    Not implemented in this simplified OSAL.
 613:../../../os/hal/osal/rt/osal.h ****  *
 614:../../../os/hal/osal/rt/osal.h ****  * @sclass
 615:../../../os/hal/osal/rt/osal.h ****  */
 616:../../../os/hal/osal/rt/osal.h **** static inline void osalOsRescheduleS(void) {
 617:../../../os/hal/osal/rt/osal.h **** 
 618:../../../os/hal/osal/rt/osal.h ****   chSchRescheduleS();
 619:../../../os/hal/osal/rt/osal.h **** }
 620:../../../os/hal/osal/rt/osal.h **** 
 621:../../../os/hal/osal/rt/osal.h **** /**
 622:../../../os/hal/osal/rt/osal.h ****  * @brief   Current system time.
 623:../../../os/hal/osal/rt/osal.h ****  * @details Returns the number of system ticks since the @p osalInit()
 624:../../../os/hal/osal/rt/osal.h ****  *          invocation.
 625:../../../os/hal/osal/rt/osal.h ****  * @note    The counter can reach its maximum and then restart from zero.
 626:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context but its atomicity
 627:../../../os/hal/osal/rt/osal.h ****  *          is not guaranteed on architectures whose word size is less than
 628:../../../os/hal/osal/rt/osal.h ****  *          @p systime_t size.
 629:../../../os/hal/osal/rt/osal.h ****  *
 630:../../../os/hal/osal/rt/osal.h ****  * @return              The system time in ticks.
 631:../../../os/hal/osal/rt/osal.h ****  *
 632:../../../os/hal/osal/rt/osal.h ****  * @xclass
 633:../../../os/hal/osal/rt/osal.h ****  */
 634:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalOsGetSystemTimeX(void) {
 635:../../../os/hal/osal/rt/osal.h **** 
 636:../../../os/hal/osal/rt/osal.h ****   return chVTGetSystemTimeX();
 637:../../../os/hal/osal/rt/osal.h **** }
 638:../../../os/hal/osal/rt/osal.h **** 
 639:../../../os/hal/osal/rt/osal.h **** /**
 640:../../../os/hal/osal/rt/osal.h ****  * @brief   Adds an interval to a system time returning a system time.
 641:../../../os/hal/osal/rt/osal.h ****  *
 642:../../../os/hal/osal/rt/osal.h ****  * @param[in] systime   base system time
 643:../../../os/hal/osal/rt/osal.h ****  * @param[in] interval  interval to be added
 644:../../../os/hal/osal/rt/osal.h ****  * @return              The new system time.
 645:../../../os/hal/osal/rt/osal.h ****  *
 646:../../../os/hal/osal/rt/osal.h ****  * @xclass
 647:../../../os/hal/osal/rt/osal.h ****  */
 648:../../../os/hal/osal/rt/osal.h **** static inline systime_t osalTimeAddX(systime_t systime,
 649:../../../os/hal/osal/rt/osal.h ****                                      sysinterval_t interval) {
 650:../../../os/hal/osal/rt/osal.h **** 
 651:../../../os/hal/osal/rt/osal.h ****   return chTimeAddX(systime, interval);
 652:../../../os/hal/osal/rt/osal.h **** }
 653:../../../os/hal/osal/rt/osal.h **** 
 654:../../../os/hal/osal/rt/osal.h **** /**
 655:../../../os/hal/osal/rt/osal.h ****  * @brief   Subtracts two system times returning an interval.
 656:../../../os/hal/osal/rt/osal.h ****  *
 657:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     first system time
 658:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       second system time
 659:../../../os/hal/osal/rt/osal.h ****  * @return              The interval representing the time difference.
 660:../../../os/hal/osal/rt/osal.h ****  *
 661:../../../os/hal/osal/rt/osal.h ****  * @xclass
 662:../../../os/hal/osal/rt/osal.h ****  */
 663:../../../os/hal/osal/rt/osal.h **** static inline sysinterval_t osalTimeDiffX(systime_t start, systime_t end) {
 664:../../../os/hal/osal/rt/osal.h **** 
 665:../../../os/hal/osal/rt/osal.h ****   return chTimeDiffX(start, end);
 666:../../../os/hal/osal/rt/osal.h **** }
 667:../../../os/hal/osal/rt/osal.h **** 
 668:../../../os/hal/osal/rt/osal.h **** /**
 669:../../../os/hal/osal/rt/osal.h ****  * @brief   Checks if the specified time is within the specified time window.
 670:../../../os/hal/osal/rt/osal.h ****  * @note    When start==end then the function returns always true because the
 671:../../../os/hal/osal/rt/osal.h ****  *          whole time range is specified.
 672:../../../os/hal/osal/rt/osal.h ****  * @note    This function can be called from any context.
 673:../../../os/hal/osal/rt/osal.h ****  *
 674:../../../os/hal/osal/rt/osal.h ****  * @param[in] time      the time to be verified
 675:../../../os/hal/osal/rt/osal.h ****  * @param[in] start     the start of the time window (inclusive)
 676:../../../os/hal/osal/rt/osal.h ****  * @param[in] end       the end of the time window (non inclusive)
 677:../../../os/hal/osal/rt/osal.h ****  * @retval true         current time within the specified time window.
 678:../../../os/hal/osal/rt/osal.h ****  * @retval false        current time not within the specified time window.
 679:../../../os/hal/osal/rt/osal.h ****  *
 680:../../../os/hal/osal/rt/osal.h ****  * @xclass
 681:../../../os/hal/osal/rt/osal.h ****  */
 682:../../../os/hal/osal/rt/osal.h **** static inline bool osalTimeIsInRangeX(systime_t time,
 683:../../../os/hal/osal/rt/osal.h ****                                       systime_t start,
 684:../../../os/hal/osal/rt/osal.h ****                                       systime_t end) {
 685:../../../os/hal/osal/rt/osal.h **** 
 686:../../../os/hal/osal/rt/osal.h ****   return chTimeIsInRangeX(time, start, end);
 687:../../../os/hal/osal/rt/osal.h **** }
 688:../../../os/hal/osal/rt/osal.h **** 
 689:../../../os/hal/osal/rt/osal.h **** /**
 690:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 691:../../../os/hal/osal/rt/osal.h ****  *
 692:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 693:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 694:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 695:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 696:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 697:../../../os/hal/osal/rt/osal.h ****  *                      .
 698:../../../os/hal/osal/rt/osal.h ****  *
 699:../../../os/hal/osal/rt/osal.h ****  * @sclass
 700:../../../os/hal/osal/rt/osal.h ****  */
 701:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleepS(sysinterval_t delay) {
 702:../../../os/hal/osal/rt/osal.h **** 
 703:../../../os/hal/osal/rt/osal.h ****   chThdSleepS(delay);
 704:../../../os/hal/osal/rt/osal.h **** }
 705:../../../os/hal/osal/rt/osal.h **** 
 706:../../../os/hal/osal/rt/osal.h **** /**
 707:../../../os/hal/osal/rt/osal.h ****  * @brief   Suspends the invoking thread for the specified time.
 708:../../../os/hal/osal/rt/osal.h ****  *
 709:../../../os/hal/osal/rt/osal.h ****  * @param[in] delay     the delay in system ticks, the special values are
 710:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 711:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE is allowed but interpreted as a
 712:../../../os/hal/osal/rt/osal.h ****  *                        normal time specification.
 713:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE this value is not allowed.
 714:../../../os/hal/osal/rt/osal.h ****  *                      .
 715:../../../os/hal/osal/rt/osal.h ****  *
 716:../../../os/hal/osal/rt/osal.h ****  * @api
 717:../../../os/hal/osal/rt/osal.h ****  */
 718:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadSleep(sysinterval_t delay) {
 719:../../../os/hal/osal/rt/osal.h **** 
 720:../../../os/hal/osal/rt/osal.h ****   chThdSleep(delay);
 721:../../../os/hal/osal/rt/osal.h **** }
 722:../../../os/hal/osal/rt/osal.h **** 
 723:../../../os/hal/osal/rt/osal.h **** /**
 724:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 725:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 726:../../../os/hal/osal/rt/osal.h ****  *          context.
 727:../../../os/hal/osal/rt/osal.h ****  *
 728:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 729:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 730:../../../os/hal/osal/rt/osal.h ****  *
 731:../../../os/hal/osal/rt/osal.h ****  * @sclass
 732:../../../os/hal/osal/rt/osal.h ****  */
 733:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendS(thread_reference_t *trp) {
 734:../../../os/hal/osal/rt/osal.h **** 
 735:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, TIME_INFINITE);
 736:../../../os/hal/osal/rt/osal.h **** }
 737:../../../os/hal/osal/rt/osal.h **** 
 738:../../../os/hal/osal/rt/osal.h **** /**
 739:../../../os/hal/osal/rt/osal.h ****  * @brief   Sends the current thread sleeping and sets a reference variable.
 740:../../../os/hal/osal/rt/osal.h ****  * @note    This function must reschedule, it can only be called from thread
 741:../../../os/hal/osal/rt/osal.h ****  *          context.
 742:../../../os/hal/osal/rt/osal.h ****  *
 743:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 744:../../../os/hal/osal/rt/osal.h ****  * @param[in] timeout   the timeout in system ticks, the special values are
 745:../../../os/hal/osal/rt/osal.h ****  *                      handled as follow:
 746:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_INFINITE the thread enters an infinite sleep
 747:../../../os/hal/osal/rt/osal.h ****  *                        state.
 748:../../../os/hal/osal/rt/osal.h ****  *                      - @a TIME_IMMEDIATE the thread is not enqueued and
 749:../../../os/hal/osal/rt/osal.h ****  *                        the function returns @p MSG_TIMEOUT as if a timeout
 750:../../../os/hal/osal/rt/osal.h ****  *                        occurred.
 751:../../../os/hal/osal/rt/osal.h ****  *                      .
 752:../../../os/hal/osal/rt/osal.h ****  * @return              The wake up message.
 753:../../../os/hal/osal/rt/osal.h ****  * @retval MSG_TIMEOUT  if the operation timed out.
 754:../../../os/hal/osal/rt/osal.h ****  *
 755:../../../os/hal/osal/rt/osal.h ****  * @sclass
 756:../../../os/hal/osal/rt/osal.h ****  */
 757:../../../os/hal/osal/rt/osal.h **** static inline msg_t osalThreadSuspendTimeoutS(thread_reference_t *trp,
 758:../../../os/hal/osal/rt/osal.h ****                                               sysinterval_t timeout) {
 759:../../../os/hal/osal/rt/osal.h **** 
 760:../../../os/hal/osal/rt/osal.h ****   return chThdSuspendTimeoutS(trp, timeout);
 761:../../../os/hal/osal/rt/osal.h **** }
 762:../../../os/hal/osal/rt/osal.h **** 
 763:../../../os/hal/osal/rt/osal.h **** /**
 764:../../../os/hal/osal/rt/osal.h ****  * @brief   Wakes up a thread waiting on a thread reference object.
 765:../../../os/hal/osal/rt/osal.h ****  * @note    This function must not reschedule because it can be called from
 766:../../../os/hal/osal/rt/osal.h ****  *          ISR context.
 767:../../../os/hal/osal/rt/osal.h ****  *
 768:../../../os/hal/osal/rt/osal.h ****  * @param[in] trp       a pointer to a thread reference object
 769:../../../os/hal/osal/rt/osal.h ****  * @param[in] msg       the message code
 770:../../../os/hal/osal/rt/osal.h ****  *
 771:../../../os/hal/osal/rt/osal.h ****  * @iclass
 772:../../../os/hal/osal/rt/osal.h ****  */
 773:../../../os/hal/osal/rt/osal.h **** static inline void osalThreadResumeI(thread_reference_t *trp, msg_t msg) {
 774:../../../os/hal/osal/rt/osal.h **** 
 775:../../../os/hal/osal/rt/osal.h ****   chThdResumeI(trp, msg);
 102               		.loc 2 775 0
 103 0040 6EEF      		ldi r22,lo8(-2)
 104 0042 7FEF      		ldi r23,lo8(-1)
 105 0044 80E0      		ldi r24,lo8(I2CD1+12)
 106 0046 90E0      		ldi r25,hi8(I2CD1+12)
 107               	.LVL2:
 108 0048 0E94 0000 		call chThdResumeI
 109               	.LVL3:
 110 004c 8091 0000 		lds r24,I2CD1+3
 111               	.LVL4:
 112               	.L24:
 113               	.LBE43:
 114               	.LBE42:
 208:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 209:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 210:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 211:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->errors != I2C_NO_ERROR) {
 115               		.loc 1 211 0
 116 0050 8111      		cpse r24,__zero_reg__
 117 0052 00C0      		rjmp .L38
 118               	.L36:
 212:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
 213:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 214:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 215:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 216:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   OSAL_IRQ_EPILOGUE();
 119               		.loc 1 216 0
 120 0054 1092 0000 		sts __avr_in_isr,__zero_reg__
 121 0058 0E94 0000 		call chSchIsPreemptionRequired
 122               	.LVL5:
 123 005c 8111      		cpse r24,__zero_reg__
 124               		.loc 1 216 0 is_stmt 0 discriminator 1
 125 005e 0E94 0000 		call chSchDoReschedule
 126               	.LVL6:
 127               	.L1:
 128               	/* epilogue start */
 217:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 129               		.loc 1 217 0 is_stmt 1
 130 0062 FF91      		pop r31
 131 0064 EF91      		pop r30
 132 0066 BF91      		pop r27
 133 0068 AF91      		pop r26
 134 006a 9F91      		pop r25
 135 006c 8F91      		pop r24
 136 006e 7F91      		pop r23
 137 0070 6F91      		pop r22
 138 0072 5F91      		pop r21
 139 0074 4F91      		pop r20
 140 0076 3F91      		pop r19
 141 0078 2F91      		pop r18
 142 007a 0F90      		pop r0
 143 007c 0FBE      		out __SREG__,r0
 144 007e 0F90      		pop r0
 145 0080 1F90      		pop r1
 146 0082 1895      		reti
 147               	.L70:
  64:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_START:
 148               		.loc 1 64 0
 149 0084 FC01      		movw r30,r24
 150 0086 E050      		subi r30,lo8(-(gs(.L4)))
 151 0088 F040      		sbci r31,hi8(-(gs(.L4)))
 152 008a 0C94 0000 		jmp __tablejump2__
 153               		.section	.progmem.gcc_sw_table.__vector_24,"a",@progbits
 154               		.p2align	1
 155               	.L4:
 156 0000 0000      		.word gs(.L3)
 157 0002 0000      		.word gs(.L2)
 158 0004 0000      		.word gs(.L2)
 159 0006 0000      		.word gs(.L2)
 160 0008 0000      		.word gs(.L2)
 161 000a 0000      		.word gs(.L2)
 162 000c 0000      		.word gs(.L2)
 163 000e 0000      		.word gs(.L2)
 164 0010 0000      		.word gs(.L5)
 165 0012 0000      		.word gs(.L2)
 166 0014 0000      		.word gs(.L2)
 167 0016 0000      		.word gs(.L2)
 168 0018 0000      		.word gs(.L2)
 169 001a 0000      		.word gs(.L2)
 170 001c 0000      		.word gs(.L2)
 171 001e 0000      		.word gs(.L2)
 172 0020 0000      		.word gs(.L5)
 173 0022 0000      		.word gs(.L2)
 174 0024 0000      		.word gs(.L2)
 175 0026 0000      		.word gs(.L2)
 176 0028 0000      		.word gs(.L2)
 177 002a 0000      		.word gs(.L2)
 178 002c 0000      		.word gs(.L2)
 179 002e 0000      		.word gs(.L2)
 180 0030 0000      		.word gs(.L6)
 181 0032 0000      		.word gs(.L2)
 182 0034 0000      		.word gs(.L2)
 183 0036 0000      		.word gs(.L2)
 184 0038 0000      		.word gs(.L2)
 185 003a 0000      		.word gs(.L2)
 186 003c 0000      		.word gs(.L2)
 187 003e 0000      		.word gs(.L2)
 188 0040 0000      		.word gs(.L7)
 189 0042 0000      		.word gs(.L2)
 190 0044 0000      		.word gs(.L2)
 191 0046 0000      		.word gs(.L2)
 192 0048 0000      		.word gs(.L2)
 193 004a 0000      		.word gs(.L2)
 194 004c 0000      		.word gs(.L2)
 195 004e 0000      		.word gs(.L2)
 196 0050 0000      		.word gs(.L6)
 197 0052 0000      		.word gs(.L2)
 198 0054 0000      		.word gs(.L2)
 199 0056 0000      		.word gs(.L2)
 200 0058 0000      		.word gs(.L2)
 201 005a 0000      		.word gs(.L2)
 202 005c 0000      		.word gs(.L2)
 203 005e 0000      		.word gs(.L2)
 204 0060 0000      		.word gs(.L7)
 205 0062 0000      		.word gs(.L2)
 206 0064 0000      		.word gs(.L2)
 207 0066 0000      		.word gs(.L2)
 208 0068 0000      		.word gs(.L2)
 209 006a 0000      		.word gs(.L2)
 210 006c 0000      		.word gs(.L2)
 211 006e 0000      		.word gs(.L2)
 212 0070 0000      		.word gs(.L8)
 213 0072 0000      		.word gs(.L2)
 214 0074 0000      		.word gs(.L2)
 215 0076 0000      		.word gs(.L2)
 216 0078 0000      		.word gs(.L2)
 217 007a 0000      		.word gs(.L2)
 218 007c 0000      		.word gs(.L2)
 219 007e 0000      		.word gs(.L2)
 220 0080 0000      		.word gs(.L66)
 221 0082 0000      		.word gs(.L2)
 222 0084 0000      		.word gs(.L2)
 223 0086 0000      		.word gs(.L2)
 224 0088 0000      		.word gs(.L2)
 225 008a 0000      		.word gs(.L2)
 226 008c 0000      		.word gs(.L2)
 227 008e 0000      		.word gs(.L2)
 228 0090 0000      		.word gs(.L7)
 229 0092 0000      		.word gs(.L2)
 230 0094 0000      		.word gs(.L2)
 231 0096 0000      		.word gs(.L2)
 232 0098 0000      		.word gs(.L2)
 233 009a 0000      		.word gs(.L2)
 234 009c 0000      		.word gs(.L2)
 235 009e 0000      		.word gs(.L2)
 236 00a0 0000      		.word gs(.L10)
 237 00a2 0000      		.word gs(.L2)
 238 00a4 0000      		.word gs(.L2)
 239 00a6 0000      		.word gs(.L2)
 240 00a8 0000      		.word gs(.L2)
 241 00aa 0000      		.word gs(.L2)
 242 00ac 0000      		.word gs(.L2)
 243 00ae 0000      		.word gs(.L2)
 244 00b0 0000      		.word gs(.L11)
 245 00b2 0000      		.word gs(.L2)
 246 00b4 0000      		.word gs(.L2)
 247 00b6 0000      		.word gs(.L2)
 248 00b8 0000      		.word gs(.L2)
 249 00ba 0000      		.word gs(.L2)
 250 00bc 0000      		.word gs(.L2)
 251 00be 0000      		.word gs(.L2)
 252 00c0 0000      		.word gs(.L12)
 253 00c2 0000      		.word gs(.L2)
 254 00c4 0000      		.word gs(.L2)
 255 00c6 0000      		.word gs(.L2)
 256 00c8 0000      		.word gs(.L2)
 257 00ca 0000      		.word gs(.L2)
 258 00cc 0000      		.word gs(.L2)
 259 00ce 0000      		.word gs(.L2)
 260 00d0 0000      		.word gs(.L13)
 261 00d2 0000      		.word gs(.L2)
 262 00d4 0000      		.word gs(.L2)
 263 00d6 0000      		.word gs(.L2)
 264 00d8 0000      		.word gs(.L2)
 265 00da 0000      		.word gs(.L2)
 266 00dc 0000      		.word gs(.L2)
 267 00de 0000      		.word gs(.L2)
 268 00e0 0000      		.word gs(.L2)
 269 00e2 0000      		.word gs(.L2)
 270 00e4 0000      		.word gs(.L2)
 271 00e6 0000      		.word gs(.L2)
 272 00e8 0000      		.word gs(.L2)
 273 00ea 0000      		.word gs(.L2)
 274 00ec 0000      		.word gs(.L2)
 275 00ee 0000      		.word gs(.L2)
 276 00f0 0000      		.word gs(.L2)
 277 00f2 0000      		.word gs(.L2)
 278 00f4 0000      		.word gs(.L2)
 279 00f6 0000      		.word gs(.L2)
 280 00f8 0000      		.word gs(.L2)
 281 00fa 0000      		.word gs(.L2)
 282 00fc 0000      		.word gs(.L2)
 283 00fe 0000      		.word gs(.L2)
 284 0100 0000      		.word gs(.L45)
 285 0102 0000      		.word gs(.L2)
 286 0104 0000      		.word gs(.L2)
 287 0106 0000      		.word gs(.L2)
 288 0108 0000      		.word gs(.L2)
 289 010a 0000      		.word gs(.L2)
 290 010c 0000      		.word gs(.L2)
 291 010e 0000      		.word gs(.L2)
 292 0110 0000      		.word gs(.L15)
 293 0112 0000      		.word gs(.L2)
 294 0114 0000      		.word gs(.L2)
 295 0116 0000      		.word gs(.L2)
 296 0118 0000      		.word gs(.L2)
 297 011a 0000      		.word gs(.L2)
 298 011c 0000      		.word gs(.L2)
 299 011e 0000      		.word gs(.L2)
 300 0120 0000      		.word gs(.L2)
 301 0122 0000      		.word gs(.L2)
 302 0124 0000      		.word gs(.L2)
 303 0126 0000      		.word gs(.L2)
 304 0128 0000      		.word gs(.L2)
 305 012a 0000      		.word gs(.L2)
 306 012c 0000      		.word gs(.L2)
 307 012e 0000      		.word gs(.L2)
 308 0130 0000      		.word gs(.L2)
 309 0132 0000      		.word gs(.L2)
 310 0134 0000      		.word gs(.L2)
 311 0136 0000      		.word gs(.L2)
 312 0138 0000      		.word gs(.L2)
 313 013a 0000      		.word gs(.L2)
 314 013c 0000      		.word gs(.L2)
 315 013e 0000      		.word gs(.L2)
 316 0140 0000      		.word gs(.L16)
 317 0142 0000      		.word gs(.L2)
 318 0144 0000      		.word gs(.L2)
 319 0146 0000      		.word gs(.L2)
 320 0148 0000      		.word gs(.L2)
 321 014a 0000      		.word gs(.L2)
 322 014c 0000      		.word gs(.L2)
 323 014e 0000      		.word gs(.L2)
 324 0150 0000      		.word gs(.L17)
 325 0152 0000      		.word gs(.L2)
 326 0154 0000      		.word gs(.L2)
 327 0156 0000      		.word gs(.L2)
 328 0158 0000      		.word gs(.L2)
 329 015a 0000      		.word gs(.L2)
 330 015c 0000      		.word gs(.L2)
 331 015e 0000      		.word gs(.L2)
 332 0160 0000      		.word gs(.L18)
 333 0162 0000      		.word gs(.L2)
 334 0164 0000      		.word gs(.L2)
 335 0166 0000      		.word gs(.L2)
 336 0168 0000      		.word gs(.L2)
 337 016a 0000      		.word gs(.L2)
 338 016c 0000      		.word gs(.L2)
 339 016e 0000      		.word gs(.L2)
 340 0170 0000      		.word gs(.L19)
 341 0172 0000      		.word gs(.L2)
 342 0174 0000      		.word gs(.L2)
 343 0176 0000      		.word gs(.L2)
 344 0178 0000      		.word gs(.L2)
 345 017a 0000      		.word gs(.L2)
 346 017c 0000      		.word gs(.L2)
 347 017e 0000      		.word gs(.L2)
 348 0180 0000      		.word gs(.L58)
 349 0182 0000      		.word gs(.L2)
 350 0184 0000      		.word gs(.L2)
 351 0186 0000      		.word gs(.L2)
 352 0188 0000      		.word gs(.L2)
 353 018a 0000      		.word gs(.L2)
 354 018c 0000      		.word gs(.L2)
 355 018e 0000      		.word gs(.L2)
 356 0190 0000      		.word gs(.L58)
 357               		.section	.text.__vector_24
 358               	.L15:
 148:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****    /*implement decision making past communication with flags*/
 359               		.loc 1 148 0
 360 008e 4091 0000 		lds r20,I2CD1+21
 361 0092 5091 0000 		lds r21,I2CD1+21+1
 362 0096 8091 0000 		lds r24,I2CD1+25
 363 009a 9091 0000 		lds r25,I2CD1+25+1
 364 009e 9C01      		movw r18,r24
 365 00a0 2F5F      		subi r18,-1
 366 00a2 3F4F      		sbci r19,-1
 367 00a4 3093 0000 		sts I2CD1+25+1,r19
 368 00a8 2093 0000 		sts I2CD1+25,r18
 369 00ac 2091 BB00 		lds r18,187
 370 00b0 FA01      		movw r30,r20
 371 00b2 E80F      		add r30,r24
 372 00b4 F91F      		adc r31,r25
 373 00b6 2083      		st Z,r18
 374               	.L58:
 151:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   break;
 375               		.loc 1 151 0
 376 00b8 81EC      		ldi r24,lo8(-63)
 377 00ba 8093 BC00 		sts 188,r24
 378 00be 8091 0000 		lds r24,I2CD1+3
 152:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_SLAVE_STOP:
 379               		.loc 1 152 0
 380 00c2 00C0      		rjmp .L24
 381               	.L11:
 107:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWSTO) | (1 << TWINT) | (1 << TWEN));
 382               		.loc 1 107 0
 383 00c4 2091 BB00 		lds r18,187
 384 00c8 E091 0000 		lds r30,I2CD1+21
 385 00cc F091 0000 		lds r31,I2CD1+21+1
 386 00d0 8091 0000 		lds r24,I2CD1+25
 387 00d4 9091 0000 		lds r25,I2CD1+25+1
 388 00d8 E80F      		add r30,r24
 389 00da F91F      		adc r31,r25
 390 00dc 2083      		st Z,r18
 108:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_isr(i2cp);
 391               		.loc 1 108 0
 392 00de 84E9      		ldi r24,lo8(-108)
 393 00e0 8093 BC00 		sts 188,r24
 394               	.LVL7:
 395               	.LBB44:
 396               	.LBB45:
 397               		.loc 2 775 0
 398 00e4 60E0      		ldi r22,0
 399 00e6 70E0      		ldi r23,0
 400 00e8 80E0      		ldi r24,lo8(I2CD1+12)
 401 00ea 90E0      		ldi r25,hi8(I2CD1+12)
 402               	.LVL8:
 403 00ec 0E94 0000 		call chThdResumeI
 404               	.LVL9:
 405               	.L7:
 406               	.LBE45:
 407               	.LBE44:
 113:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 408               		.loc 1 113 0
 409 00f0 8091 0000 		lds r24,I2CD1+3
 410 00f4 8460      		ori r24,lo8(4)
 411 00f6 8093 0000 		sts I2CD1+3,r24
 412               	.L38:
 212:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     _i2c_wakeup_error_isr(i2cp);
 413               		.loc 1 212 0
 414 00fa 84E9      		ldi r24,lo8(-108)
 415 00fc 8093 BC00 		sts 188,r24
 416               	.LVL10:
 417               	.LBB46:
 418               	.LBB47:
 419               		.loc 2 775 0
 420 0100 6EEF      		ldi r22,lo8(-2)
 421 0102 7FEF      		ldi r23,lo8(-1)
 422 0104 80E0      		ldi r24,lo8(I2CD1+12)
 423 0106 90E0      		ldi r25,hi8(I2CD1+12)
 424               	.LVL11:
 425 0108 0E94 0000 		call chThdResumeI
 426               	.LVL12:
 427 010c 00C0      		rjmp .L36
 428               	.LVL13:
 429               	.L16:
 430               	.LBE47:
 431               	.LBE46:
 155:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 432               		.loc 1 155 0
 433 010e 81EC      		ldi r24,lo8(-63)
 434 0110 8093 BC00 		sts 188,r24
 435               	.L17:
 161:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****        if (i2cp->txidx ==(i2cp->txbytes -1)){
 436               		.loc 1 161 0
 437 0114 E091 0000 		lds r30,I2CD1+15
 438 0118 F091 0000 		lds r31,I2CD1+15+1
 439 011c 8091 0000 		lds r24,I2CD1+19
 440 0120 9091 0000 		lds r25,I2CD1+19+1
 441 0124 E80F      		add r30,r24
 442 0126 F91F      		adc r31,r25
 443 0128 2081      		ld r18,Z
 444 012a 2093 BB00 		sts 187,r18
 162:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWIE));
 445               		.loc 1 162 0
 446 012e 2091 0000 		lds r18,I2CD1+17
 447 0132 3091 0000 		lds r19,I2CD1+17+1
 448 0136 2150      		subi r18,1
 449 0138 3109      		sbc r19,__zero_reg__
 450 013a 8217      		cp r24,r18
 451 013c 9307      		cpc r25,r19
 452 013e 01F4      		brne .+2
 453 0140 00C0      		rjmp .L64
 166:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEA) | (1 << TWIE));
 454               		.loc 1 166 0
 455 0142 0196      		adiw r24,1
 456 0144 9093 0000 		sts I2CD1+19+1,r25
 457 0148 8093 0000 		sts I2CD1+19,r24
 167:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 458               		.loc 1 167 0
 459 014c 81EC      		ldi r24,lo8(-63)
 460 014e 8093 BC00 		sts 188,r24
 461 0152 8091 0000 		lds r24,I2CD1+3
 462 0156 00C0      		rjmp .L24
 463               	.L10:
  98:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if (i2cp->rxidx == (i2cp->rxbytes - 1)) {
 464               		.loc 1 98 0
 465 0158 4091 0000 		lds r20,I2CD1+21
 466 015c 5091 0000 		lds r21,I2CD1+21+1
 467 0160 8091 0000 		lds r24,I2CD1+25
 468 0164 9091 0000 		lds r25,I2CD1+25+1
 469 0168 9C01      		movw r18,r24
 470 016a 2F5F      		subi r18,-1
 471 016c 3F4F      		sbci r19,-1
 472 016e 3093 0000 		sts I2CD1+25+1,r19
 473 0172 2093 0000 		sts I2CD1+25,r18
 474 0176 2091 BB00 		lds r18,187
 475 017a FA01      		movw r30,r20
 476 017c E80F      		add r30,r24
 477 017e F91F      		adc r31,r25
 478 0180 2083      		st Z,r18
 479               	.L66:
  99:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 480               		.loc 1 99 0
 481 0182 8091 0000 		lds r24,I2CD1+23
 482 0186 9091 0000 		lds r25,I2CD1+23+1
 483 018a 0197      		sbiw r24,1
 484 018c 2091 0000 		lds r18,I2CD1+25
 485 0190 3091 0000 		lds r19,I2CD1+25+1
 486 0194 2817      		cp r18,r24
 487 0196 3907      		cpc r19,r25
 488 0198 01F4      		brne .+2
 489 019a 00C0      		rjmp .L61
 490               	.L59:
 144:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 491               		.loc 1 144 0
 492 019c 85EC      		ldi r24,lo8(-59)
 493 019e 8093 BC00 		sts 188,r24
 494 01a2 8091 0000 		lds r24,I2CD1+3
 495 01a6 00C0      		rjmp .L24
 496               	.L12:
 120:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 497               		.loc 1 120 0
 498 01a8 8091 0000 		lds r24,I2CD1+23
 499 01ac 9091 0000 		lds r25,I2CD1+23+1
 500 01b0 0197      		sbiw r24,1
 501 01b2 2091 0000 		lds r18,I2CD1+25
 502 01b6 3091 0000 		lds r19,I2CD1+25+1
 503 01ba 2817      		cp r18,r24
 504 01bc 3907      		cpc r19,r25
 505 01be 01F0      		breq .+2
 506 01c0 00C0      		rjmp .L58
 507               	.L64:
 183:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 508               		.loc 1 183 0
 509 01c2 81E8      		ldi r24,lo8(-127)
 510 01c4 8093 BC00 		sts 188,r24
 511 01c8 8091 0000 		lds r24,I2CD1+3
 512 01cc 00C0      		rjmp .L24
 513               	.L13:
 128:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = (1 << TWINT) | (1 << TWIE);
 514               		.loc 1 128 0
 515 01ce 2091 0000 		lds r18,I2CD1+23
 516 01d2 3091 0000 		lds r19,I2CD1+23+1
 517 01d6 2150      		subi r18,1
 518 01d8 3109      		sbc r19,__zero_reg__
 519 01da 8091 0000 		lds r24,I2CD1+25
 520 01de 9091 0000 		lds r25,I2CD1+25+1
 521 01e2 8217      		cp r24,r18
 522 01e4 9307      		cpc r25,r19
 523 01e6 01F4      		brne .+2
 524 01e8 00C0      		rjmp .L71
 132:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 525               		.loc 1 132 0
 526 01ea 21EC      		ldi r18,lo8(-63)
 527 01ec 2093 BC00 		sts 188,r18
 528               	.L14:
 136:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /*send nack master move to $88*/
 529               		.loc 1 136 0
 530 01f0 4091 0000 		lds r20,I2CD1+21
 531 01f4 5091 0000 		lds r21,I2CD1+21+1
 532 01f8 9C01      		movw r18,r24
 533 01fa 2F5F      		subi r18,-1
 534 01fc 3F4F      		sbci r19,-1
 535 01fe 3093 0000 		sts I2CD1+25+1,r19
 536 0202 2093 0000 		sts I2CD1+25,r18
 537 0206 2091 BB00 		lds r18,187
 538 020a FA01      		movw r30,r20
 539 020c E80F      		add r30,r24
 540 020e F91F      		adc r31,r25
 541 0210 2083      		st Z,r18
 138:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 542               		.loc 1 138 0
 543 0212 8091 0000 		lds r24,I2CD1+25
 544 0216 9091 0000 		lds r25,I2CD1+25+1
 545 021a 2091 0000 		lds r18,I2CD1+23
 546 021e 3091 0000 		lds r19,I2CD1+23+1
 547 0222 2150      		subi r18,1
 548 0224 3109      		sbc r19,__zero_reg__
 549 0226 8217      		cp r24,r18
 550 0228 9307      		cpc r25,r19
 551 022a 01F4      		brne .+2
 552 022c 00C0      		rjmp .L61
 143:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ((1 << TWEA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 553               		.loc 1 143 0
 554 022e 0196      		adiw r24,1
 555 0230 9093 0000 		sts I2CD1+25+1,r25
 556 0234 8093 0000 		sts I2CD1+25,r24
 557 0238 00C0      		rjmp .L59
 558               	.L18:
 172:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 559               		.loc 1 172 0
 560 023a E091 0000 		lds r30,I2CD1+15
 561 023e F091 0000 		lds r31,I2CD1+15+1
 562 0242 2091 0000 		lds r18,I2CD1+19
 563 0246 3091 0000 		lds r19,I2CD1+19+1
 564 024a E20F      		add r30,r18
 565 024c F31F      		adc r31,r19
 566               	.L68:
 181:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 567               		.loc 1 181 0
 568 024e 8081      		ld r24,Z
 569 0250 8093 BB00 		sts 187,r24
 182:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = (1 << TWINT | (1 << TWIE));
 570               		.loc 1 182 0
 571 0254 8091 0000 		lds r24,I2CD1+17
 572 0258 9091 0000 		lds r25,I2CD1+17+1
 573 025c 0197      		sbiw r24,1
 574 025e 2817      		cp r18,r24
 575 0260 3907      		cpc r19,r25
 576 0262 01F0      		breq .+2
 577 0264 00C0      		rjmp .L58
 578 0266 00C0      		rjmp .L64
 579               	.L8:
 200:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 580               		.loc 1 200 0
 581 0268 8091 0000 		lds r24,I2CD1+3
 582 026c 8260      		ori r24,lo8(2)
 583 026e 8093 0000 		sts I2CD1+3,r24
 201:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   case TWI_BUS_ERROR:
 584               		.loc 1 201 0
 585 0272 00C0      		rjmp .L38
 586               	.L19:
 181:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->txidx ==(i2cp->txbytes -1)){
 587               		.loc 1 181 0
 588 0274 4091 0000 		lds r20,I2CD1+15
 589 0278 5091 0000 		lds r21,I2CD1+15+1
 590 027c 8091 0000 		lds r24,I2CD1+19
 591 0280 9091 0000 		lds r25,I2CD1+19+1
 592 0284 9C01      		movw r18,r24
 593 0286 2F5F      		subi r18,-1
 594 0288 3F4F      		sbci r19,-1
 595 028a 3093 0000 		sts I2CD1+19+1,r19
 596 028e 2093 0000 		sts I2CD1+19,r18
 597 0292 FA01      		movw r30,r20
 598 0294 E80F      		add r30,r24
 599 0296 F91F      		adc r31,r25
 600 0298 00C0      		rjmp .L68
 601               	.L3:
 203:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     break;
 602               		.loc 1 203 0
 603 029a 8091 0000 		lds r24,I2CD1+3
 604 029e 8160      		ori r24,lo8(1)
 605 02a0 8093 0000 		sts I2CD1+3,r24
 204:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   default:
 606               		.loc 1 204 0
 607 02a4 00C0      		rjmp .L38
 608               	.L5:
  67:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     if ((i2cp->txbuf == NULL) || (i2cp->txbytes == 0) || (i2cp->txidx == i2cp->txbytes)) {
 609               		.loc 1 67 0
 610 02a6 8091 0000 		lds r24,I2CD1+14
 611 02aa 880F      		lsl r24
 612 02ac 8093 BB00 		sts 187,r24
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 613               		.loc 1 68 0
 614 02b0 8091 0000 		lds r24,I2CD1+15
 615 02b4 9091 0000 		lds r25,I2CD1+15+1
 616 02b8 892B      		or r24,r25
 617 02ba 01F0      		breq .L22
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 618               		.loc 1 68 0 is_stmt 0 discriminator 1
 619 02bc 8091 0000 		lds r24,I2CD1+17
 620 02c0 9091 0000 		lds r25,I2CD1+17+1
 621 02c4 0097      		sbiw r24,0
 622 02c6 01F0      		breq .L22
  68:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR |= 0x01;
 623               		.loc 1 68 0 discriminator 2
 624 02c8 2091 0000 		lds r18,I2CD1+19
 625 02cc 3091 0000 		lds r19,I2CD1+19+1
 626 02d0 8217      		cp r24,r18
 627 02d2 9307      		cpc r25,r19
 628 02d4 01F4      		brne .L61
 629               	.L22:
  69:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 630               		.loc 1 69 0 is_stmt 1
 631 02d6 8091 BB00 		lds r24,187
 632 02da 8160      		ori r24,lo8(1)
 633 02dc 8093 BB00 		sts 187,r24
 634               	.L61:
 139:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 635               		.loc 1 139 0
 636 02e0 85E8      		ldi r24,lo8(-123)
 637 02e2 8093 BC00 		sts 188,r24
 638 02e6 8091 0000 		lds r24,I2CD1+3
 639 02ea 00C0      		rjmp .L24
 640               	.L6:
  75:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWDR = i2cp->txbuf[i2cp->txidx++];
 641               		.loc 1 75 0
 642 02ec 8091 0000 		lds r24,I2CD1+19
 643 02f0 9091 0000 		lds r25,I2CD1+19+1
 644 02f4 2091 0000 		lds r18,I2CD1+17
 645 02f8 3091 0000 		lds r19,I2CD1+17+1
 646 02fc 8217      		cp r24,r18
 647 02fe 9307      		cpc r25,r19
 648 0300 00F0      		brlo .L72
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 649               		.loc 1 80 0
 650 0302 8091 0000 		lds r24,I2CD1+21
 651 0306 9091 0000 		lds r25,I2CD1+21+1
 652 030a 892B      		or r24,r25
 653 030c 01F0      		breq .L26
  80:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 654               		.loc 1 80 0 is_stmt 0 discriminator 1
 655 030e 8091 0000 		lds r24,I2CD1+23
 656 0312 9091 0000 		lds r25,I2CD1+23+1
 657 0316 892B      		or r24,r25
 658 0318 01F0      		breq .L26
  81:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       }
 659               		.loc 1 81 0 is_stmt 1
 660 031a 85EA      		ldi r24,lo8(-91)
 661 031c 8093 BC00 		sts 188,r24
 662 0320 8091 0000 		lds r24,I2CD1+3
 663 0324 00C0      		rjmp .L24
 664               	.L45:
 665 0326 8091 0000 		lds r24,I2CD1+25
 666 032a 9091 0000 		lds r25,I2CD1+25+1
 667 032e 00C0      		rjmp .L14
 668               	.L72:
  76:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       TWCR = ((1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 669               		.loc 1 76 0
 670 0330 2091 0000 		lds r18,I2CD1+15
 671 0334 3091 0000 		lds r19,I2CD1+15+1
 672 0338 AC01      		movw r20,r24
 673 033a 4F5F      		subi r20,-1
 674 033c 5F4F      		sbci r21,-1
 675 033e 5093 0000 		sts I2CD1+19+1,r21
 676 0342 4093 0000 		sts I2CD1+19,r20
 677 0346 F901      		movw r30,r18
 678 0348 E80F      		add r30,r24
 679 034a F91F      		adc r31,r25
 680 034c 8081      		ld r24,Z
 681 034e 8093 BB00 		sts 187,r24
  77:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 682               		.loc 1 77 0
 683 0352 85E8      		ldi r24,lo8(-123)
 684 0354 8093 BC00 		sts 188,r24
 685 0358 8091 0000 		lds r24,I2CD1+3
 686 035c 00C0      		rjmp .L24
 687               	.L71:
 129:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 688               		.loc 1 129 0
 689 035e 21E8      		ldi r18,lo8(-127)
 690 0360 2093 BC00 		sts 188,r18
 691 0364 00C0      		rjmp .L14
 692               	.L26:
  84:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****         _i2c_wakeup_isr(i2cp);
 693               		.loc 1 84 0
 694 0366 84E9      		ldi r24,lo8(-108)
 695 0368 8093 BC00 		sts 188,r24
 696               	.LVL14:
 697               	.LBB48:
 698               	.LBB49:
 699               		.loc 2 775 0
 700 036c 60E0      		ldi r22,0
 701 036e 70E0      		ldi r23,0
 702 0370 80E0      		ldi r24,lo8(I2CD1+12)
 703 0372 90E0      		ldi r25,hi8(I2CD1+12)
 704               	.LVL15:
 705 0374 0E94 0000 		call chThdResumeI
 706               	.LVL16:
 707 0378 8091 0000 		lds r24,I2CD1+3
 708 037c 00C0      		rjmp .L24
 709               	.LBE49:
 710               	.LBE48:
 711               		.cfi_endproc
 712               	.LFE180:
 714               		.section	.text.i2c_lld_init,"ax",@progbits
 715               	.global	i2c_lld_init
 717               	i2c_lld_init:
 718               	.LFB181:
 218:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** #endif /* AVR_I2C_USE_I2C1 */
 219:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 220:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
 221:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /* Driver exported functions.                                               */
 222:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*==========================================================================*/
 223:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 224:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 225:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Low level I2C driver initialization.
 226:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 227:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 228:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 229:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_init(void) {
 719               		.loc 1 229 0
 720               		.cfi_startproc
 721               	/* prologue: function */
 722               	/* frame size = 0 */
 723               	/* stack size = 0 */
 724               	.L__stack_usage = 0
 230:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 231:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cObjectInit(&I2CD1);
 725               		.loc 1 231 0
 726 0000 80E0      		ldi r24,lo8(I2CD1)
 727 0002 90E0      		ldi r25,hi8(I2CD1)
 728 0004 0E94 0000 		call i2cObjectInit
 729               	.LVL17:
 232:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   I2CD1.thread = NULL;
 730               		.loc 1 232 0
 731 0008 1092 0000 		sts I2CD1+12+1,__zero_reg__
 732 000c 1092 0000 		sts I2CD1+12,__zero_reg__
 733 0010 0895      		ret
 734               		.cfi_endproc
 735               	.LFE181:
 737               		.section	.text.i2c_lld_start,"ax",@progbits
 738               	.global	i2c_lld_start
 740               	i2c_lld_start:
 741               	.LFB182:
 233:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 234:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 235:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 236:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Configures and activates the I2C peripheral.
 237:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 238:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in] i2cp  pointer to the @p I2CDriver object
 239:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 240:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 241:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 242:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_start(I2CDriver *i2cp) {
 742               		.loc 1 242 0
 743               		.cfi_startproc
 744               	.LVL18:
 745               	/* prologue: function */
 746               	/* frame size = 0 */
 747               	/* stack size = 0 */
 748               	.L__stack_usage = 0
 243:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 244:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   uint32_t clock_speed = 100000;
 245:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 246:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* TODO: Test TWI without external pull-ups (use internal). */
 247:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 248:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* Configure prescaler to 1. */
 249:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWSR &= 0xF8;
 749               		.loc 1 249 0
 750 0000 2091 B900 		lds r18,185
 751 0004 287F      		andi r18,lo8(-8)
 752 0006 2093 B900 		sts 185,r18
 250:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->config != NULL)
 753               		.loc 1 250 0
 754 000a DC01      		movw r26,r24
 755 000c 1196      		adiw r26,1
 756 000e ED91      		ld r30,X+
 757 0010 FC91      		ld r31,X
 758 0012 1297      		sbiw r26,1+1
 759 0014 3097      		sbiw r30,0
 760 0016 01F0      		breq .L76
 761               	.LVL19:
 762 0018 2081      		ld r18,Z
 763 001a 3181      		ldd r19,Z+1
 764 001c 4281      		ldd r20,Z+2
 765 001e 5381      		ldd r21,Z+3
 766 0020 60E0      		ldi r22,0
 767 0022 74E2      		ldi r23,lo8(36)
 768 0024 84EF      		ldi r24,lo8(-12)
 769 0026 90E0      		ldi r25,0
 770 0028 0E94 0000 		call __udivmodsi4
 771               	.LVL20:
 772 002c DA01      		movw r26,r20
 773 002e C901      		movw r24,r18
 774               	.LVL21:
 775 0030 4097      		sbiw r24,16
 776 0032 A109      		sbc r26,__zero_reg__
 777 0034 B109      		sbc r27,__zero_reg__
 778 0036 B695      		lsr r27
 779 0038 A795      		ror r26
 780 003a 9795      		ror r25
 781 003c 8795      		ror r24
 782 003e 282F      		mov r18,r24
 783               	.LVL22:
 251:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     clock_speed = i2cp->config->clock_speed;
 252:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 253:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* Configure baudrate. */
 254:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWBR = ((F_CPU / clock_speed) - 16) / 2;
 784               		.loc 1 254 0
 785 0040 2093 B800 		sts 184,r18
 786 0044 0895      		ret
 787               	.LVL23:
 788               	.L76:
 789 0046 28E4      		ldi r18,lo8(72)
 790               	.LVL24:
 791 0048 2093 B800 		sts 184,r18
 792 004c 0895      		ret
 793               		.cfi_endproc
 794               	.LFE182:
 796               		.section	.text.i2c_lld_stop,"ax",@progbits
 797               	.global	i2c_lld_stop
 799               	i2c_lld_stop:
 800               	.LFB183:
 255:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** } 
 256:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 257:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Deactivates the I2C peripheral.
 258:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 259:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in] i2cp  pointer to the @p I2CDriver object
 260:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 261:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 262:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 263:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_stop(I2CDriver *i2cp) {
 801               		.loc 1 263 0
 802               		.cfi_startproc
 803               	.LVL25:
 804               	/* prologue: function */
 805               	/* frame size = 0 */
 806               	/* stack size = 0 */
 807               	.L__stack_usage = 0
 264:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 265:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->state != I2C_STOP) {
 808               		.loc 1 265 0
 809 0000 FC01      		movw r30,r24
 810 0002 8081      		ld r24,Z
 811               	.LVL26:
 812 0004 8130      		cpi r24,lo8(1)
 813 0006 01F0      		breq .L77
 266:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     /* Disable TWI subsystem and stop all operations. */
 267:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR &= ~(1 << TWEN);
 814               		.loc 1 267 0
 815 0008 8091 BC00 		lds r24,188
 816 000c 8B7F      		andi r24,lo8(-5)
 817 000e 8093 BC00 		sts 188,r24
 818               	.L77:
 819 0012 0895      		ret
 820               		.cfi_endproc
 821               	.LFE183:
 823               		.section	.text.i2c_lld_master_receive_timeout,"ax",@progbits
 824               	.global	i2c_lld_master_receive_timeout
 826               	i2c_lld_master_receive_timeout:
 827               	.LFB184:
 268:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 269:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 270:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 271:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 272:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Receives data via the I2C bus as master.
 273:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 274:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   i2cp      pointer to the @p I2CDriver object
 275:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   addr      slave device address
 276:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[out]  rxbuf     pointer to the receive buffer
 277:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   rxbytes   number of bytes to be received
 278:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   timeout   the number of ticks before the operation timeouts,
 279:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        the following special values are allowed:
 280:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        - @a TIME_INFINITE no timeout
 281:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      
 282:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @return              The operation status.
 283:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 284:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 285:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 286:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 287:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 288:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 289:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 290:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_master_receive_timeout(I2CDriver *i2cp, i2caddr_t addr,
 291:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                      uint8_t *rxbuf, size_t rxbytes,
 292:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                      systime_t timeout) {
 828               		.loc 1 292 0
 829               		.cfi_startproc
 830               	.LVL27:
 831               	/* prologue: function */
 832               	/* frame size = 0 */
 833               	/* stack size = 0 */
 834               	.L__stack_usage = 0
 835 0000 FC01      		movw r30,r24
 293:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 294:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 836               		.loc 1 294 0
 837 0002 1382      		std Z+3,__zero_reg__
 295:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->addr = addr;
 838               		.loc 1 295 0
 839 0004 6687      		std Z+14,r22
 296:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbuf = NULL;
 840               		.loc 1 296 0
 841 0006 108A      		std Z+16,__zero_reg__
 842 0008 1786      		std Z+15,__zero_reg__
 297:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = 0;
 843               		.loc 1 297 0
 844 000a 128A      		std Z+18,__zero_reg__
 845 000c 118A      		std Z+17,__zero_reg__
 298:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 846               		.loc 1 298 0
 847 000e 148A      		std Z+20,__zero_reg__
 848 0010 138A      		std Z+19,__zero_reg__
 299:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 849               		.loc 1 299 0
 850 0012 568B      		std Z+22,r21
 851 0014 458B      		std Z+21,r20
 300:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 852               		.loc 1 300 0
 853 0016 308F      		std Z+24,r19
 854 0018 278B      		std Z+23,r18
 301:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 855               		.loc 1 301 0
 856 001a 128E      		std Z+26,__zero_reg__
 857 001c 118E      		std Z+25,__zero_reg__
 302:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 303:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 858               		.loc 1 303 0
 859 001e 85EA      		ldi r24,lo8(-91)
 860               	.LVL28:
 861 0020 8093 BC00 		sts 188,r24
 862               	.LVL29:
 863               	.LBB50:
 864               	.LBB51:
 760:../../../os/hal/osal/rt/osal.h **** }
 865               		.loc 2 760 0
 866 0024 6FEF      		ldi r22,lo8(-1)
 867 0026 7FEF      		ldi r23,lo8(-1)
 868               	.LVL30:
 869 0028 CF01      		movw r24,r30
 870 002a 0C96      		adiw r24,12
 871               	.LVL31:
 872 002c 0C94 0000 		jmp chThdSuspendTimeoutS
 873               	.LVL32:
 874               	.LBE51:
 875               	.LBE50:
 876               		.cfi_endproc
 877               	.LFE184:
 879               		.section	.text.i2c_lld_master_transmit_timeout,"ax",@progbits
 880               	.global	i2c_lld_master_transmit_timeout
 882               	i2c_lld_master_transmit_timeout:
 883               	.LFB185:
 304:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 305:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);
 306:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 307:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 308:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /**
 309:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @brief   Transmits data via the I2C bus as master.
 310:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 311:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   i2cp      pointer to the @p I2CDriver object
 312:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   addr      slave device address
 313:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   txbuf     pointer to the transmit buffer
 314:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   txbytes   number of bytes to be transmitted
 315:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[out]  rxbuf     pointer to the receive buffer
 316:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   rxbytes   number of bytes to be received
 317:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @param[in]   timeout   the number of ticks before the operation timeouts,
 318:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        the following special values are allowed:
 319:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                        - @a TIME_INFINITE no timeout
 320:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      
 321:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @return              The operation status.
 322:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_OK       if the function succeeded.
 323:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_RESET    if one or more I2C errors occurred, the errors can
 324:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      be retrieved using @p i2cGetErrors().
 325:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @retval MSG_TIMEOUT  if a timeout occurred before operation end. <b>After a
 326:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      timeout the driver must be stopped and restarted
 327:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *                      because the bus is in an uncertain state</b>.
 328:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 329:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 330:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 331:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_master_transmit_timeout(I2CDriver *i2cp, i2caddr_t addr,
 332:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       const uint8_t *txbuf, size_t txbytes,
 333:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       uint8_t *rxbuf, size_t rxbytes,
 334:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****                                       systime_t timeout) {
 884               		.loc 1 334 0
 885               		.cfi_startproc
 886               	.LVL33:
 887 0000 EF92      		push r14
 888               	.LCFI14:
 889               		.cfi_def_cfa_offset 3
 890               		.cfi_offset 14, -2
 891 0002 FF92      		push r15
 892               	.LCFI15:
 893               		.cfi_def_cfa_offset 4
 894               		.cfi_offset 15, -3
 895 0004 0F93      		push r16
 896               	.LCFI16:
 897               		.cfi_def_cfa_offset 5
 898               		.cfi_offset 16, -4
 899 0006 1F93      		push r17
 900               	.LCFI17:
 901               		.cfi_def_cfa_offset 6
 902               		.cfi_offset 17, -5
 903               	/* prologue: function */
 904               	/* frame size = 0 */
 905               	/* stack size = 4 */
 906               	.L__stack_usage = 4
 907 0008 FC01      		movw r30,r24
 335:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 336:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->errors = I2C_NO_ERROR;
 908               		.loc 1 336 0
 909 000a 1382      		std Z+3,__zero_reg__
 337:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->addr = addr;
 910               		.loc 1 337 0
 911 000c 6687      		std Z+14,r22
 338:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbuf = txbuf;
 912               		.loc 1 338 0
 913 000e 508B      		std Z+16,r21
 914 0010 4787      		std Z+15,r20
 339:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txbytes = txbytes;
 915               		.loc 1 339 0
 916 0012 328B      		std Z+18,r19
 917 0014 218B      		std Z+17,r18
 340:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->txidx = 0;
 918               		.loc 1 340 0
 919 0016 148A      		std Z+20,__zero_reg__
 920 0018 138A      		std Z+19,__zero_reg__
 341:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbuf = rxbuf;
 921               		.loc 1 341 0
 922 001a 168B      		std Z+22,r17
 923 001c 058B      		std Z+21,r16
 342:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxbytes;
 924               		.loc 1 342 0
 925 001e F08E      		std Z+24,r15
 926 0020 E78A      		std Z+23,r14
 343:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxidx = 0;
 927               		.loc 1 343 0
 928 0022 128E      		std Z+26,__zero_reg__
 929 0024 118E      		std Z+25,__zero_reg__
 344:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 345:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWCR = ((1 << TWSTA) | (1 << TWINT) | (1 << TWEN) | (1 << TWIE));
 930               		.loc 1 345 0
 931 0026 85EA      		ldi r24,lo8(-91)
 932               	.LVL34:
 933 0028 8093 BC00 		sts 188,r24
 934               	.LVL35:
 935               	.LBB52:
 936               	.LBB53:
 760:../../../os/hal/osal/rt/osal.h **** }
 937               		.loc 2 760 0
 938 002c 6FEF      		ldi r22,lo8(-1)
 939 002e 7FEF      		ldi r23,lo8(-1)
 940               	.LVL36:
 941 0030 CF01      		movw r24,r30
 942 0032 0C96      		adiw r24,12
 943               	.LVL37:
 944               	/* epilogue start */
 945               	.LBE53:
 946               	.LBE52:
 346:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 347:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   return osalThreadSuspendTimeoutS(&i2cp->thread, TIME_INFINITE);
 348:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 947               		.loc 1 348 0
 948 0034 1F91      		pop r17
 949 0036 0F91      		pop r16
 950               	.LVL38:
 951 0038 FF90      		pop r15
 952 003a EF90      		pop r14
 953               	.LVL39:
 954               	.LBB55:
 955               	.LBB54:
 760:../../../os/hal/osal/rt/osal.h **** }
 956               		.loc 2 760 0
 957 003c 0C94 0000 		jmp chThdSuspendTimeoutS
 958               	.LVL40:
 959               	.LBE54:
 960               	.LBE55:
 961               		.cfi_endproc
 962               	.LFE185:
 964               		.section	.text.i2c_lld_matchAddress,"ax",@progbits
 965               	.global	i2c_lld_matchAddress
 967               	i2c_lld_matchAddress:
 968               	.LFB188:
 349:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 350:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** static void i2c_lld_setup_rx_transfer(I2CDriver *i2cp) {
 351:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   uint32_t reload;
 352:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   size_t n;
 353:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation (device constraint). */
 354:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   n = i2cp->rxbytes;
 355:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (n > 255U) {
 356:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     n = 255U;
 357:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 358:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else {
 359:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     reload = 0U;
 360:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 361:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 362:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 363:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** static void i2c_lld_setup_tx_transfer(I2CDriver *i2cp) {
 364:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   uint32_t reload;
 365:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   size_t n;
 366:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* The unit can transfer 255 bytes maximum in a single operation. */
 367:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   n = i2cp->txbytes;            // Get transaction size from DMA or buffer as configured
 368:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (n > 255U) {
 369:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     n = 255U;  
 370:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 371:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else {
 372:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     reload = 0U;
 373:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 374:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 375:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*
 376:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * brief Configure to respond to messages directed to the given i2cadr
 377:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @param[in] i2cp      pointer to the @p I2CDriver object
 378:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *  @param[in] i2cadr    I2C bus address
 379:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @return              Length of message OR the type of event received
 380:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @retval I2C_OK       Success
 381:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @retval I2C_ERROR    Cannot match address in addition of those already (como chegar aqui?)
 382:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *  * @details MatchAddress calls are cumulative.
 383:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *          Specify address zero to match I2C "all call"
 384:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *          Most hardware supports matching only a signle nonzero address.
 385:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** *
 386:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** * @api
 387:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** */
 388:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** msg_t i2c_lld_matchAddress(I2CDriver *i2cp, i2caddr_t  i2cadr){
 969               		.loc 1 388 0
 970               		.cfi_startproc
 971               	.LVL41:
 972               	/* prologue: function */
 973               	/* frame size = 0 */
 974               	/* stack size = 0 */
 975               	.L__stack_usage = 0
 389:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cadr != 0 ){ 
 976               		.loc 1 389 0
 977 0000 6111      		cpse r22,__zero_reg__
 978 0002 00C0      		rjmp .L87
 390:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     uint32_t adr = i2cadr << 1;                                     /*by pass General Call ADDR, ad
 391:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->addr = adr;                                               /*Implement slave addr*/
 392:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ( (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1<< TWEA)); 
 393:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return I2C_NO_ERROR; 
 394:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 395:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   else
 396:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return i2c_lld_get_slaveErrors(i2cp);  /*find a ERROR*/
 979               		.loc 1 396 0
 980 0004 FC01      		movw r30,r24
 981 0006 848D      		ldd r24,Z+28
 982               	.LVL42:
 983 0008 90E0      		ldi r25,0
 397:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 984               		.loc 1 397 0
 985 000a 0895      		ret
 986               	.LVL43:
 987               	.L87:
 988               	.LBB56:
 391:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     TWCR = ( (1 << TWINT) | (1 << TWEN) | (1 << TWIE) | (1<< TWEA)); 
 989               		.loc 1 391 0
 990 000c 70E0      		ldi r23,0
 991 000e 660F      		lsl r22
 992 0010 771F      		rol r23
 993               	.LVL44:
 994 0012 FC01      		movw r30,r24
 995 0014 6687      		std Z+14,r22
 392:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     return I2C_NO_ERROR; 
 996               		.loc 1 392 0
 997 0016 85EC      		ldi r24,lo8(-59)
 998               	.LVL45:
 999 0018 8093 BC00 		sts 188,r24
 393:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     }
 1000               		.loc 1 393 0
 1001 001c 80E0      		ldi r24,0
 1002 001e 90E0      		ldi r25,0
 1003 0020 0895      		ret
 1004               	.LBE56:
 1005               		.cfi_endproc
 1006               	.LFE188:
 1008               		.section	.text.i2c_ld_unmatchAddress,"ax",@progbits
 1009               	.global	i2c_ld_unmatchAddress
 1011               	i2c_ld_unmatchAddress:
 1012               	.LFB189:
 398:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*stop respond to certain addr*/
 399:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 400:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_ld_unmatchAddress(I2CDriver *i2cp, i2caddr_t  i2cadr){
 1013               		.loc 1 400 0
 1014               		.cfi_startproc
 1015               	.LVL46:
 1016               	/* prologue: function */
 1017               	/* frame size = 0 */
 1018               	/* stack size = 0 */
 1019               	.L__stack_usage = 0
 401:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   
 402:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (i2cp->addr == i2cadr && i2cadr != 0)
 1020               		.loc 1 402 0
 1021 0000 FC01      		movw r30,r24
 1022 0002 8685      		ldd r24,Z+14
 1023               	.LVL47:
 1024 0004 8613      		cpse r24,r22
 1025               	.L88:
 1026 0006 0895      		ret
 1027               	.L93:
 1028               		.loc 1 402 0 is_stmt 0 discriminator 1
 1029 0008 8823      		tst r24
 1030 000a 01F0      		breq .L88
 403:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWAR = 0; //unset previously configured slave addr
 1031               		.loc 1 403 0 is_stmt 1
 1032 000c 1092 BA00 		sts 186,__zero_reg__
 1033 0010 0895      		ret
 1034               		.cfi_endproc
 1035               	.LFE189:
 1037               		.section	.text.i2c_lld_unmatchAll,"ax",@progbits
 1038               	.global	i2c_lld_unmatchAll
 1040               	i2c_lld_unmatchAll:
 1041               	.LFB190:
 404:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 405:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 406:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void i2c_lld_unmatchAll(I2CDriver *i2cp){
 1042               		.loc 1 406 0
 1043               		.cfi_startproc
 1044               	.LVL48:
 1045               	/* prologue: function */
 1046               	/* frame size = 0 */
 1047               	/* stack size = 0 */
 1048               	.L__stack_usage = 0
 407:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   TWAR = 0; //force unset previously configured slave addr
 1049               		.loc 1 407 0
 1050 0000 1092 BA00 		sts 186,__zero_reg__
 1051 0004 0895      		ret
 1052               		.cfi_endproc
 1053               	.LFE190:
 1055               		.section	.text.i2c_lld_slaveReceive,"ax",@progbits
 1056               	.global	i2c_lld_slaveReceive
 1058               	i2c_lld_slaveReceive:
 1059               	.LFB191:
 408:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 409:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*@brief   Configure callbacks & buffers to receive messages
 410:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @details             Call i2cMatchAddress() after this to start processing
 411:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     Enabling match addresses before installing handler callbacks can
 412:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     result in locking the I2C bus when a master accesses those
 413:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *     unconfigured slave addresses
 414:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  *
 415:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  * @notapi
 416:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  */
 417:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 418:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** /*Usar as funcoes do mestre como referência e ver diferenças*/
 419:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void  i2c_lld_slaveReceive(I2CDriver *i2cp, const I2CSlaveMsg *rxMsg){
 1060               		.loc 1 419 0
 1061               		.cfi_startproc
 1062               	.LVL49:
 1063               	/* prologue: function */
 1064               	/* frame size = 0 */
 1065               	/* stack size = 0 */
 1066               	.L__stack_usage = 0
 1067 0000 FC01      		movw r30,r24
 420:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   osalDbgCheck((rxMsg && rxMsg->size <= 0xffff));
 421:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->slaveNextRx = rxMsg;
 1068               		.loc 1 421 0
 1069 0002 76A3      		std Z+38,r23
 1070 0004 65A3      		std Z+37,r22
 422:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (rxMsg->body && rxMsg->size) {
 1071               		.loc 1 422 0
 1072 0006 DB01      		movw r26,r22
 1073 0008 1296      		adiw r26,2
 1074 000a 8D91      		ld r24,X+
 1075 000c 9C91      		ld r25,X
 1076 000e 1397      		sbiw r26,2+1
 1077               	.LVL50:
 1078 0010 0097      		sbiw r24,0
 1079 0012 01F0      		breq .L95
 1080               		.loc 1 422 0 is_stmt 0 discriminator 1
 1081 0014 2D91      		ld r18,X+
 1082 0016 3C91      		ld r19,X
 1083 0018 2115      		cp r18,__zero_reg__
 1084 001a 3105      		cpc r19,__zero_reg__
 1085 001c 01F0      		breq .L95
 423:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   /* We can receive now! */
 424:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->slaveRx = rxMsg;
 1086               		.loc 1 424 0 is_stmt 1
 1087 001e 72A3      		std Z+34,r23
 1088 0020 61A3      		std Z+33,r22
 425:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxptr   = rxMsg->body;
 1089               		.loc 1 425 0
 1090 0022 92A7      		std Z+42,r25
 1091 0024 81A7      		std Z+41,r24
 426:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->rxbytes = rxMsg->size;
 1092               		.loc 1 426 0
 1093 0026 308F      		std Z+24,r19
 1094 0028 278B      		std Z+23,r18
 1095               	.LVL51:
 1096               	.L95:
 1097 002a 0895      		ret
 1098               		.cfi_endproc
 1099               	.LFE191:
 1101               		.section	.text.i2c_lld_slaveReply,"ax",@progbits
 1102               	.global	i2c_lld_slaveReply
 1104               	i2c_lld_slaveReply:
 1105               	.LFB192:
 427:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** i2c_lld_setup_rx_transfer(i2cp);			        // Set up the transfer
 428:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   }
 429:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** }
 430:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** 
 431:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c **** void  i2c_lld_slaveReply(I2CDriver *i2cp, const I2CSlaveMsg *replyMsg){
 1106               		.loc 1 431 0
 1107               		.cfi_startproc
 1108               	.LVL52:
 1109               	/* prologue: function */
 1110               	/* frame size = 0 */
 1111               	/* stack size = 0 */
 1112               	.L__stack_usage = 0
 1113 0000 FC01      		movw r30,r24
 432:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****  osalDbgCheck((replyMsg && replyMsg->size <= 0xffff));
 433:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   
 434:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   i2cp->slaveNextReply = replyMsg;
 1114               		.loc 1 434 0
 1115 0002 70A7      		std Z+40,r23
 1116 0004 67A3      		std Z+39,r22
 435:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****   if (replyMsg->body && replyMsg->size){
 1117               		.loc 1 435 0
 1118 0006 DB01      		movw r26,r22
 1119 0008 1296      		adiw r26,2
 1120 000a 8D91      		ld r24,X+
 1121 000c 9C91      		ld r25,X
 1122 000e 1397      		sbiw r26,2+1
 1123               	.LVL53:
 1124 0010 0097      		sbiw r24,0
 1125 0012 01F0      		breq .L103
 1126               		.loc 1 435 0 is_stmt 0 discriminator 1
 1127 0014 2D91      		ld r18,X+
 1128 0016 3C91      		ld r19,X
 1129 0018 2115      		cp r18,__zero_reg__
 1130 001a 3105      		cpc r19,__zero_reg__
 1131 001c 01F0      		breq .L103
 436:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     i2cp->slaveReply = replyMsg;
 1132               		.loc 1 436 0 is_stmt 1
 1133 001e 74A3      		std Z+36,r23
 1134 0020 63A3      		std Z+35,r22
 437:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****     /* slave TX setup -- we can reply now! */  
 438:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       /* Start transmission */
 439:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       i2cp->txptr   = replyMsg->body;
 1135               		.loc 1 439 0
 1136 0022 94A7      		std Z+44,r25
 1137 0024 83A7      		std Z+43,r24
 440:../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.c ****       i2cp->txbytes = replyMsg->size;
 1138               		.loc 1 440 0
 1139 0026 328B      		std Z+18,r19
 1140 0028 218B      		std Z+17,r18
 1141               	.LVL54:
 1142               	.L103:
 1143 002a 0895      		ret
 1144               		.cfi_endproc
 1145               	.LFE192:
 1147               		.comm	I2CD1,45,1
 1148               		.text
 1149               	.Letext0:
 1150               		.file 3 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 1151               		.file 4 "/usr/lib/avr/include/stdint.h"
 1152               		.file 5 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1153               		.file 6 "../../../os/rt/include/chsystypes.h"
 1154               		.file 7 "../../../os/rt/include/chschd.h"
 1155               		.file 8 "../../../os/rt/include/chtime.h"
 1156               		.file 9 "../../../os/common/ports/AVR/chcore.h"
 1157               		.file 10 "../../../os/rt/include/chsem.h"
 1158               		.file 11 "../../../os/rt/include/chmtx.h"
 1159               		.file 12 "../../../os/hal/include/hal_i2c.h"
 1160               		.file 13 "../../../os/hal/ports/AVR/MEGA/LLD/I2Cv1/hal_i2c_lld.h"
 1161               		.file 14 "../../../os/rt/include/chsys.h"
 1162               		.file 15 "../../../os/rt/include/chthreads.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hal_i2c_lld.c
     /tmp/cclSS32J.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclSS32J.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclSS32J.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclSS32J.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclSS32J.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclSS32J.s:13     .text.__vector_24:0000000000000000 __vector_24
                            *COM*:000000000000002d I2CD1
     /tmp/cclSS32J.s:717    .text.i2c_lld_init:0000000000000000 i2c_lld_init
     /tmp/cclSS32J.s:740    .text.i2c_lld_start:0000000000000000 i2c_lld_start
     /tmp/cclSS32J.s:799    .text.i2c_lld_stop:0000000000000000 i2c_lld_stop
     /tmp/cclSS32J.s:826    .text.i2c_lld_master_receive_timeout:0000000000000000 i2c_lld_master_receive_timeout
     /tmp/cclSS32J.s:882    .text.i2c_lld_master_transmit_timeout:0000000000000000 i2c_lld_master_transmit_timeout
     /tmp/cclSS32J.s:967    .text.i2c_lld_matchAddress:0000000000000000 i2c_lld_matchAddress
     /tmp/cclSS32J.s:1011   .text.i2c_ld_unmatchAddress:0000000000000000 i2c_ld_unmatchAddress
     /tmp/cclSS32J.s:1040   .text.i2c_lld_unmatchAll:0000000000000000 i2c_lld_unmatchAll
     /tmp/cclSS32J.s:1058   .text.i2c_lld_slaveReceive:0000000000000000 i2c_lld_slaveReceive
     /tmp/cclSS32J.s:1104   .text.i2c_lld_slaveReply:0000000000000000 i2c_lld_slaveReply

UNDEFINED SYMBOLS
__avr_in_isr
chThdResumeI
chSchIsPreemptionRequired
chSchDoReschedule
__tablejump2__
i2cObjectInit
__udivmodsi4
chThdSuspendTimeoutS
__do_clear_bss
