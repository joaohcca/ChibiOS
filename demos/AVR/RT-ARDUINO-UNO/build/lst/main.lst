   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 426C 696E 		.string	"Blinker"
  12      6B65 7200 
  13               		.section	.text.Thread1,"ax",@progbits
  15               	Thread1:
  16               	.LFB180:
  17               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio
   3:main.c        **** 
   4:main.c        ****     Licensed under the Apache License, Version 2.0 (the "License");
   5:main.c        ****     you may not use this file except in compliance with the License.
   6:main.c        ****     You may obtain a copy of the License at
   7:main.c        **** 
   8:main.c        ****         http://www.apache.org/licenses/LICENSE-2.0
   9:main.c        **** 
  10:main.c        ****     Unless required by applicable law or agreed to in writing, software
  11:main.c        ****     distributed under the License is distributed on an "AS IS" BASIS,
  12:main.c        ****     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  13:main.c        ****     See the License for the specific language governing permissions and
  14:main.c        ****     limitations under the License.
  15:main.c        **** */
  16:main.c        **** 
  17:main.c        **** #include "ch.h"
  18:main.c        **** #include "hal.h"
  19:main.c        **** #include "hal_i2c.h"
  20:main.c        **** /*
  21:main.c        ****  * LED blinker thread, times are in milliseconds.
  22:main.c        ****  */
  23:main.c        **** static THD_WORKING_AREA(waThread1, 32);
  24:main.c        **** static THD_FUNCTION(Thread1, arg) {
  18               		.loc 1 24 0
  19               		.cfi_startproc
  20               	.LVL0:
  21               	/* prologue: function */
  22               	/* frame size = 0 */
  23               	/* stack size = 0 */
  24               	.L__stack_usage = 0
  25               	.LBB4:
  26               	.LBB5:
  27               		.file 2 "../../../os/rt/include/chregistry.h"
   1:../../../os/rt/include/chregistry.h **** /*
   2:../../../os/rt/include/chregistry.h ****     ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio.
   3:../../../os/rt/include/chregistry.h **** 
   4:../../../os/rt/include/chregistry.h ****     This file is part of ChibiOS.
   5:../../../os/rt/include/chregistry.h **** 
   6:../../../os/rt/include/chregistry.h ****     ChibiOS is free software; you can redistribute it and/or modify
   7:../../../os/rt/include/chregistry.h ****     it under the terms of the GNU General Public License as published by
   8:../../../os/rt/include/chregistry.h ****     the Free Software Foundation; either version 3 of the License, or
   9:../../../os/rt/include/chregistry.h ****     (at your option) any later version.
  10:../../../os/rt/include/chregistry.h **** 
  11:../../../os/rt/include/chregistry.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/rt/include/chregistry.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/rt/include/chregistry.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/rt/include/chregistry.h ****     GNU General Public License for more details.
  15:../../../os/rt/include/chregistry.h **** 
  16:../../../os/rt/include/chregistry.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/rt/include/chregistry.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/rt/include/chregistry.h **** */
  19:../../../os/rt/include/chregistry.h **** 
  20:../../../os/rt/include/chregistry.h **** /**
  21:../../../os/rt/include/chregistry.h ****  * @file    chregistry.h
  22:../../../os/rt/include/chregistry.h ****  * @brief   Threads registry macros and structures.
  23:../../../os/rt/include/chregistry.h ****  *
  24:../../../os/rt/include/chregistry.h ****  * @addtogroup registry
  25:../../../os/rt/include/chregistry.h ****  * @{
  26:../../../os/rt/include/chregistry.h ****  */
  27:../../../os/rt/include/chregistry.h **** 
  28:../../../os/rt/include/chregistry.h **** #ifndef CHREGISTRY_H
  29:../../../os/rt/include/chregistry.h **** #define CHREGISTRY_H
  30:../../../os/rt/include/chregistry.h **** 
  31:../../../os/rt/include/chregistry.h **** #if (CH_CFG_USE_REGISTRY == TRUE) || defined(__DOXYGEN__)
  32:../../../os/rt/include/chregistry.h **** 
  33:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  34:../../../os/rt/include/chregistry.h **** /* Module constants.                                                         */
  35:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  36:../../../os/rt/include/chregistry.h **** 
  37:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  38:../../../os/rt/include/chregistry.h **** /* Module pre-compile time settings.                                         */
  39:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  40:../../../os/rt/include/chregistry.h **** 
  41:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  42:../../../os/rt/include/chregistry.h **** /* Derived constants and error checks.                                       */
  43:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  44:../../../os/rt/include/chregistry.h **** 
  45:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  46:../../../os/rt/include/chregistry.h **** /* Module data structures and types.                                         */
  47:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  48:../../../os/rt/include/chregistry.h **** 
  49:../../../os/rt/include/chregistry.h **** /**
  50:../../../os/rt/include/chregistry.h ****  * @brief   ChibiOS/RT memory signature record.
  51:../../../os/rt/include/chregistry.h ****  */
  52:../../../os/rt/include/chregistry.h **** typedef struct {
  53:../../../os/rt/include/chregistry.h ****   char      identifier[4];          /**< @brief Always set to "main".       */
  54:../../../os/rt/include/chregistry.h ****   uint8_t   zero;                   /**< @brief Must be zero.               */
  55:../../../os/rt/include/chregistry.h ****   uint8_t   size;                   /**< @brief Size of this structure.     */
  56:../../../os/rt/include/chregistry.h ****   uint16_t  version;                /**< @brief Encoded ChibiOS/RT version. */
  57:../../../os/rt/include/chregistry.h ****   uint8_t   ptrsize;                /**< @brief Size of a pointer.          */
  58:../../../os/rt/include/chregistry.h ****   uint8_t   timesize;               /**< @brief Size of a @p systime_t.     */
  59:../../../os/rt/include/chregistry.h ****   uint8_t   threadsize;             /**< @brief Size of a @p thread_t.      */
  60:../../../os/rt/include/chregistry.h ****   uint8_t   off_prio;               /**< @brief Offset of @p prio field.    */
  61:../../../os/rt/include/chregistry.h ****   uint8_t   off_ctx;                /**< @brief Offset of @p ctx field.     */
  62:../../../os/rt/include/chregistry.h ****   uint8_t   off_newer;              /**< @brief Offset of @p newer field.   */
  63:../../../os/rt/include/chregistry.h ****   uint8_t   off_older;              /**< @brief Offset of @p older field.   */
  64:../../../os/rt/include/chregistry.h ****   uint8_t   off_name;               /**< @brief Offset of @p name field.    */
  65:../../../os/rt/include/chregistry.h ****   uint8_t   off_stklimit;           /**< @brief Offset of @p stklimit field.*/
  66:../../../os/rt/include/chregistry.h ****   uint8_t   off_state;              /**< @brief Offset of @p state field.   */
  67:../../../os/rt/include/chregistry.h ****   uint8_t   off_flags;              /**< @brief Offset of @p flags field.   */
  68:../../../os/rt/include/chregistry.h ****   uint8_t   off_refs;               /**< @brief Offset of @p refs field.    */
  69:../../../os/rt/include/chregistry.h ****   uint8_t   off_preempt;            /**< @brief Offset of @p preempt field. */
  70:../../../os/rt/include/chregistry.h ****   uint8_t   off_time;               /**< @brief Offset of @p time field.    */
  71:../../../os/rt/include/chregistry.h **** } chdebug_t;
  72:../../../os/rt/include/chregistry.h **** 
  73:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  74:../../../os/rt/include/chregistry.h **** /* Module macros.                                                            */
  75:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
  76:../../../os/rt/include/chregistry.h **** 
  77:../../../os/rt/include/chregistry.h **** /**
  78:../../../os/rt/include/chregistry.h ****  * @brief   Removes a thread from the registry list.
  79:../../../os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
  80:../../../os/rt/include/chregistry.h ****  *
  81:../../../os/rt/include/chregistry.h ****  * @param[in] tp        thread to remove from the registry
  82:../../../os/rt/include/chregistry.h ****  */
  83:../../../os/rt/include/chregistry.h **** #define REG_REMOVE(tp) {                                                    \
  84:../../../os/rt/include/chregistry.h ****   (tp)->older->newer = (tp)->newer;                                         \
  85:../../../os/rt/include/chregistry.h ****   (tp)->newer->older = (tp)->older;                                         \
  86:../../../os/rt/include/chregistry.h **** }
  87:../../../os/rt/include/chregistry.h **** 
  88:../../../os/rt/include/chregistry.h **** /**
  89:../../../os/rt/include/chregistry.h ****  * @brief   Adds a thread to the registry list.
  90:../../../os/rt/include/chregistry.h ****  * @note    This macro is not meant for use in application code.
  91:../../../os/rt/include/chregistry.h ****  *
  92:../../../os/rt/include/chregistry.h ****  * @param[in] tp        thread to add to the registry
  93:../../../os/rt/include/chregistry.h ****  */
  94:../../../os/rt/include/chregistry.h **** #define REG_INSERT(tp) {                                                    \
  95:../../../os/rt/include/chregistry.h ****   (tp)->newer = (thread_t *)&ch.rlist;                                      \
  96:../../../os/rt/include/chregistry.h ****   (tp)->older = ch.rlist.older;                                           \
  97:../../../os/rt/include/chregistry.h ****   (tp)->older->newer = (tp);                                                \
  98:../../../os/rt/include/chregistry.h ****   ch.rlist.older = (tp);                                                  \
  99:../../../os/rt/include/chregistry.h **** }
 100:../../../os/rt/include/chregistry.h **** 
 101:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
 102:../../../os/rt/include/chregistry.h **** /* External declarations.                                                    */
 103:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
 104:../../../os/rt/include/chregistry.h **** 
 105:../../../os/rt/include/chregistry.h **** #ifdef __cplusplus
 106:../../../os/rt/include/chregistry.h **** extern "C" {
 107:../../../os/rt/include/chregistry.h **** #endif
 108:../../../os/rt/include/chregistry.h ****   extern ROMCONST chdebug_t ch_debug;
 109:../../../os/rt/include/chregistry.h ****   thread_t *chRegFirstThread(void);
 110:../../../os/rt/include/chregistry.h ****   thread_t *chRegNextThread(thread_t *tp);
 111:../../../os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByName(const char *name);
 112:../../../os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByPointer(thread_t *tp);
 113:../../../os/rt/include/chregistry.h ****   thread_t *chRegFindThreadByWorkingArea(stkalign_t *wa);
 114:../../../os/rt/include/chregistry.h **** #ifdef __cplusplus
 115:../../../os/rt/include/chregistry.h **** }
 116:../../../os/rt/include/chregistry.h **** #endif
 117:../../../os/rt/include/chregistry.h **** 
 118:../../../os/rt/include/chregistry.h **** #endif /* CH_CFG_USE_REGISTRY == TRUE */
 119:../../../os/rt/include/chregistry.h **** 
 120:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
 121:../../../os/rt/include/chregistry.h **** /* Module inline functions.                                                  */
 122:../../../os/rt/include/chregistry.h **** /*===========================================================================*/
 123:../../../os/rt/include/chregistry.h **** 
 124:../../../os/rt/include/chregistry.h **** /**
 125:../../../os/rt/include/chregistry.h ****  * @brief   Sets the current thread name.
 126:../../../os/rt/include/chregistry.h ****  * @pre     This function only stores the pointer to the name if the option
 127:../../../os/rt/include/chregistry.h ****  *          @p CH_CFG_USE_REGISTRY is enabled else no action is performed.
 128:../../../os/rt/include/chregistry.h ****  *
 129:../../../os/rt/include/chregistry.h ****  * @param[in] name      thread name as a zero terminated string
 130:../../../os/rt/include/chregistry.h ****  *
 131:../../../os/rt/include/chregistry.h ****  * @api
 132:../../../os/rt/include/chregistry.h ****  */
 133:../../../os/rt/include/chregistry.h **** static inline void chRegSetThreadName(const char *name) {
 134:../../../os/rt/include/chregistry.h **** 
 135:../../../os/rt/include/chregistry.h **** #if CH_CFG_USE_REGISTRY == TRUE
 136:../../../os/rt/include/chregistry.h ****   ch.rlist.current->name = name;
  28               		.loc 2 136 0
  29 0000 E091 0000 		lds r30,ch+11
  30 0004 F091 0000 		lds r31,ch+11+1
  31 0008 80E0      		ldi r24,lo8(.LC0)
  32 000a 90E0      		ldi r25,hi8(.LC0)
  33               	.LVL1:
  34 000c 9487      		std Z+12,r25
  35 000e 8387      		std Z+11,r24
  36               	.LBE5:
  37               	.LBE4:
  25:main.c        **** 
  26:main.c        ****   (void)arg;
  27:main.c        ****   chRegSetThreadName("Blinker");
  28:main.c        ****   while (true) {
  29:main.c        ****     palTogglePad(IOPORT2, PORTB_LED1);
  38               		.loc 1 29 0
  39 0010 C0E2      		ldi r28,lo8(32)
  40               	.L2:
  41               		.loc 1 29 0 is_stmt 0 discriminator 1
  42 0012 85B1      		in r24,0x5
  43 0014 8C27      		eor r24,r28
  44 0016 85B9      		out 0x5,r24
  30:main.c        ****     chThdSleepMilliseconds(1000);
  45               		.loc 1 30 0 is_stmt 1 discriminator 1
  46 0018 88E0      		ldi r24,lo8(8)
  47 001a 9DE3      		ldi r25,lo8(61)
  48 001c 0E94 0000 		call chThdSleep
  49               	.LVL2:
  50 0020 00C0      		rjmp .L2
  51               		.cfi_endproc
  52               	.LFE180:
  54               		.section	.rodata.str1.1
  55               	.LC1:
  56 0008 4865 6C6C 		.string	"Hello World!\r\n"
  56      6F20 576F 
  56      726C 6421 
  56      0D0A 00
  57               		.section	.text.startup.main,"ax",@progbits
  58               	.global	main
  60               	main:
  61               	.LFB181:
  31:main.c        ****   }
  32:main.c        **** }
  33:main.c        **** 
  34:main.c        **** /*
  35:main.c        ****  * Application entry point.
  36:main.c        ****  */
  37:main.c        **** int main(void) {
  62               		.loc 1 37 0
  63               		.cfi_startproc
  64               	/* prologue: function */
  65               	/* frame size = 0 */
  66               	/* stack size = 0 */
  67               	.L__stack_usage = 0
  38:main.c        **** 
  39:main.c        ****   /*
  40:main.c        ****    * System initializations.
  41:main.c        ****    * - HAL initialization, this also initializes the configured device drivers
  42:main.c        ****    *   and performs the board-specific initializations.
  43:main.c        ****    * - Kernel initialization, the main() function becomes a thread and the
  44:main.c        ****    *   RTOS is active.
  45:main.c        ****    */
  46:main.c        ****   halInit();
  68               		.loc 1 46 0
  69 0000 0E94 0000 		call halInit
  70               	.LVL3:
  47:main.c        ****   chSysInit();
  71               		.loc 1 47 0
  72 0004 0E94 0000 		call chSysInit
  73               	.LVL4:
  48:main.c        ****   i2cInit();  
  74               		.loc 1 48 0
  75 0008 0E94 0000 		call i2cInit
  76               	.LVL5:
  49:main.c        ****   /*
  50:main.c        ****    * Activates the serial driver 1 using the driver default configuration.
  51:main.c        ****    */
  52:main.c        ****   sdStart(&SD1, NULL);
  77               		.loc 1 52 0
  78 000c 60E0      		ldi r22,0
  79 000e 70E0      		ldi r23,0
  80 0010 80E0      		ldi r24,lo8(SD1)
  81 0012 90E0      		ldi r25,hi8(SD1)
  82 0014 0E94 0000 		call sdStart
  83               	.LVL6:
  53:main.c        **** 
  54:main.c        ****   /*
  55:main.c        ****    * Starts the LED blinker thread.
  56:main.c        ****    */
  57:main.c        ****   chThdCreateStatic(waThread1, sizeof(waThread1), NORMALPRIO, Thread1, NULL);
  84               		.loc 1 57 0
  85 0018 00E0      		ldi r16,0
  86 001a 10E0      		ldi r17,0
  87 001c 20E0      		ldi r18,lo8(gs(Thread1))
  88 001e 30E0      		ldi r19,hi8(gs(Thread1))
  89 0020 40E8      		ldi r20,lo8(-128)
  90 0022 61E8      		ldi r22,lo8(-127)
  91 0024 70E0      		ldi r23,0
  92 0026 80E0      		ldi r24,lo8(waThread1)
  93 0028 90E0      		ldi r25,hi8(waThread1)
  94 002a 0E94 0000 		call chThdCreateStatic
  95               	.LVL7:
  58:main.c        **** 
  59:main.c        ****   chnWrite(&SD1, (const uint8_t *)"Hello World!\r\n", 14);
  96               		.loc 1 59 0
  97 002e E091 0000 		lds r30,SD1
  98 0032 F091 0000 		lds r31,SD1+1
  99 0036 0280      		ldd __tmp_reg__,Z+2
 100 0038 F381      		ldd r31,Z+3
 101 003a E02D      		mov r30,__tmp_reg__
 102 003c 4EE0      		ldi r20,lo8(14)
 103 003e 50E0      		ldi r21,0
 104 0040 60E0      		ldi r22,lo8(.LC1)
 105 0042 70E0      		ldi r23,hi8(.LC1)
 106 0044 80E0      		ldi r24,lo8(SD1)
 107 0046 90E0      		ldi r25,hi8(SD1)
 108 0048 0995      		icall
 109               	.LVL8:
 110               	.L5:
  60:main.c        **** 
  61:main.c        ****   while (TRUE) {
  62:main.c        ****     chThdSleepMilliseconds(1000);
 111               		.loc 1 62 0 discriminator 1
 112 004a 88E0      		ldi r24,lo8(8)
 113 004c 9DE3      		ldi r25,lo8(61)
 114 004e 0E94 0000 		call chThdSleep
 115               	.LVL9:
 116 0052 00C0      		rjmp .L5
 117               		.cfi_endproc
 118               	.LFE181:
 120               		.section	.bss.waThread1,"aw",@nobits
 123               	waThread1:
 124 0000 0000 0000 		.zero	129
 124      0000 0000 
 124      0000 0000 
 124      0000 0000 
 124      0000 0000 
 125               		.text
 126               	.Letext0:
 127               		.file 3 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 128               		.file 4 "/usr/lib/avr/include/stdint.h"
 129               		.file 5 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 130               		.file 6 "../../../os/rt/include/chsystypes.h"
 131               		.file 7 "../../../os/rt/include/chschd.h"
 132               		.file 8 "../../../os/rt/include/chtime.h"
 133               		.file 9 "../../../os/common/ports/AVR/chcore.h"
 134               		.file 10 "../../../os/rt/include/chsem.h"
 135               		.file 11 "../../../os/rt/include/chmtx.h"
 136               		.file 12 "../../../os/rt/include/chevents.h"
 137               		.file 13 "../../../os/hal/include/hal_queues.h"
 138               		.file 14 "../../../os/hal/ports/AVR/MEGA/LLD/GPIOv1/hal_pal_lld.h"
 139               		.file 15 "../../../os/hal/include/hal_serial.h"
 140               		.file 16 "../../../os/hal/ports/AVR/MEGA/LLD/USARTv1/hal_serial_lld.h"
 141               		.file 17 "../../../os/rt/include/chthreads.h"
 142               		.file 18 "../../../os/hal/include/hal.h"
 143               		.file 19 "../../../os/rt/include/chsys.h"
 144               		.file 20 "../../../os/hal/include/hal_i2c.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccX6AIA6.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccX6AIA6.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccX6AIA6.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccX6AIA6.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccX6AIA6.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccX6AIA6.s:15     .text.Thread1:0000000000000000 Thread1
     /tmp/ccX6AIA6.s:60     .text.startup.main:0000000000000000 main
     /tmp/ccX6AIA6.s:123    .bss.waThread1:0000000000000000 waThread1

UNDEFINED SYMBOLS
ch
chThdSleep
halInit
chSysInit
i2cInit
SD1
sdStart
chThdCreateStatic
__do_copy_data
__do_clear_bss
